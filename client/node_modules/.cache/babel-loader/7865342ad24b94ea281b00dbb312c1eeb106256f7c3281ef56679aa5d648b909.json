{"ast":null,"code":"import axios from 'axios';\n// Fix the process.env issue by providing a fallback\nconst API_BASE_URL = typeof window !== 'undefined' && window.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`Making ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} request to ${config.url}`);\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2, _error$response3, _error$response4, _error$response5, _error$response5$data;\n  console.error('Response error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 429) {\n    throw new Error('Too many requests. Please wait a moment and try again.');\n  }\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) >= 500) {\n    throw new Error('Server error. Please try again later.');\n  }\n  if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 404) {\n    throw new Error('Session not found. Please start over.');\n  }\n  throw new Error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || 'An unexpected error occurred');\n});\nexport const createUser = async userInfo => {\n  const response = await api.post('/users/create', userInfo);\n  return response.data;\n};\nexport const getUser = async sessionId => {\n  const response = await api.get(`/users/${sessionId}`);\n  return response.data;\n};\nexport const updateUserProgress = async (sessionId, progress) => {\n  const response = await api.put(`/users/${sessionId}/progress`, progress);\n  return response.data;\n};\nexport const completeUser = async sessionId => {\n  const response = await api.put(`/users/${sessionId}/complete`);\n  return response.data;\n};\nexport const saveResponse = async response => {\n  const apiResponse = await api.post('/responses', response);\n  return apiResponse.data;\n};\nexport const saveResponsesBatch = async (sessionId, responses) => {\n  const apiResponse = await api.post('/responses/batch', {\n    sessionId,\n    responses\n  });\n  return apiResponse.data;\n};\nexport const getUserResponses = async sessionId => {\n  const response = await api.get(`/responses/${sessionId}`);\n  return response.data;\n};\nexport const checkHealth = async () => {\n  const response = await api.get('/health');\n  return response.data;\n};","map":{"version":3,"names":["axios","API_BASE_URL","window","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","_error$response","_error$response2","_error$response3","_error$response4","_error$response5","_error$response5$data","data","message","status","Error","createUser","userInfo","post","getUser","sessionId","get","updateUserProgress","progress","put","completeUser","saveResponse","apiResponse","saveResponsesBatch","responses","getUserResponses","checkHealth"],"sources":["C:/Users/sangm/OneDrive - Brock University/CommonsenseForm/client/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { UserInfo, QuestionResponse } from '../types/index.ts';\r\n\r\n// Fix the process.env issue by providing a fallback\r\nconst API_BASE_URL = (typeof window !== 'undefined' && (window as any).REACT_APP_API_URL) || 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor for logging\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log(`Making ${config.method?.toUpperCase()} request to ${config.url}`);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('Request error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    console.error('Response error:', error.response?.data || error.message);\r\n    \r\n    if (error.response?.status === 429) {\r\n      throw new Error('Too many requests. Please wait a moment and try again.');\r\n    }\r\n    \r\n    if (error.response?.status >= 500) {\r\n      throw new Error('Server error. Please try again later.');\r\n    }\r\n    \r\n    if (error.response?.status === 404) {\r\n      throw new Error('Session not found. Please start over.');\r\n    }\r\n    \r\n    throw new Error(error.response?.data?.error || 'An unexpected error occurred');\r\n  }\r\n);\r\n\r\nexport const createUser = async (userInfo: UserInfo) => {\r\n  const response = await api.post('/users/create', userInfo);\r\n  return response.data;\r\n};\r\n\r\nexport const getUser = async (sessionId: string) => {\r\n  const response = await api.get(`/users/${sessionId}`);\r\n  return response.data;\r\n};\r\n\r\nexport const updateUserProgress = async (sessionId: string, progress: any) => {\r\n  const response = await api.put(`/users/${sessionId}/progress`, progress);\r\n  return response.data;\r\n};\r\n\r\nexport const completeUser = async (sessionId: string) => {\r\n  const response = await api.put(`/users/${sessionId}/complete`);\r\n  return response.data;\r\n};\r\n\r\nexport const saveResponse = async (response: QuestionResponse) => {\r\n  const apiResponse = await api.post('/responses', response);\r\n  return apiResponse.data;\r\n};\r\n\r\nexport const saveResponsesBatch = async (sessionId: string, responses: QuestionResponse[]) => {\r\n  const apiResponse = await api.post('/responses/batch', { sessionId, responses });\r\n  return apiResponse.data;\r\n};\r\n\r\nexport const getUserResponses = async (sessionId: string) => {\r\n  const response = await api.get(`/responses/${sessionId}`);\r\n  return response.data;\r\n};\r\n\r\nexport const checkHealth = async () => {\r\n  const response = await api.get('/health');\r\n  return response.data;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}