{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`Making ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} request to ${config.url}`);\n  console.log('Request data:', config.data);\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => {\n  console.log('Response received:', response.status, response.data);\n  return response;\n}, error => {\n  var _error$response, _error$response2, _error$response3, _error$response4, _error$response5, _error$response6, _error$response7, _error$response7$data;\n  console.error('Response error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  console.error('Error status:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status);\n  console.error('Error config:', error.config);\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 429) {\n    throw new Error('Too many requests. Please wait a moment and try again.');\n  }\n  if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) >= 500) {\n    throw new Error('Server error. Please try again later.');\n  }\n  if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 404) {\n    throw new Error('Session not found. Please start over.');\n  }\n  if (((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status) === 400) {\n    var _error$response$data, _error$response$data2, _error$response$data3, _error$response$data4;\n    const errorMessage = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || ((_error$response$data2 = error.response.data) === null || _error$response$data2 === void 0 ? void 0 : (_error$response$data3 = _error$response$data2.errors) === null || _error$response$data3 === void 0 ? void 0 : (_error$response$data4 = _error$response$data3[0]) === null || _error$response$data4 === void 0 ? void 0 : _error$response$data4.msg) || 'Bad request';\n    throw new Error(errorMessage);\n  }\n  throw new Error(((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.error) || 'An unexpected error occurred');\n});\nexport const createUser = async userInfo => {\n  try {\n    console.log('Creating user with info:', userInfo);\n    const response = await api.post('/users/create', userInfo);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to create user:', error);\n    throw error;\n  }\n};\nexport const getUser = async sessionId => {\n  const response = await api.get(`/users/${sessionId}`);\n  return response.data;\n};\nexport const updateUserProgress = async (sessionId, progress) => {\n  const response = await api.put(`/users/${sessionId}/progress`, progress);\n  return response.data;\n};\nexport const completeUser = async sessionId => {\n  const response = await api.put(`/users/${sessionId}/complete`);\n  return response.data;\n};\nexport const saveResponse = async response => {\n  const apiResponse = await api.post('/responses', response);\n  return apiResponse.data;\n};\nexport const saveResponsesBatch = async (sessionId, responses) => {\n  const apiResponse = await api.post('/responses/batch', {\n    sessionId,\n    responses\n  });\n  return apiResponse.data;\n};\nexport const getUserResponses = async sessionId => {\n  const response = await api.get(`/responses/${sessionId}`);\n  return response.data;\n};\nexport const checkHealth = async () => {\n  const response = await api.get('/health');\n  return response.data;\n};","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","data","error","Promise","reject","response","status","_error$response","_error$response2","_error$response3","_error$response4","_error$response5","_error$response6","_error$response7","_error$response7$data","message","Error","_error$response$data","_error$response$data2","_error$response$data3","_error$response$data4","errorMessage","errors","msg","createUser","userInfo","post","getUser","sessionId","get","updateUserProgress","progress","put","completeUser","saveResponse","apiResponse","saveResponsesBatch","responses","getUserResponses","checkHealth"],"sources":["C:/Users/sangm/OneDrive - Brock University/CommonsenseForm/client/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { UserInfo, QuestionResponse } from '../types/index.ts';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor for logging\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log(`Making ${config.method?.toUpperCase()} request to ${config.url}`);\r\n    console.log('Request data:', config.data);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('Request error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log('Response received:', response.status, response.data);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('Response error:', error.response?.data || error.message);\r\n    console.error('Error status:', error.response?.status);\r\n    console.error('Error config:', error.config);\r\n    \r\n    if (error.response?.status === 429) {\r\n      throw new Error('Too many requests. Please wait a moment and try again.');\r\n    }\r\n    \r\n    if (error.response?.status >= 500) {\r\n      throw new Error('Server error. Please try again later.');\r\n    }\r\n    \r\n    if (error.response?.status === 404) {\r\n      throw new Error('Session not found. Please start over.');\r\n    }\r\n    \r\n    if (error.response?.status === 400) {\r\n      const errorMessage = error.response.data?.error || error.response.data?.errors?.[0]?.msg || 'Bad request';\r\n      throw new Error(errorMessage);\r\n    }\r\n    \r\n    throw new Error(error.response?.data?.error || 'An unexpected error occurred');\r\n  }\r\n);\r\n\r\nexport const createUser = async (userInfo: UserInfo) => {\r\n  try {\r\n    console.log('Creating user with info:', userInfo);\r\n    const response = await api.post('/users/create', userInfo);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Failed to create user:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getUser = async (sessionId: string) => {\r\n  const response = await api.get(`/users/${sessionId}`);\r\n  return response.data;\r\n};\r\n\r\nexport const updateUserProgress = async (sessionId: string, progress: any) => {\r\n  const response = await api.put(`/users/${sessionId}/progress`, progress);\r\n  return response.data;\r\n};\r\n\r\nexport const completeUser = async (sessionId: string) => {\r\n  const response = await api.put(`/users/${sessionId}/complete`);\r\n  return response.data;\r\n};\r\n\r\nexport const saveResponse = async (response: QuestionResponse) => {\r\n  const apiResponse = await api.post('/responses', response);\r\n  return apiResponse.data;\r\n};\r\n\r\nexport const saveResponsesBatch = async (sessionId: string, responses: QuestionResponse[]) => {\r\n  const apiResponse = await api.post('/responses/batch', { sessionId, responses });\r\n  return apiResponse.data;\r\n};\r\n\r\nexport const getUserResponses = async (sessionId: string) => {\r\n  const response = await api.get(`/responses/${sessionId}`);\r\n  return response.data;\r\n};\r\n\r\nexport const checkHealth = async () => {\r\n  const response = await api.get('/health');\r\n  return response.data;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}