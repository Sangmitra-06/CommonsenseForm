{"ast":null,"code":"import _objectSpread from\"C:/Users/sangm/OneDrive - Brock University/CommonsenseForm/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef,useCallback}from'react';import{useForm}from'../context/FormContext.tsx';import{validateAnswer,shouldShowAttentionCheck,generateAttentionCheck,analyzeResponseQuality,analyzeUserPattern,validateAttentionCheck}from'../utils/helpers.ts';import ProgressBar from'./ProgressBar.tsx';import QualityWarningModal from'./QualityWarningModel.tsx';import SurveyTimer from'./SurveyTimer.tsx';import*as api from'../services/api.ts';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function QuestionForm(){const{state,saveResponse,navigateToNext,navigateToPrevious,getCurrentQuestionData,getTotalQuestionsInCurrentTopic,getCompletedQuestionsInCurrentTopic,resetSession,dispatch,navigateToPosition}=useForm();// Basic form state\nconst[answer,setAnswer]=useState('');const[errors,setErrors]=useState({});const[isSaving,setIsSaving]=useState(false);const[startTime,setStartTime]=useState(Date.now());const[showSuccess,setShowSuccess]=useState(false);const[lastQuestionId,setLastQuestionId]=useState(null);const[isNavigating,setIsNavigating]=useState(false);const[navigationDirection,setNavigationDirection]=useState(null);// Attention check state\nconst[isAttentionCheck,setIsAttentionCheck]=useState(false);const[attentionCheck,setAttentionCheck]=useState(null);const[lastAttentionCheckAt,setLastAttentionCheckAt]=useState(-1);const[attentionChecksPassed,setAttentionChecksPassed]=useState(0);const[attentionChecksFailed,setAttentionChecksFailed]=useState(0);const[attentionCheckFailed,setAttentionCheckFailed]=useState(false);// Store the question data and answer before attention check (without saving to responses)\nconst[preAttentionData,setPreAttentionData]=useState(null);// Quality tracking state\nconst[showQualityModal,setShowQualityModal]=useState(false);const[qualityWarnings,setQualityWarnings]=useState([]);const[lastQualityAlertAt,setLastQualityAlertAt]=useState(-1);const[hasShownQualityAlert,setHasShownQualityAlert]=useState(false);const[currentQualityIssue,setCurrentQualityIssue]=useState({type:null,noneRate:0,gibberishRate:0,speedRate:0});// Celebration state\nconst[showCelebration,setShowCelebration]=useState(null);const textareaRef=useRef(null);const currentQuestionData=getCurrentQuestionData();// Helper to get actual question response count\nconst getActualQuestionResponseCount=useCallback(()=>{return Array.from(state.responses.keys()).filter(questionId=>!questionId.startsWith('ATTENTION_CHECK_')).length;},[state.responses]);// Quality check monitoring - runs after each response is saved\nuseEffect(()=>{// Only check quality for actual question responses, not attention checks\nconst actualResponses=Array.from(state.responses.values()).filter(response=>!response.questionId.startsWith('ATTENTION_CHECK_'));if(actualResponses.length<5||isAttentionCheck){return;// Need at least 5 responses to analyze patterns\n}// Avoid showing multiple alerts in quick succession\nif(hasShownQualityAlert&&Date.now()-lastQualityAlertAt<10000){return;// Wait at least 10 seconds between alerts\n}console.log('Running quality analysis on',actualResponses.length,'actual responses');// Analyze the user's response pattern\nconst patternAnalysis=analyzeUserPattern(actualResponses);console.log('Pattern analysis results:',patternAnalysis);if(patternAnalysis.suspiciousPattern){console.log('🚨 SUSPICIOUS PATTERN DETECTED - showing quality modal');setCurrentQualityIssue({type:patternAnalysis.issueType,noneRate:patternAnalysis.noneResponseRate,gibberishRate:patternAnalysis.gibberishResponseRate,speedRate:patternAnalysis.fastResponseRate});setQualityWarnings(patternAnalysis.warnings);setShowQualityModal(true);setLastQualityAlertAt(Date.now());setHasShownQualityAlert(true);}},[// Trigger when actual responses change\ngetActualQuestionResponseCount(),isAttentionCheck,hasShownQualityAlert,lastQualityAlertAt]);// Separate effect to trigger attention check when navigating to a new question\nuseEffect(()=>{// Only run this when we have a valid question and we're not already in an attention check\nif(!currentQuestionData||isAttentionCheck||preAttentionData){return;}const actualQuestionResponses=getActualQuestionResponseCount();console.log('🔍 Checking for attention check trigger:',{actualQuestionResponses,shouldShow:shouldShowAttentionCheck(actualQuestionResponses),lastAttentionCheckAt,currentQuestionId:currentQuestionData.questionId});// Check if we should show attention check\nif(shouldShowAttentionCheck(actualQuestionResponses)&&actualQuestionResponses!==lastAttentionCheckAt){console.log('🚨 TRIGGERING ATTENTION CHECK at count:',actualQuestionResponses);// Store current state before showing attention check\nif(answer.trim().length>=4){setPreAttentionData({questionData:currentQuestionData,answer:answer.trim(),startTime:startTime});}const check=generateAttentionCheck(currentQuestionData.category,currentQuestionData.topic,state.userInfo||undefined);setAttentionCheck(check);setIsAttentionCheck(true);setLastAttentionCheckAt(actualQuestionResponses);setAnswer('');// Clear answer for attention check\nsetStartTime(Date.now());}},[currentQuestionData===null||currentQuestionData===void 0?void 0:currentQuestionData.questionId,// Trigger when question changes\ngetActualQuestionResponseCount(),// Trigger when response count changes\nisAttentionCheck,preAttentionData,lastAttentionCheckAt]);// Reset form when question changes - handles both regular navigation and post-attention-check\nuseEffect(()=>{if(currentQuestionData&&currentQuestionData.questionId!==lastQuestionId){console.log('Question changed, loading data for:',currentQuestionData.questionId);setErrors({});setShowSuccess(false);setStartTime(Date.now());setLastQuestionId(currentQuestionData.questionId);setIsNavigating(false);setNavigationDirection(null);setQualityWarnings([]);if(isAttentionCheck){// We're showing an attention check, keep answer cleared\nsetAnswer('');}else{// Check if this matches our pre-attention data\nif(preAttentionData&&preAttentionData.questionData.questionId===currentQuestionData.questionId){console.log('🔄 Restoring pre-attention data for:',currentQuestionData.questionId);setAnswer(preAttentionData.answer);setStartTime(preAttentionData.startTime);// Clear preAttentionData since we're now back to the original question\nsetPreAttentionData(null);}else{// Normal question loading - check for existing response\nconst existingResponse=state.responses.get(currentQuestionData.questionId);if(existingResponse){console.log('Found existing response:',existingResponse.answer.substring(0,50)+'...');setAnswer(existingResponse.answer);}else{console.log('No existing response, clearing form');setAnswer('');}}}}},[currentQuestionData===null||currentQuestionData===void 0?void 0:currentQuestionData.questionId,lastQuestionId,state.responses,isAttentionCheck,preAttentionData]);// Auto-resize textarea\nuseEffect(()=>{if(textareaRef.current){textareaRef.current.style.height='auto';textareaRef.current.style.height=textareaRef.current.scrollHeight+'px';}},[answer]);const validateForm=()=>{const newErrors={};const answerValidation=validateAnswer(answer);if(!answerValidation.isValid){newErrors.answer=answerValidation.message;}setErrors(newErrors);return Object.keys(newErrors).length===0;};const handleAnswerChange=e=>{const newValue=e.target.value;setAnswer(newValue);if(errors.answer){setErrors(prev=>_objectSpread(_objectSpread({},prev),{},{answer:undefined}));}// Real-time quality feedback for current response only (skip for attention checks)\nif(newValue.length>5&&!isAttentionCheck){const qualityAnalysis=analyzeResponseQuality(newValue);if(qualityAnalysis.isLowQuality){setQualityWarnings(qualityAnalysis.issues);}else{setQualityWarnings([]);}}else{setQualityWarnings([]);}};const handleClear=()=>{setAnswer('');setErrors({});setShowSuccess(false);setQualityWarnings([]);if(textareaRef.current){textareaRef.current.focus();}};const checkForMilestones=()=>{const{categoryIndex,subcategoryIndex,topicIndex,questionIndex}=state.currentPosition;const currentCategory=state.questionsData[categoryIndex];const currentSubcategory=currentCategory===null||currentCategory===void 0?void 0:currentCategory.subcategories[subcategoryIndex];const currentTopic=currentSubcategory===null||currentSubcategory===void 0?void 0:currentSubcategory.topics[topicIndex];if(!currentTopic)return null;if(questionIndex===currentTopic.questions.length-1){if(topicIndex===currentSubcategory.topics.length-1){if(subcategoryIndex===currentCategory.subcategories.length-1){return{type:'category',name:currentCategory.category,subcategoryName:currentSubcategory.subcategory,topicName:currentTopic.topic};}return{type:'subcategory',name:currentSubcategory.subcategory,topicName:currentTopic.topic,categoryName:currentCategory.category};}return{type:'topic',name:currentTopic.topic,subcategoryName:currentSubcategory.subcategory,categoryName:currentCategory.category};}return null;};// UPDATED performSave to handle both regular and pre-attention data\nconst performSave=async(questionDataToUse,answerToUse,startTimeToUse,qualityAnalysis,skipSuccessMessage)=>{const questionData=questionDataToUse||currentQuestionData;const answerText=answerToUse||answer;const timeStart=startTimeToUse||startTime;if(!questionData||!state.sessionId){console.error('Missing required data for save');return false;}// For attention checks, create a special question ID using actual response count\nconst questionId=isAttentionCheck?\"ATTENTION_CHECK_\".concat(getActualQuestionResponseCount(),\"_\").concat(questionData.questionId):questionData.questionId;const questionText=isAttentionCheck?attentionCheck.question:questionData.question;if(!qualityAnalysis){qualityAnalysis=analyzeResponseQuality(answerText);}setIsSaving(true);try{const timeSpent=Math.floor((Date.now()-timeStart)/1000);const response={sessionId:state.sessionId,questionId:questionId,categoryIndex:state.currentPosition.categoryIndex,subcategoryIndex:state.currentPosition.subcategoryIndex,topicIndex:state.currentPosition.topicIndex,questionIndex:state.currentPosition.questionIndex,category:questionData.category,subcategory:questionData.subcategory,topic:questionData.topic,question:questionText,answer:answerText.trim(),timeSpent,timestamp:new Date().toISOString(),qualityScore:qualityAnalysis.score,isAttentionCheck:isAttentionCheck,attentionCheckType:isAttentionCheck?attentionCheck.type:undefined,expectedAnswer:isAttentionCheck?attentionCheck.expectedAnswer:undefined};console.log('Saving response:',{questionId,isAttentionCheck,answer:answerText.substring(0,50)+'...',totalResponses:state.responses.size,qualityScore:qualityAnalysis.score});await saveResponse(response);// Only show success message if not skipped and not an attention check\nif(!skipSuccessMessage&&!isAttentionCheck){setShowSuccess(true);setTimeout(()=>setShowSuccess(false),2000);}return true;}catch(error){console.error('SAVE ERROR:',error);throw error;}finally{setIsSaving(false);}};const handleSave=async()=>{if(!validateForm()||!currentQuestionData||!state.sessionId){console.log('Validation failed:',errors);return false;}try{const qualityAnalysis=analyzeResponseQuality(answer);return await performSave(undefined,undefined,undefined,qualityAnalysis);}catch(error){console.error('Save failed:',error);alert('Failed to save response. Please try again.');return false;}};// FIXED handleNext function\nconst handleNext=async()=>{const isValid=validateForm();if(!isValid){console.log('Form validation failed, cannot proceed');return;}// Handle attention check validation\nif(isAttentionCheck&&attentionCheck){const expectedAnswers=attentionCheck.expectedAnswers||[attentionCheck.expectedAnswer];const isAttentionCheckValid=validateAttentionCheck(answer,expectedAnswers);console.log('ATTENTION CHECK VALIDATION:',{userAnswer:answer,expectedAnswers:expectedAnswers,isValid:isAttentionCheckValid,attentionCheckType:attentionCheck.type});if(!isAttentionCheckValid){console.log('❌ ATTENTION CHECK FAILED - Redirecting to completion');try{await performSave();console.log('Failed attention check response saved');}catch(error){console.error('Error saving failed attention check:',error);}if(state.sessionId){try{await api.completeUser(state.sessionId,'attention_check_failed');console.log('Survey marked as completed due to attention check failure');}catch(error){console.error('Error marking survey completed:',error);}}dispatch({type:'SET_ATTENTION_CHECK_FAILED',payload:true});return;}else{console.log('✅ ATTENTION CHECK PASSED');// Save the attention check response\ntry{await performSave();console.log('Attention check response saved');}catch(error){console.error('Error saving attention check:',error);}// Save the pre-attention data if it exists\nif(preAttentionData){console.log('💾 Saving pre-attention data:',preAttentionData.questionData.questionId);try{await performSave(preAttentionData.questionData,preAttentionData.answer,preAttentionData.startTime,undefined,true// Skip success message\n);console.log('Pre-attention data saved successfully');}catch(error){console.error('Error saving pre-attention data:',error);}}// Reset attention check state and clear pre-attention data\nsetIsAttentionCheck(false);setAttentionCheck(null);// TRIGGER NAVIGATION with animation\nsetNavigationDirection('next');setIsNavigating(true);setTimeout(()=>{// Clear the answer field to prevent wrong answer from showing\nsetAnswer('');setPreAttentionData(null);// Force re-render by updating the question ID tracker\nsetLastQuestionId(null);},300);return;}}// Regular question flow - check for quality issues before saving\ntry{if(!isAttentionCheck){const qualityAnalysis=analyzeResponseQuality(answer);// If this individual response is very low quality, show warning\nif(qualityAnalysis.isLowQuality&&qualityAnalysis.score<10&&qualityAnalysis.isGibberish){console.log('Individual response quality extremely poor:',qualityAnalysis.score);setCurrentQualityIssue({type:'individual',noneRate:qualityAnalysis.isNoneResponse?100:0,gibberishRate:qualityAnalysis.isGibberish?100:0,speedRate:0});setQualityWarnings(['This response appears to be random characters or gibberish',...qualityAnalysis.issues.slice(0,2)// Limit issues shown\n]);setShowQualityModal(true);return;}}const saveSuccessful=await handleSave();if(saveSuccessful&&isValid){// If we have pre-attention data and we're saving the same question, clear it\nif(preAttentionData&&currentQuestionData&&preAttentionData.questionData.questionId===currentQuestionData.questionId){console.log('Clearing pre-attention data after saving the same question');setPreAttentionData(null);}const milestone=checkForMilestones();setNavigationDirection('next');setIsNavigating(true);setTimeout(()=>{navigateToNext();if(milestone&&!isAttentionCheck){setShowCelebration({type:milestone.type,data:milestone});}},300);}}catch(error){console.error('Next navigation failed:',error);}};const handlePrevious=()=>{setNavigationDirection('previous');setIsNavigating(true);setTimeout(()=>{navigateToPrevious();},300);};const handleSkip=()=>{if(isAttentionCheck)return;// Don't allow skipping attention checks\nsetAnswer('');setErrors({});setNavigationDirection('next');setIsNavigating(true);setTimeout(()=>{navigateToNext();},300);};const handleQualityModalClose=()=>{console.log('Quality modal closed - user will improve response');setShowQualityModal(false);// Clear the current answer to force them to rewrite\nsetAnswer('');setErrors({});setQualityWarnings([]);// Reset the quality issue state\nsetCurrentQualityIssue({type:null,noneRate:0,gibberishRate:0,speedRate:0});setTimeout(()=>{if(textareaRef.current){textareaRef.current.focus();}},100);};const closeCelebration=()=>{setShowCelebration(null);};if(!currentQuestionData){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-100 flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Loading question...\"})]})});}if(state.surveyExpired){return null;}const isFirstQuestion=state.currentPosition.categoryIndex===0&&state.currentPosition.subcategoryIndex===0&&state.currentPosition.topicIndex===0&&state.currentPosition.questionIndex===0;const isFormValid=answer.trim().length>=4;const displayQuestion=isAttentionCheck?attentionCheck.question:currentQuestionData.question;if(attentionCheckFailed){return null;}return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen\",style:{background:\"linear-gradient(135deg, var(--bg-primary) 0%, var(--color-cream) 50%, var(--bg-secondary) 100%)\"},children:[/*#__PURE__*/_jsx(SurveyTimer,{}),/*#__PURE__*/_jsx(ProgressBar,{}),!isAttentionCheck&&/*#__PURE__*/_jsx(QualityWarningModal,{isOpen:showQualityModal,onClose:handleQualityModalClose,qualityIssues:qualityWarnings,issueType:currentQualityIssue.type,noneResponseRate:currentQualityIssue.noneRate,gibberishResponseRate:currentQualityIssue.gibberishRate,fastResponseRate:currentQualityIssue.speedRate}),showCelebration&&/*#__PURE__*/_jsx(CelebrationModal,{celebration:showCelebration,onClose:closeCelebration}),/*#__PURE__*/_jsx(\"div\",{className:\"max-w-4xl mx-auto px-4 py-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"relative overflow-hidden\",children:/*#__PURE__*/_jsx(\"div\",{className:\"transform transition-all duration-500 ease-in-out \".concat(isNavigating?navigationDirection==='next'?'-translate-x-full opacity-0':'translate-x-full opacity-0':'translate-x-0 opacity-100'),children:/*#__PURE__*/_jsxs(\"div\",{className:\"backdrop-blur-sm rounded-2xl shadow-lg overflow-hidden\",style:{backgroundColor:'var(--bg-card)',border:'1px solid var(--border-light)'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",style:{background:'var(--bg-card-header)',color:'var(--text-on-dark)'},children:[isAttentionCheck,/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg md:text-xl font-medium leading-relaxed\",children:displayQuestion})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-3\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"block text-base font-medium\",style:{color:'var(--text-primary)'},children:[/*#__PURE__*/_jsx(\"span\",{children:\"Your Answer *\"}),/*#__PURE__*/_jsx(\"span\",{className:\"block text-xs font-normal mt-1\",style:{color:'var(--text-secondary)'},children:\"You can specify \\\"none\\\" if no answer exists\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleClear,className:\"text-sm font-medium hover:underline transition-colors\",style:{color:'var(--accent-warning)'},children:\"Clear Form\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"textarea\",{ref:textareaRef,value:answer,onChange:handleAnswerChange,placeholder:\"Share your knowledge about cultural practices in your region, or specify 'none' if no answer exists...\",className:\"w-full px-4 py-3 border-2 rounded-xl resize-none min-h-[120px] transition-all duration-200 \".concat(errors.answer?'focus:border-red-400':''),style:{color:'var(--text-primary)',borderColor:errors.answer?'var(--accent-error)':'var(--border-medium)',backgroundColor:'rgba(244, 228, 202, 0.3)'},maxLength:5000,disabled:isSaving}),/*#__PURE__*/_jsxs(\"div\",{className:\"absolute bottom-3 right-3 px-2 py-1 rounded-lg text-xs border\",style:{backgroundColor:answer.length>=4?'var(--color-cream)':'#fef3c7',color:answer.length>=4?'var(--text-secondary)':'var(--accent-warning)',borderColor:answer.length>=4?'var(--border-light)':'#fbbf24'},children:[answer.length,\"/5000 \",answer.length<4&&\"(\".concat(4-answer.length,\" more needed)\")]})]}),errors.answer&&/*#__PURE__*/_jsx(\"p\",{className:\"text-sm mt-2 font-medium\",style:{color:'var(--accent-error)'},children:errors.answer})]}),!isAttentionCheck&&qualityWarnings.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-4 p-3 border rounded-xl\",style:{background:'var(--btn-warning-bg)',borderColor:'#fbbf24'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start\",children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'var(--accent-warning)'},className:\"mr-2\",children:\"\\u26A0\\uFE0F\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm\",style:{color:'#92400e'},children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-medium mb-1\",children:\"Response Quality Notice:\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"text-xs space-y-1\",children:qualityWarnings.map((warning,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",warning]},index))}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-2 font-medium\",children:\"Please provide detailed responses or specify \\\"none\\\" if not applicable.\"})]})]})}),showSuccess&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-4 p-3 border rounded-xl animate-bounce-in\",style:{background:'var(--accent-success)',borderColor:'var(--border-dark)',color:'var(--text-on-dark)'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"mr-2\",children:\"\\u2728\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-sm\",children:\"Response saved successfully!\"})]})}),!isFormValid&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-4 p-3 border rounded-xl\",style:{background:'var(--btn-warning-bg)',borderColor:'#fbbf24'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start\",children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'var(--accent-warning)'},className:\"mr-2\",children:\"\\u26A0\\uFE0F\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm\",style:{color:'#92400e'},children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-medium mb-1\",children:\"Please complete the following:\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"text-xs space-y-1\",children:/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Add at least 4 characters to your answer or specify \\\"none\\\"\"})})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center pt-4 border-t\",style:{borderColor:'var(--border-light)'},children:[/*#__PURE__*/_jsxs(\"button\",{onClick:handlePrevious,disabled:isFirstQuestion||isNavigating||isAttentionCheck,className:\"flex items-center px-4 py-2 font-medium rounded-xl transition-all duration-200 disabled:cursor-not-allowed text-sm disabled:opacity-50\",style:{background:'var(--btn-warning-bg)',color:'#92400e'},children:[/*#__PURE__*/_jsx(\"span\",{className:\"mr-2\",children:\"\\u2190\"}),\"Previous\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-3\",children:[!isAttentionCheck&&/*#__PURE__*/_jsx(\"button\",{onClick:handleSkip,disabled:isNavigating,className:\"px-4 py-2 font-medium rounded-xl transition-all duration-200 text-sm\",style:{background:'var(--btn-warning-bg)',color:'#92400e'},children:\"Skip\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSave,disabled:isSaving||!isFormValid||isNavigating,className:\"px-4 py-2 font-medium rounded-xl transition-all duration-200 disabled:cursor-not-allowed text-sm disabled:opacity-50\",style:{background:'var(--btn-secondary-bg)',color:'var(--text-on-dark)'},children:isSaving?'Saving...':'Save'}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNext,disabled:isSaving||!isFormValid||isNavigating,className:\"flex items-center px-5 py-2 font-medium rounded-xl transition-all duration-200 disabled:cursor-not-allowed text-sm disabled:opacity-50\",style:{background:'var(--btn-primary-bg)',color:'var(--text-on-dark)'},children:isNavigating?'Moving...':/*#__PURE__*/_jsxs(_Fragment,{children:[\"Save & Continue\",/*#__PURE__*/_jsx(\"span\",{className:\"ml-2\",children:\"\\u2192\"})]})})]})]})]})]})})})})]});}// Celebration Modal Component\nfunction CelebrationModal(_ref){let{celebration,onClose}=_ref;const celebrations={topic:{icon:'🎯',title:'Section Completed!',message:'Great progress! Keep going!'},subcategory:{icon:'🏆',title:'Section Mastered!',message:'Excellent work! Moving to next section!'},category:{icon:'👑',title:'Major Section Complete!',message:'Outstanding! You\\'re making great progress!'}};const config=celebrations[celebration.type];return/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black/30 backdrop-blur-sm flex items-center justify-center z-50 animate-fade-in p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"rounded-2xl p-6 max-w-lg mx-auto text-center shadow-2xl animate-bounce-in\",style:{backgroundColor:'var(--bg-card)',border:'1px solid var(--border-light)'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-5xl mb-3\",children:config.icon}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold mb-3\",style:{color:'var(--text-primary)'},children:config.title}),/*#__PURE__*/_jsx(\"p\",{className:\"text-lg mb-4\",style:{color:'var(--text-secondary)'},children:config.message}),/*#__PURE__*/_jsx(\"button\",{onClick:onClose,className:\"px-6 py-2 font-medium rounded-xl transition-all duration-200\",style:{background:'var(--btn-primary-bg)',color:'var(--text-on-dark)'},children:\"Continue Survey\"})]})});}","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useForm","validateAnswer","shouldShowAttentionCheck","generateAttentionCheck","analyzeResponseQuality","analyzeUserPattern","validateAttentionCheck","ProgressBar","QualityWarningModal","SurveyTimer","api","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","QuestionForm","state","saveResponse","navigateToNext","navigateToPrevious","getCurrentQuestionData","getTotalQuestionsInCurrentTopic","getCompletedQuestionsInCurrentTopic","resetSession","dispatch","navigateToPosition","answer","setAnswer","errors","setErrors","isSaving","setIsSaving","startTime","setStartTime","Date","now","showSuccess","setShowSuccess","lastQuestionId","setLastQuestionId","isNavigating","setIsNavigating","navigationDirection","setNavigationDirection","isAttentionCheck","setIsAttentionCheck","attentionCheck","setAttentionCheck","lastAttentionCheckAt","setLastAttentionCheckAt","attentionChecksPassed","setAttentionChecksPassed","attentionChecksFailed","setAttentionChecksFailed","attentionCheckFailed","setAttentionCheckFailed","preAttentionData","setPreAttentionData","showQualityModal","setShowQualityModal","qualityWarnings","setQualityWarnings","lastQualityAlertAt","setLastQualityAlertAt","hasShownQualityAlert","setHasShownQualityAlert","currentQualityIssue","setCurrentQualityIssue","type","noneRate","gibberishRate","speedRate","showCelebration","setShowCelebration","textareaRef","currentQuestionData","getActualQuestionResponseCount","Array","from","responses","keys","filter","questionId","startsWith","length","actualResponses","values","response","console","log","patternAnalysis","suspiciousPattern","issueType","noneResponseRate","gibberishResponseRate","fastResponseRate","warnings","actualQuestionResponses","shouldShow","currentQuestionId","trim","questionData","check","category","topic","userInfo","undefined","existingResponse","get","substring","current","style","height","scrollHeight","validateForm","newErrors","answerValidation","isValid","message","Object","handleAnswerChange","e","newValue","target","value","prev","_objectSpread","qualityAnalysis","isLowQuality","issues","handleClear","focus","checkForMilestones","categoryIndex","subcategoryIndex","topicIndex","questionIndex","currentPosition","currentCategory","questionsData","currentSubcategory","subcategories","currentTopic","topics","questions","name","subcategoryName","subcategory","topicName","categoryName","performSave","questionDataToUse","answerToUse","startTimeToUse","skipSuccessMessage","answerText","timeStart","sessionId","error","concat","questionText","question","timeSpent","Math","floor","timestamp","toISOString","qualityScore","score","attentionCheckType","expectedAnswer","totalResponses","size","setTimeout","handleSave","alert","handleNext","expectedAnswers","isAttentionCheckValid","userAnswer","completeUser","payload","isGibberish","isNoneResponse","slice","saveSuccessful","milestone","data","handlePrevious","handleSkip","handleQualityModalClose","closeCelebration","className","children","surveyExpired","isFirstQuestion","isFormValid","displayQuestion","background","isOpen","onClose","qualityIssues","CelebrationModal","celebration","backgroundColor","border","color","onClick","ref","onChange","placeholder","borderColor","maxLength","disabled","map","warning","index","_ref","celebrations","icon","title","config"],"sources":["C:/Users/sangm/OneDrive - Brock University/CommonsenseForm/client/src/components/QuestionForm.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { useForm } from '../context/FormContext.tsx';\r\nimport { validateAnswer, shouldShowAttentionCheck, generateAttentionCheck, analyzeResponseQuality, analyzeUserPattern, validateAttentionCheck } from '../utils/helpers.ts';\r\nimport ProgressBar from './ProgressBar.tsx';\r\nimport QualityWarningModal from './QualityWarningModel.tsx';\r\nimport SurveyTimer from './SurveyTimer.tsx';\r\nimport TimeWarningModal from './TimeWarningModal.tsx';\r\nimport * as api from '../services/api.ts';\r\n\r\nexport default function QuestionForm() {\r\n  const {\r\n    state,\r\n    saveResponse,\r\n    navigateToNext,\r\n    navigateToPrevious,\r\n    getCurrentQuestionData,\r\n    getTotalQuestionsInCurrentTopic,\r\n    getCompletedQuestionsInCurrentTopic,\r\n    resetSession,\r\n    dispatch,\r\n    navigateToPosition\r\n  } = useForm();\r\n\r\n  // Basic form state\r\n  const [answer, setAnswer] = useState('');\r\n  const [errors, setErrors] = useState<{ answer?: string }>({});\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [startTime, setStartTime] = useState(Date.now());\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const [lastQuestionId, setLastQuestionId] = useState<string | null>(null);\r\n  const [isNavigating, setIsNavigating] = useState(false);\r\n  const [navigationDirection, setNavigationDirection] = useState<'next' | 'previous' | null>(null);\r\n\r\n  // Attention check state\r\n  const [isAttentionCheck, setIsAttentionCheck] = useState(false);\r\n  const [attentionCheck, setAttentionCheck] = useState<any>(null);\r\n  const [lastAttentionCheckAt, setLastAttentionCheckAt] = useState<number>(-1);\r\n  const [attentionChecksPassed, setAttentionChecksPassed] = useState(0);\r\n  const [attentionChecksFailed, setAttentionChecksFailed] = useState(0);\r\n  const [attentionCheckFailed, setAttentionCheckFailed] = useState(false);\r\n  \r\n  // Store the question data and answer before attention check (without saving to responses)\r\n  const [preAttentionData, setPreAttentionData] = useState<{\r\n    questionData: any;\r\n    answer: string;\r\n    startTime: number;\r\n  } | null>(null);\r\n\r\n  // Quality tracking state\r\n  const [showQualityModal, setShowQualityModal] = useState(false);\r\n  const [qualityWarnings, setQualityWarnings] = useState<string[]>([]);\r\n  const [lastQualityAlertAt, setLastQualityAlertAt] = useState<number>(-1);\r\n  const [hasShownQualityAlert, setHasShownQualityAlert] = useState(false);\r\n  const [currentQualityIssue, setCurrentQualityIssue] = useState<{\r\n    type: string | null;\r\n    noneRate: number;\r\n    gibberishRate: number;\r\n    speedRate: number;\r\n  }>({ type: null, noneRate: 0, gibberishRate: 0, speedRate: 0 });\r\n\r\n  // Celebration state\r\n  const [showCelebration, setShowCelebration] = useState<{type: string, data: any} | null>(null);\r\n\r\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\r\n  const currentQuestionData = getCurrentQuestionData();\r\n\r\n  // Helper to get actual question response count\r\n  const getActualQuestionResponseCount = useCallback(() => {\r\n    return Array.from(state.responses.keys())\r\n      .filter(questionId => !questionId.startsWith('ATTENTION_CHECK_'))\r\n      .length;\r\n  }, [state.responses]);\r\n\r\n// Quality check monitoring - runs after each response is saved\r\n  useEffect(() => {\r\n    // Only check quality for actual question responses, not attention checks\r\n    const actualResponses = Array.from(state.responses.values())\r\n      .filter(response => !response.questionId.startsWith('ATTENTION_CHECK_'));\r\n      \r\n    if (actualResponses.length < 5 || isAttentionCheck) {\r\n      return; // Need at least 5 responses to analyze patterns\r\n    }\r\n\r\n    // Avoid showing multiple alerts in quick succession\r\n    if (hasShownQualityAlert && Date.now() - lastQualityAlertAt < 10000) {\r\n      return; // Wait at least 10 seconds between alerts\r\n    }\r\n\r\n    console.log('Running quality analysis on', actualResponses.length, 'actual responses');\r\n    \r\n    // Analyze the user's response pattern\r\n    const patternAnalysis = analyzeUserPattern(actualResponses);\r\n    \r\n    console.log('Pattern analysis results:', patternAnalysis);\r\n    \r\n    if (patternAnalysis.suspiciousPattern) {\r\n      console.log('🚨 SUSPICIOUS PATTERN DETECTED - showing quality modal');\r\n      \r\n      setCurrentQualityIssue({\r\n        type: patternAnalysis.issueType,\r\n        noneRate: patternAnalysis.noneResponseRate,\r\n        gibberishRate: patternAnalysis.gibberishResponseRate,\r\n        speedRate: patternAnalysis.fastResponseRate\r\n      });\r\n      \r\n      setQualityWarnings(patternAnalysis.warnings);\r\n      setShowQualityModal(true);\r\n      setLastQualityAlertAt(Date.now());\r\n      setHasShownQualityAlert(true);\r\n    }\r\n  }, [\r\n    // Trigger when actual responses change\r\n    getActualQuestionResponseCount(),\r\n    isAttentionCheck,\r\n    hasShownQualityAlert,\r\n    lastQualityAlertAt\r\n  ]);\r\n\r\n\r\n  // Separate effect to trigger attention check when navigating to a new question\r\n  useEffect(() => {\r\n    // Only run this when we have a valid question and we're not already in an attention check\r\n    if (!currentQuestionData || isAttentionCheck || preAttentionData) {\r\n      return;\r\n    }\r\n\r\n    const actualQuestionResponses = getActualQuestionResponseCount();\r\n    \r\n    console.log('🔍 Checking for attention check trigger:', {\r\n      actualQuestionResponses,\r\n      shouldShow: shouldShowAttentionCheck(actualQuestionResponses),\r\n      lastAttentionCheckAt,\r\n      currentQuestionId: currentQuestionData.questionId\r\n    });\r\n\r\n    // Check if we should show attention check\r\n    if (shouldShowAttentionCheck(actualQuestionResponses) && actualQuestionResponses !== lastAttentionCheckAt) {\r\n      console.log('🚨 TRIGGERING ATTENTION CHECK at count:', actualQuestionResponses);\r\n      \r\n      // Store current state before showing attention check\r\n      if (answer.trim().length >= 4) {\r\n        setPreAttentionData({\r\n          questionData: currentQuestionData,\r\n          answer: answer.trim(),\r\n          startTime: startTime\r\n        });\r\n      }\r\n      \r\n      const check = generateAttentionCheck(\r\n        currentQuestionData.category,\r\n        currentQuestionData.topic,\r\n        state.userInfo || undefined\r\n      );\r\n      \r\n      setAttentionCheck(check);\r\n      setIsAttentionCheck(true);\r\n      setLastAttentionCheckAt(actualQuestionResponses);\r\n      setAnswer(''); // Clear answer for attention check\r\n      setStartTime(Date.now());\r\n    }\r\n  }, [\r\n    currentQuestionData?.questionId, // Trigger when question changes\r\n    getActualQuestionResponseCount(), // Trigger when response count changes\r\n    isAttentionCheck,\r\n    preAttentionData,\r\n    lastAttentionCheckAt\r\n  ]);\r\n\r\n  // Reset form when question changes - handles both regular navigation and post-attention-check\r\n  useEffect(() => {\r\n    if (currentQuestionData && currentQuestionData.questionId !== lastQuestionId) {\r\n      console.log('Question changed, loading data for:', currentQuestionData.questionId);\r\n      \r\n      setErrors({});\r\n      setShowSuccess(false);\r\n      setStartTime(Date.now());\r\n      setLastQuestionId(currentQuestionData.questionId);\r\n      setIsNavigating(false);\r\n      setNavigationDirection(null);\r\n      setQualityWarnings([]);\r\n      \r\n      if (isAttentionCheck) {\r\n        // We're showing an attention check, keep answer cleared\r\n        setAnswer('');\r\n      } else {\r\n        // Check if this matches our pre-attention data\r\n        if (preAttentionData && preAttentionData.questionData.questionId === currentQuestionData.questionId) {\r\n          console.log('🔄 Restoring pre-attention data for:', currentQuestionData.questionId);\r\n          setAnswer(preAttentionData.answer);\r\n          setStartTime(preAttentionData.startTime);\r\n          // Clear preAttentionData since we're now back to the original question\r\n          setPreAttentionData(null);\r\n        } else {\r\n          // Normal question loading - check for existing response\r\n          const existingResponse = state.responses.get(currentQuestionData.questionId);\r\n          if (existingResponse) {\r\n            console.log('Found existing response:', existingResponse.answer.substring(0, 50) + '...');\r\n            setAnswer(existingResponse.answer);\r\n          } else {\r\n            console.log('No existing response, clearing form');\r\n            setAnswer('');\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [currentQuestionData?.questionId, lastQuestionId, state.responses, isAttentionCheck, preAttentionData]);\r\n\r\n  // Auto-resize textarea\r\n  useEffect(() => {\r\n    if (textareaRef.current) {\r\n      textareaRef.current.style.height = 'auto';\r\n      textareaRef.current.style.height = textareaRef.current.scrollHeight + 'px';\r\n    }\r\n  }, [answer]);\r\n\r\n  const validateForm = () => {\r\n    const newErrors: { answer?: string } = {};\r\n    \r\n    const answerValidation = validateAnswer(answer);\r\n    if (!answerValidation.isValid) {\r\n      newErrors.answer = answerValidation.message;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleAnswerChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const newValue = e.target.value;\r\n    setAnswer(newValue);\r\n    \r\n    if (errors.answer) {\r\n      setErrors(prev => ({ ...prev, answer: undefined }));\r\n    }\r\n\r\n    // Real-time quality feedback for current response only (skip for attention checks)\r\n    if (newValue.length > 5 && !isAttentionCheck) {\r\n      const qualityAnalysis = analyzeResponseQuality(newValue);\r\n      if (qualityAnalysis.isLowQuality) {\r\n        setQualityWarnings(qualityAnalysis.issues);\r\n      } else {\r\n        setQualityWarnings([]);\r\n      }\r\n    } else {\r\n      setQualityWarnings([]);\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setAnswer('');\r\n    setErrors({});\r\n    setShowSuccess(false);\r\n    setQualityWarnings([]);\r\n    if (textareaRef.current) {\r\n      textareaRef.current.focus();\r\n    }\r\n  };\r\n\r\n  const checkForMilestones = () => {\r\n    const { categoryIndex, subcategoryIndex, topicIndex, questionIndex } = state.currentPosition;\r\n    const currentCategory = state.questionsData[categoryIndex];\r\n    const currentSubcategory = currentCategory?.subcategories[subcategoryIndex];\r\n    const currentTopic = currentSubcategory?.topics[topicIndex];\r\n    \r\n    if (!currentTopic) return null;\r\n\r\n    if (questionIndex === currentTopic.questions.length - 1) {\r\n      if (topicIndex === currentSubcategory.topics.length - 1) {\r\n        if (subcategoryIndex === currentCategory.subcategories.length - 1) {\r\n          return {\r\n            type: 'category',\r\n            name: currentCategory.category,\r\n            subcategoryName: currentSubcategory.subcategory,\r\n            topicName: currentTopic.topic\r\n          };\r\n        }\r\n        return {\r\n          type: 'subcategory',\r\n          name: currentSubcategory.subcategory,\r\n          topicName: currentTopic.topic,\r\n          categoryName: currentCategory.category\r\n        };\r\n      }\r\n      return {\r\n        type: 'topic',\r\n        name: currentTopic.topic,\r\n        subcategoryName: currentSubcategory.subcategory,\r\n        categoryName: currentCategory.category\r\n      };\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // UPDATED performSave to handle both regular and pre-attention data\r\n  const performSave = async (questionDataToUse?: any, answerToUse?: string, startTimeToUse?: number, qualityAnalysis?: any, skipSuccessMessage?: boolean) => {\r\n    const questionData = questionDataToUse || currentQuestionData;\r\n    const answerText = answerToUse || answer;\r\n    const timeStart = startTimeToUse || startTime;\r\n    \r\n    if (!questionData || !state.sessionId) {\r\n      console.error('Missing required data for save');\r\n      return false;\r\n    }\r\n\r\n    // For attention checks, create a special question ID using actual response count\r\n    const questionId = isAttentionCheck \r\n      ? `ATTENTION_CHECK_${getActualQuestionResponseCount()}_${questionData.questionId}`\r\n      : questionData.questionId;\r\n\r\n    const questionText = isAttentionCheck \r\n      ? attentionCheck.question \r\n      : questionData.question;\r\n\r\n    if (!qualityAnalysis) {\r\n      qualityAnalysis = analyzeResponseQuality(answerText);\r\n    }\r\n\r\n    setIsSaving(true);\r\n    \r\n    try {\r\n      const timeSpent = Math.floor((Date.now() - timeStart) / 1000);\r\n      \r\n      const response = {\r\n        sessionId: state.sessionId,\r\n        questionId: questionId,\r\n        categoryIndex: state.currentPosition.categoryIndex,\r\n        subcategoryIndex: state.currentPosition.subcategoryIndex,\r\n        topicIndex: state.currentPosition.topicIndex,\r\n        questionIndex: state.currentPosition.questionIndex,\r\n        category: questionData.category,\r\n        subcategory: questionData.subcategory,\r\n        topic: questionData.topic,\r\n        question: questionText,\r\n        answer: answerText.trim(),\r\n        timeSpent,\r\n        timestamp: new Date().toISOString(),\r\n        qualityScore: qualityAnalysis.score,\r\n        isAttentionCheck: isAttentionCheck,\r\n        attentionCheckType: isAttentionCheck ? attentionCheck.type : undefined,\r\n        expectedAnswer: isAttentionCheck ? attentionCheck.expectedAnswer : undefined\r\n      };\r\n\r\n      console.log('Saving response:', {\r\n        questionId,\r\n        isAttentionCheck,\r\n        answer: answerText.substring(0, 50) + '...',\r\n        totalResponses: state.responses.size,\r\n        qualityScore: qualityAnalysis.score\r\n      });\r\n\r\n      await saveResponse(response);\r\n      \r\n      // Only show success message if not skipped and not an attention check\r\n      if (!skipSuccessMessage && !isAttentionCheck) {\r\n        setShowSuccess(true);\r\n        setTimeout(() => setShowSuccess(false), 2000);\r\n      }\r\n      return true;\r\n      \r\n    } catch (error) {\r\n      console.error('SAVE ERROR:', error);\r\n      throw error;\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!validateForm() || !currentQuestionData || !state.sessionId) {\r\n      console.log('Validation failed:', errors);\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const qualityAnalysis = analyzeResponseQuality(answer);\r\n      return await performSave(undefined, undefined, undefined, qualityAnalysis);\r\n    } catch (error) {\r\n      console.error('Save failed:', error);\r\n      alert('Failed to save response. Please try again.');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // FIXED handleNext function\r\n  const handleNext = async () => {\r\n    const isValid = validateForm();\r\n    if (!isValid) {\r\n      console.log('Form validation failed, cannot proceed');\r\n      return;\r\n    }\r\n\r\n    // Handle attention check validation\r\n    if (isAttentionCheck && attentionCheck) {\r\n      const expectedAnswers = attentionCheck.expectedAnswers || [attentionCheck.expectedAnswer];\r\n      const isAttentionCheckValid = validateAttentionCheck(answer, expectedAnswers);\r\n      \r\n      console.log('ATTENTION CHECK VALIDATION:', {\r\n        userAnswer: answer,\r\n        expectedAnswers: expectedAnswers,\r\n        isValid: isAttentionCheckValid,\r\n        attentionCheckType: attentionCheck.type\r\n      });\r\n      \r\n      if (!isAttentionCheckValid) {\r\n        console.log('❌ ATTENTION CHECK FAILED - Redirecting to completion');\r\n        \r\n        try {\r\n          await performSave();\r\n          console.log('Failed attention check response saved');\r\n        } catch (error) {\r\n          console.error('Error saving failed attention check:', error);\r\n        }\r\n        \r\n        if (state.sessionId) {\r\n          try {\r\n            await api.completeUser(state.sessionId, 'attention_check_failed');\r\n            console.log('Survey marked as completed due to attention check failure');\r\n          } catch (error) {\r\n            console.error('Error marking survey completed:', error);\r\n          }\r\n        }\r\n        \r\n        dispatch({ type: 'SET_ATTENTION_CHECK_FAILED', payload: true });\r\n        return;\r\n      } else {\r\n        console.log('✅ ATTENTION CHECK PASSED');\r\n        \r\n        // Save the attention check response\r\n        try {\r\n          await performSave();\r\n          console.log('Attention check response saved');\r\n        } catch (error) {\r\n          console.error('Error saving attention check:', error);\r\n        }\r\n        \r\n        // Save the pre-attention data if it exists\r\n        if (preAttentionData) {\r\n          console.log('💾 Saving pre-attention data:', preAttentionData.questionData.questionId);\r\n          try {\r\n            await performSave(\r\n              preAttentionData.questionData,\r\n              preAttentionData.answer,\r\n              preAttentionData.startTime,\r\n              undefined,\r\n              true // Skip success message\r\n            );\r\n            console.log('Pre-attention data saved successfully');\r\n          } catch (error) {\r\n            console.error('Error saving pre-attention data:', error);\r\n          }\r\n        }\r\n        \r\n        // Reset attention check state and clear pre-attention data\r\n        setIsAttentionCheck(false);\r\n        setAttentionCheck(null);\r\n        \r\n        // TRIGGER NAVIGATION with animation\r\n        setNavigationDirection('next');\r\n        setIsNavigating(true);\r\n        \r\n        setTimeout(() => {\r\n          // Clear the answer field to prevent wrong answer from showing\r\n          setAnswer('');\r\n          setPreAttentionData(null);\r\n          \r\n          // Force re-render by updating the question ID tracker\r\n          setLastQuestionId(null);\r\n        }, 300);\r\n        \r\n        return;\r\n      }\r\n    }\r\n\r\n    // Regular question flow - check for quality issues before saving\r\n    try {\r\n      if (!isAttentionCheck) {\r\n        const qualityAnalysis = analyzeResponseQuality(answer);\r\n        \r\n        // If this individual response is very low quality, show warning\r\n        if (qualityAnalysis.isLowQuality && qualityAnalysis.score < 10 && qualityAnalysis.isGibberish) {\r\n        console.log('Individual response quality extremely poor:', qualityAnalysis.score);\r\n        setCurrentQualityIssue({\r\n          type: 'individual',\r\n          noneRate: qualityAnalysis.isNoneResponse ? 100 : 0,\r\n          gibberishRate: qualityAnalysis.isGibberish ? 100 : 0,\r\n          speedRate: 0\r\n        });\r\n        setQualityWarnings([\r\n          'This response appears to be random characters or gibberish',\r\n          ...qualityAnalysis.issues.slice(0, 2) // Limit issues shown\r\n        ]);\r\n        setShowQualityModal(true);\r\n        return;\r\n      }\r\n      }\r\n      \r\n      const saveSuccessful = await handleSave();\r\n      \r\n      if (saveSuccessful && isValid) {\r\n        // If we have pre-attention data and we're saving the same question, clear it\r\n        if (\r\n          preAttentionData &&\r\n          currentQuestionData &&\r\n          preAttentionData.questionData.questionId === currentQuestionData.questionId\r\n        ) {\r\n          console.log('Clearing pre-attention data after saving the same question');\r\n          setPreAttentionData(null);\r\n        }\r\n        \r\n        const milestone = checkForMilestones();\r\n        \r\n        setNavigationDirection('next');\r\n        setIsNavigating(true);\r\n        \r\n        setTimeout(() => {\r\n          navigateToNext();\r\n          \r\n          if (milestone && !isAttentionCheck) {\r\n            setShowCelebration({type: milestone.type, data: milestone});\r\n          }\r\n        }, 300);\r\n      }\r\n    } catch (error) {\r\n      console.error('Next navigation failed:', error);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    setNavigationDirection('previous');\r\n    setIsNavigating(true);\r\n    \r\n    setTimeout(() => {\r\n      navigateToPrevious();\r\n    }, 300);\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    if (isAttentionCheck) return; // Don't allow skipping attention checks\r\n    \r\n    setAnswer('');\r\n    setErrors({});\r\n    \r\n    setNavigationDirection('next');\r\n    setIsNavigating(true);\r\n    \r\n    setTimeout(() => {\r\n      navigateToNext();\r\n    }, 300);\r\n  };\r\n\r\n  const handleQualityModalClose = () => {\r\n    console.log('Quality modal closed - user will improve response');\r\n    setShowQualityModal(false);\r\n    \r\n    // Clear the current answer to force them to rewrite\r\n    setAnswer('');\r\n    setErrors({});\r\n    setQualityWarnings([]);\r\n    \r\n    // Reset the quality issue state\r\n    setCurrentQualityIssue({\r\n      type: null,\r\n      noneRate: 0,\r\n      gibberishRate: 0,\r\n      speedRate: 0\r\n    });\r\n    \r\n    setTimeout(() => {\r\n      if (textareaRef.current) {\r\n        textareaRef.current.focus();\r\n      }\r\n    }, 100);\r\n  };\r\n\r\n  const closeCelebration = () => {\r\n    setShowCelebration(null);\r\n  };\r\n\r\n  if (!currentQuestionData) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-100 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Loading question...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (state.surveyExpired) {\r\n    return null;\r\n  }\r\n\r\n  const isFirstQuestion = state.currentPosition.categoryIndex === 0 && \r\n                         state.currentPosition.subcategoryIndex === 0 && \r\n                         state.currentPosition.topicIndex === 0 && \r\n                         state.currentPosition.questionIndex === 0;\r\n\r\n  const isFormValid = answer.trim().length >= 4;\r\n  const displayQuestion = isAttentionCheck ? attentionCheck.question : currentQuestionData.question;\r\n\r\n  if (attentionCheckFailed) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div \r\n      className=\"min-h-screen\"\r\n      style={{ \r\n        background: `linear-gradient(135deg, var(--bg-primary) 0%, var(--color-cream) 50%, var(--bg-secondary) 100%)` \r\n      }}\r\n    >\r\n      <SurveyTimer />\r\n      <ProgressBar />\r\n\r\n      {!isAttentionCheck && (\r\n        <QualityWarningModal\r\n          isOpen={showQualityModal}\r\n          onClose={handleQualityModalClose}\r\n          qualityIssues={qualityWarnings}\r\n          issueType={currentQualityIssue.type}\r\n          noneResponseRate={currentQualityIssue.noneRate}\r\n          gibberishResponseRate={currentQualityIssue.gibberishRate}\r\n          fastResponseRate={currentQualityIssue.speedRate}\r\n        />\r\n      )}\r\n      \r\n      {showCelebration && (\r\n        <CelebrationModal \r\n          celebration={showCelebration} \r\n          onClose={closeCelebration}\r\n        />\r\n      )}\r\n      \r\n      <div className=\"max-w-4xl mx-auto px-4 py-6\">\r\n        <div className=\"relative overflow-hidden\">\r\n          <div className={`transform transition-all duration-500 ease-in-out ${\r\n            isNavigating \r\n              ? navigationDirection === 'next' \r\n                ? '-translate-x-full opacity-0'\r\n                : 'translate-x-full opacity-0'\r\n              : 'translate-x-0 opacity-100'\r\n          }`}>\r\n\r\n            <div \r\n              className=\"backdrop-blur-sm rounded-2xl shadow-lg overflow-hidden\"\r\n              style={{ \r\n                backgroundColor: 'var(--bg-card)',\r\n                border: '1px solid var(--border-light)'\r\n              }}\r\n            >\r\n              \r\n              <div \r\n                className=\"p-6\"\r\n                style={{ \r\n                  background: 'var(--bg-card-header)',\r\n                  color: 'var(--text-on-dark)'\r\n                }}\r\n              >\r\n                {isAttentionCheck}\r\n                <h2 className=\"text-lg md:text-xl font-medium leading-relaxed\">\r\n                  {displayQuestion}\r\n                </h2>\r\n              </div>\r\n\r\n              <div className=\"p-6\">\r\n                <div className=\"mb-6\">\r\n                  <div className=\"flex justify-between items-center mb-3\">\r\n                    <label \r\n                      className=\"block text-base font-medium\"\r\n                      style={{ color: 'var(--text-primary)' }}\r\n                    >\r\n                      <span>Your Answer *</span>\r\n                      <span \r\n                        className=\"block text-xs font-normal mt-1\"\r\n                        style={{ color: 'var(--text-secondary)' }}\r\n                      >\r\n                        You can specify \"none\" if no answer exists\r\n                      </span>\r\n                    </label>\r\n                    <button\r\n                      onClick={handleClear}\r\n                      className=\"text-sm font-medium hover:underline transition-colors\"\r\n                      style={{ color: 'var(--accent-warning)' }}\r\n                    >\r\n                      Clear Form\r\n                    </button>\r\n                  </div>\r\n                  \r\n                  <div className=\"relative\">\r\n                    <textarea\r\n                      ref={textareaRef}\r\n                      value={answer}\r\n                      onChange={handleAnswerChange}\r\n                      placeholder=\"Share your knowledge about cultural practices in your region, or specify 'none' if no answer exists...\"\r\n                      className={`w-full px-4 py-3 border-2 rounded-xl resize-none min-h-[120px] transition-all duration-200 ${\r\n                        errors.answer ? 'focus:border-red-400' : ''\r\n                      }`}\r\n                      style={{\r\n                        color: 'var(--text-primary)',\r\n                        borderColor: errors.answer ? 'var(--accent-error)' : 'var(--border-medium)',\r\n                        backgroundColor: 'rgba(244, 228, 202, 0.3)'\r\n                      }}\r\n                      maxLength={5000}\r\n                      disabled={isSaving}\r\n                    />\r\n                    \r\n                    <div \r\n                      className={`absolute bottom-3 right-3 px-2 py-1 rounded-lg text-xs border`}\r\n                      style={{\r\n                        backgroundColor: answer.length >= 4 ? 'var(--color-cream)' : '#fef3c7',\r\n                        color: answer.length >= 4 ? 'var(--text-secondary)' : 'var(--accent-warning)',\r\n                        borderColor: answer.length >= 4 ? 'var(--border-light)' : '#fbbf24'\r\n                      }}\r\n                    >\r\n                      {answer.length}/5000 {answer.length < 4 && `(${4 - answer.length} more needed)`}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {errors.answer && (\r\n                    <p className=\"text-sm mt-2 font-medium\" style={{ color: 'var(--accent-error)' }}>\r\n                      {errors.answer}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n\r\n                {!isAttentionCheck && qualityWarnings.length > 0 && (\r\n                  <div \r\n                    className=\"mb-4 p-3 border rounded-xl\"\r\n                    style={{ \r\n                      background: 'var(--btn-warning-bg)',\r\n                      borderColor: '#fbbf24'\r\n                    }}\r\n                  >\r\n                    <div className=\"flex items-start\">\r\n                      <span style={{ color: 'var(--accent-warning)' }} className=\"mr-2\">⚠️</span>\r\n                      <div className=\"text-sm\" style={{ color: '#92400e' }}>\r\n                        <p className=\"font-medium mb-1\">Response Quality Notice:</p>\r\n                        <ul className=\"text-xs space-y-1\">\r\n                          {qualityWarnings.map((warning, index) => (\r\n                            <li key={index}>• {warning}</li>\r\n                          ))}\r\n                        </ul>\r\n                        <p className=\"mt-2 font-medium\">\r\n                          Please provide detailed responses or specify \"none\" if not applicable.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {showSuccess && (\r\n                  <div \r\n                    className=\"mb-4 p-3 border rounded-xl animate-bounce-in\"\r\n                    style={{ \r\n                      background: 'var(--accent-success)',\r\n                      borderColor: 'var(--border-dark)',\r\n                      color: 'var(--text-on-dark)'\r\n                    }}\r\n                  >\r\n                    <div className=\"flex items-center\">\r\n                      <span className=\"mr-2\">✨</span>\r\n                      <span className=\"font-medium text-sm\">Response saved successfully!</span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {!isFormValid && (\r\n                  <div \r\n                    className=\"mb-4 p-3 border rounded-xl\"\r\n                    style={{ \r\n                      background: 'var(--btn-warning-bg)',\r\n                      borderColor: '#fbbf24'\r\n                    }}\r\n                  >\r\n                    <div className=\"flex items-start\">\r\n                      <span style={{ color: 'var(--accent-warning)' }} className=\"mr-2\">⚠️</span>\r\n                      <div className=\"text-sm\" style={{ color: '#92400e' }}>\r\n                        <p className=\"font-medium mb-1\">Please complete the following:</p>\r\n                        <ul className=\"text-xs space-y-1\">\r\n                          <li>• Add at least 4 characters to your answer or specify \"none\"</li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                <div \r\n                  className=\"flex justify-between items-center pt-4 border-t\"\r\n                  style={{ borderColor: 'var(--border-light)' }}\r\n                >\r\n                  <button\r\n                    onClick={handlePrevious}\r\n                    disabled={isFirstQuestion || isNavigating || isAttentionCheck}\r\n                    className=\"flex items-center px-4 py-2 font-medium rounded-xl transition-all duration-200 disabled:cursor-not-allowed text-sm disabled:opacity-50\"\r\n                    style={{ \r\n                      background: 'var(--btn-warning-bg)',\r\n                      color: '#92400e'\r\n                    }}\r\n                  >\r\n                    <span className=\"mr-2\">←</span>\r\n                    Previous\r\n                  </button>\r\n\r\n                  <div className=\"flex space-x-3\">\r\n                    {!isAttentionCheck && (\r\n                      <button\r\n                        onClick={handleSkip}\r\n                        disabled={isNavigating}\r\n                        className=\"px-4 py-2 font-medium rounded-xl transition-all duration-200 text-sm\"\r\n                        style={{ \r\n                          background: 'var(--btn-warning-bg)',\r\n                          color: '#92400e'\r\n                        }}\r\n                      >\r\n                        Skip\r\n                      </button>\r\n                    )}\r\n\r\n                    <button\r\n                      onClick={handleSave}\r\n                      disabled={isSaving || !isFormValid || isNavigating}\r\n                      className=\"px-4 py-2 font-medium rounded-xl transition-all duration-200 disabled:cursor-not-allowed text-sm disabled:opacity-50\"\r\n                      style={{ \r\n                        background: 'var(--btn-secondary-bg)',\r\n                        color: 'var(--text-on-dark)'\r\n                      }}\r\n                    >\r\n                      {isSaving ? 'Saving...' : 'Save'}\r\n                    </button>\r\n\r\n                    <button\r\n                      onClick={handleNext}\r\n                      disabled={isSaving || !isFormValid || isNavigating}\r\n                      className=\"flex items-center px-5 py-2 font-medium rounded-xl transition-all duration-200 disabled:cursor-not-allowed text-sm disabled:opacity-50\"\r\n                      style={{ \r\n                        background: 'var(--btn-primary-bg)',\r\n                        color: 'var(--text-on-dark)'\r\n                      }}\r\n                    >\r\n                      {isNavigating ? 'Moving...' : (\r\n                        <>\r\n                          Save & Continue\r\n                          <span className=\"ml-2\">→</span>\r\n                        </>\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Celebration Modal Component\r\nfunction CelebrationModal({ celebration, onClose }: { \r\n  celebration: {type: string, data: any}, \r\n  onClose: () => void \r\n}) {\r\n  const celebrations = {\r\n    topic: {\r\n      icon: '🎯',\r\n      title: 'Section Completed!',\r\n      message: 'Great progress! Keep going!'\r\n    },\r\n    subcategory: {\r\n      icon: '🏆',\r\n      title: 'Section Mastered!',\r\n      message: 'Excellent work! Moving to next section!'\r\n    },\r\n    category: {\r\n      icon: '👑',\r\n      title: 'Major Section Complete!',\r\n      message: 'Outstanding! You\\'re making great progress!'\r\n    }\r\n  };\r\n\r\n  const config = celebrations[celebration.type as keyof typeof celebrations];\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black/30 backdrop-blur-sm flex items-center justify-center z-50 animate-fade-in p-4\">\r\n      <div \r\n        className=\"rounded-2xl p-6 max-w-lg mx-auto text-center shadow-2xl animate-bounce-in\"\r\n        style={{ \r\n          backgroundColor: 'var(--bg-card)',\r\n          border: '1px solid var(--border-light)'\r\n        }}\r\n      >\r\n        <div className=\"text-5xl mb-3\">{config.icon}</div>\r\n        <h2 \r\n          className=\"text-2xl font-bold mb-3\"\r\n          style={{ color: 'var(--text-primary)' }}\r\n        >\r\n          {config.title}\r\n        </h2>\r\n        <p \r\n          className=\"text-lg mb-4\"\r\n          style={{ color: 'var(--text-secondary)' }}\r\n        >\r\n          {config.message}\r\n        </p>\r\n        <button\r\n          onClick={onClose}\r\n          className=\"px-6 py-2 font-medium rounded-xl transition-all duration-200\"\r\n          style={{ \r\n            background: 'var(--btn-primary-bg)',\r\n            color: 'var(--text-on-dark)'\r\n          }}\r\n        >\r\n          Continue Survey\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}