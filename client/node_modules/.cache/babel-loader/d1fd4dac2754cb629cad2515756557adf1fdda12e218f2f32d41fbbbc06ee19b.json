{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sangm\\\\OneDrive - Brock University\\\\CommonsenseForm\\\\client\\\\src\\\\components\\\\QuestionForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useForm } from '../context/FormContext.tsx';\nimport { validateAnswer, shouldShowAttentionCheck, generateAttentionCheck, analyzeResponseQuality, analyzeUserPattern, validateAttentionCheck } from '../utils/helpers.ts';\nimport ProgressBar from './ProgressBar.tsx';\nimport QualityWarningModal from './QualityWarningModel.tsx';\nimport SurveyTimer from './SurveyTimer.tsx';\nimport * as api from '../services/api.ts';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function QuestionForm() {\n  _s();\n  const {\n    state,\n    saveResponse,\n    navigateToNext,\n    navigateToPrevious,\n    getCurrentQuestionData,\n    getTotalQuestionsInCurrentTopic,\n    getCompletedQuestionsInCurrentTopic,\n    resetSession,\n    dispatch,\n    navigateToPosition\n  } = useForm();\n\n  // Basic form state\n  const [answer, setAnswer] = useState('');\n  const [errors, setErrors] = useState({});\n  const [isSaving, setIsSaving] = useState(false);\n  const [startTime, setStartTime] = useState(Date.now());\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [lastQuestionId, setLastQuestionId] = useState(null);\n  const [isNavigating, setIsNavigating] = useState(false);\n  const [navigationDirection, setNavigationDirection] = useState(null);\n\n  // Attention check state\n  const [isAttentionCheck, setIsAttentionCheck] = useState(false);\n  const [attentionCheck, setAttentionCheck] = useState(null);\n  const [lastAttentionCheckAt, setLastAttentionCheckAt] = useState(-1);\n  const [attentionChecksPassed, setAttentionChecksPassed] = useState(0);\n  const [attentionChecksFailed, setAttentionChecksFailed] = useState(0);\n  const [attentionCheckFailed, setAttentionCheckFailed] = useState(false);\n\n  // NEW: Store the question data and answer before attention check (without saving to responses)\n  const [preAttentionData, setPreAttentionData] = useState(null);\n\n  // Quality tracking state\n  const [showQualityModal, setShowQualityModal] = useState(false);\n  const [qualityWarnings, setQualityWarnings] = useState([]);\n  const [lastQualityAlertAt, setLastQualityAlertAt] = useState(-1);\n  const [hasShownQualityAlert, setHasShownQualityAlert] = useState(false);\n  const [currentQualityIssue, setCurrentQualityIssue] = useState({\n    type: null,\n    noneRate: 0,\n    gibberishRate: 0,\n    speedRate: 0\n  });\n\n  // Celebration state\n  const [showCelebration, setShowCelebration] = useState(null);\n  const textareaRef = useRef(null);\n  const currentQuestionData = getCurrentQuestionData();\n\n  // At the top of QuestionForm component, add this helper\n  const getActualQuestionResponseCount = useCallback(() => {\n    return Array.from(state.responses.keys()).filter(questionId => !questionId.startsWith('ATTENTION_CHECK_')).length;\n  }, [state.responses]);\n\n  // Quality check monitoring - runs after each response is saved\n  useEffect(() => {\n    // Only check quality for actual question responses, not attention checks\n    const actualResponses = Array.from(state.responses.values()).filter(response => !response.questionId.startsWith('ATTENTION_CHECK_'));\n    if (actualResponses.length < 5 || isAttentionCheck) {\n      return; // Need at least 5 responses to analyze patterns\n    }\n\n    // Avoid showing multiple alerts in quick succession\n    if (hasShownQualityAlert && Date.now() - lastQualityAlertAt < 10000) {\n      return; // Wait at least 10 seconds between alerts\n    }\n    console.log('Running quality analysis on', actualResponses.length, 'actual responses');\n\n    // Analyze the user's response pattern\n    const patternAnalysis = analyzeUserPattern(actualResponses);\n    console.log('Pattern analysis results:', patternAnalysis);\n    if (patternAnalysis.suspiciousPattern) {\n      console.log('🚨 SUSPICIOUS PATTERN DETECTED - showing quality modal');\n      setCurrentQualityIssue({\n        type: patternAnalysis.issueType,\n        noneRate: patternAnalysis.noneResponseRate,\n        gibberishRate: patternAnalysis.gibberishResponseRate,\n        speedRate: patternAnalysis.fastResponseRate\n      });\n      setQualityWarnings(patternAnalysis.warnings);\n      setShowQualityModal(true);\n      setLastQualityAlertAt(Date.now());\n      setHasShownQualityAlert(true);\n    }\n  }, [\n  // Trigger when actual responses change\n  Array.from(state.responses.values()).filter(response => !response.questionId.startsWith('ATTENTION_CHECK_')).length, isAttentionCheck, hasShownQualityAlert, lastQualityAlertAt]);\n\n  // Check if this should be an attention check - FIXED LOGIC\n  useEffect(() => {\n    // Get count of actual question responses (excluding attention checks)\n    const actualQuestionResponses = Array.from(state.responses.keys()).filter(questionId => !questionId.startsWith('ATTENTION_CHECK_')).length;\n    console.log('Attention check logic:', {\n      totalResponses: state.responses.size,\n      actualQuestionResponses,\n      lastAttentionCheckAt,\n      shouldShow: shouldShowAttentionCheck(actualQuestionResponses),\n      currentQuestionId: currentQuestionData === null || currentQuestionData === void 0 ? void 0 : currentQuestionData.questionId,\n      isCurrentlyAttentionCheck: isAttentionCheck,\n      hasPreAttentionData: !!preAttentionData\n    });\n\n    // Don't show if we haven't moved to a new actual question response count\n    if (lastAttentionCheckAt === actualQuestionResponses) {\n      console.log('Already shown attention check for this actual question response count');\n      return;\n    }\n\n    // Don't show if we're already showing an attention check\n    if (isAttentionCheck) {\n      console.log('Already showing attention check, skipping');\n      return;\n    }\n\n    // Don't trigger if we already have pre-attention data stored\n    if (preAttentionData) {\n      console.log('Already have pre-attention data, skipping attention check trigger');\n      return;\n    }\n    if (shouldShowAttentionCheck(actualQuestionResponses) && currentQuestionData) {\n      // Check if we've already shown an attention check for this actual response count\n      const attentionCheckKey = `${actualQuestionResponses}`;\n      const shownAttentionChecks = JSON.parse(localStorage.getItem('shownAttentionChecks') || '[]');\n      if (shownAttentionChecks.includes(attentionCheckKey)) {\n        console.log('Attention check already shown for this actual response count');\n        return;\n      }\n      console.log('🚨 TRIGGERING ATTENTION CHECK at actual response count:', actualQuestionResponses);\n\n      // Store the current question data and answer WITHOUT saving to responses\n      if (answer.trim().length >= 4) {\n        console.log('📝 Storing current question data before attention check (not saving yet):', currentQuestionData.questionId);\n        setPreAttentionData({\n          questionData: currentQuestionData,\n          answer: answer.trim(),\n          startTime: startTime\n        });\n      }\n      const check = generateAttentionCheck(currentQuestionData.category, currentQuestionData.topic, state.userInfo || undefined);\n      setAttentionCheck(check);\n      setIsAttentionCheck(true);\n      setLastAttentionCheckAt(actualQuestionResponses);\n\n      // Mark this attention check as shown\n      shownAttentionChecks.push(attentionCheckKey);\n      localStorage.setItem('shownAttentionChecks', JSON.stringify(shownAttentionChecks));\n\n      // Clear answer for attention check and reset start time\n      setAnswer('');\n      setStartTime(Date.now());\n    } else {\n      // Reset attention check state when we shouldn't show one\n      if (isAttentionCheck) {\n        console.log('Resetting attention check state');\n        setIsAttentionCheck(false);\n        setAttentionCheck(null);\n      }\n    }\n  }, [getActualQuestionResponseCount(),\n  // This will properly trigger when actual questions are answered\n  lastAttentionCheckAt, currentQuestionData === null || currentQuestionData === void 0 ? void 0 : currentQuestionData.questionId, isAttentionCheck, preAttentionData]);\n\n  // Reset form when question changes - handles both regular navigation and post-attention-check\n  // Reset form when question changes - handles both regular navigation and post-attention-check\n  useEffect(() => {\n    if (currentQuestionData && currentQuestionData.questionId !== lastQuestionId) {\n      console.log('Question changed, loading data for:', currentQuestionData.questionId);\n      setErrors({});\n      setShowSuccess(false);\n      setStartTime(Date.now());\n      setLastQuestionId(currentQuestionData.questionId);\n      setIsNavigating(false);\n      setNavigationDirection(null);\n      setQualityWarnings([]);\n      if (isAttentionCheck) {\n        // We're showing an attention check, keep answer cleared\n        setAnswer('');\n      } else {\n        // Check if this matches our pre-attention data\n        if (preAttentionData && preAttentionData.questionData.questionId === currentQuestionData.questionId) {\n          console.log('🔄 Restoring pre-attention data for:', currentQuestionData.questionId);\n          setAnswer(preAttentionData.answer);\n          setStartTime(preAttentionData.startTime);\n          // Clear preAttentionData since we're now back to the original question\n          setPreAttentionData(null);\n        } else {\n          // Normal question loading - check for existing response\n          const existingResponse = state.responses.get(currentQuestionData.questionId);\n          if (existingResponse) {\n            console.log('Found existing response:', existingResponse.answer.substring(0, 50) + '...');\n            setAnswer(existingResponse.answer);\n          } else {\n            console.log('No existing response, clearing form');\n            setAnswer('');\n          }\n        }\n      }\n    }\n  }, [currentQuestionData === null || currentQuestionData === void 0 ? void 0 : currentQuestionData.questionId, lastQuestionId, state.responses, isAttentionCheck, preAttentionData]);\n\n  // Auto-resize textarea\n  useEffect(() => {\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n      textareaRef.current.style.height = textareaRef.current.scrollHeight + 'px';\n    }\n  }, [answer]);\n  const validateForm = () => {\n    const newErrors = {};\n    const answerValidation = validateAnswer(answer);\n    if (!answerValidation.isValid) {\n      newErrors.answer = answerValidation.message;\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleAnswerChange = e => {\n    const newValue = e.target.value;\n    setAnswer(newValue);\n    if (errors.answer) {\n      setErrors(prev => ({\n        ...prev,\n        answer: undefined\n      }));\n    }\n\n    // Real-time quality feedback for current response only (skip for attention checks)\n    if (newValue.length > 5 && !isAttentionCheck) {\n      const qualityAnalysis = analyzeResponseQuality(newValue);\n      if (qualityAnalysis.isLowQuality) {\n        setQualityWarnings(qualityAnalysis.issues);\n      } else {\n        setQualityWarnings([]);\n      }\n    } else {\n      setQualityWarnings([]);\n    }\n  };\n  const handleClear = () => {\n    setAnswer('');\n    setErrors({});\n    setShowSuccess(false);\n    setQualityWarnings([]);\n    if (textareaRef.current) {\n      textareaRef.current.focus();\n    }\n  };\n  const checkForMilestones = () => {\n    const {\n      categoryIndex,\n      subcategoryIndex,\n      topicIndex,\n      questionIndex\n    } = state.currentPosition;\n    const currentCategory = state.questionsData[categoryIndex];\n    const currentSubcategory = currentCategory === null || currentCategory === void 0 ? void 0 : currentCategory.subcategories[subcategoryIndex];\n    const currentTopic = currentSubcategory === null || currentSubcategory === void 0 ? void 0 : currentSubcategory.topics[topicIndex];\n    if (!currentTopic) return null;\n    if (questionIndex === currentTopic.questions.length - 1) {\n      if (topicIndex === currentSubcategory.topics.length - 1) {\n        if (subcategoryIndex === currentCategory.subcategories.length - 1) {\n          return {\n            type: 'category',\n            name: currentCategory.category,\n            subcategoryName: currentSubcategory.subcategory,\n            topicName: currentTopic.topic\n          };\n        }\n        return {\n          type: 'subcategory',\n          name: currentSubcategory.subcategory,\n          topicName: currentTopic.topic,\n          categoryName: currentCategory.category\n        };\n      }\n      return {\n        type: 'topic',\n        name: currentTopic.topic,\n        subcategoryName: currentSubcategory.subcategory,\n        categoryName: currentCategory.category\n      };\n    }\n    return null;\n  };\n\n  // UPDATED performSave to handle both regular and pre-attention data\n  // UPDATED performSave to handle both regular and pre-attention data\n  // Replace the existing performSave function with this one\n  const performSave = async (questionDataToUse, answerToUse, startTimeToUse, qualityAnalysis, skipSuccessMessage) => {\n    const questionData = questionDataToUse || currentQuestionData;\n    const answerText = answerToUse || answer;\n    const timeStart = startTimeToUse || startTime;\n    if (!questionData || !state.sessionId) {\n      console.error('Missing required data for save');\n      return false;\n    }\n\n    // For attention checks, create a special question ID\n    const questionId = isAttentionCheck ? `ATTENTION_CHECK_${state.responses.size}_${questionData.questionId}` : questionData.questionId;\n    const questionText = isAttentionCheck ? attentionCheck.question : questionData.question;\n    if (!qualityAnalysis) {\n      qualityAnalysis = analyzeResponseQuality(answerText);\n    }\n    setIsSaving(true);\n    try {\n      const timeSpent = Math.floor((Date.now() - timeStart) / 1000);\n      const response = {\n        sessionId: state.sessionId,\n        questionId: questionId,\n        categoryIndex: state.currentPosition.categoryIndex,\n        subcategoryIndex: state.currentPosition.subcategoryIndex,\n        topicIndex: state.currentPosition.topicIndex,\n        questionIndex: state.currentPosition.questionIndex,\n        category: questionData.category,\n        subcategory: questionData.subcategory,\n        topic: questionData.topic,\n        question: questionText,\n        answer: answerText.trim(),\n        timeSpent,\n        timestamp: new Date().toISOString(),\n        qualityScore: qualityAnalysis.score,\n        isAttentionCheck: isAttentionCheck,\n        attentionCheckType: isAttentionCheck ? attentionCheck.type : undefined,\n        expectedAnswer: isAttentionCheck ? attentionCheck.expectedAnswer : undefined\n      };\n      console.log('Saving response:', {\n        questionId,\n        isAttentionCheck,\n        answer: answerText.substring(0, 50) + '...',\n        totalResponses: state.responses.size\n      });\n      await saveResponse(response);\n\n      // Only show success message if not skipped and not an attention check\n      if (!skipSuccessMessage && !isAttentionCheck) {\n        setShowSuccess(true);\n        setTimeout(() => setShowSuccess(false), 2000);\n      }\n      return true;\n    } catch (error) {\n      console.error('SAVE ERROR:', error);\n      throw error;\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  const handleSave = async () => {\n    if (!validateForm() || !currentQuestionData || !state.sessionId) {\n      console.log('Validation failed:', errors);\n      return false;\n    }\n    try {\n      const qualityAnalysis = analyzeResponseQuality(answer);\n      return await performSave(undefined, undefined, undefined, qualityAnalysis);\n    } catch (error) {\n      console.error('Save failed:', error);\n      alert('Failed to save response. Please try again.');\n      return false;\n    }\n  };\n\n  // FIXED handleNext function - replace the existing one\n  const handleNext = async () => {\n    const isValid = validateForm();\n    if (!isValid) {\n      console.log('Form validation failed, cannot proceed');\n      return;\n    }\n\n    // Handle attention check validation\n    if (isAttentionCheck && attentionCheck) {\n      const expectedAnswers = attentionCheck.expectedAnswers || [attentionCheck.expectedAnswer];\n      const isAttentionCheckValid = validateAttentionCheck(answer, expectedAnswers);\n      console.log('ATTENTION CHECK VALIDATION:', {\n        userAnswer: answer,\n        expectedAnswers: expectedAnswers,\n        isValid: isAttentionCheckValid,\n        attentionCheckType: attentionCheck.type\n      });\n      if (!isAttentionCheckValid) {\n        console.log('❌ ATTENTION CHECK FAILED - Redirecting to completion');\n        try {\n          await performSave();\n          console.log('Failed attention check response saved');\n        } catch (error) {\n          console.error('Error saving failed attention check:', error);\n        }\n        if (state.sessionId) {\n          try {\n            await api.completeUser(state.sessionId, 'attention_check_failed');\n            console.log('Survey marked as completed due to attention check failure');\n          } catch (error) {\n            console.error('Error marking survey completed:', error);\n          }\n        }\n        dispatch({\n          type: 'SET_ATTENTION_CHECK_FAILED',\n          payload: true\n        });\n        return;\n      } else {\n        console.log('✅ ATTENTION CHECK PASSED');\n\n        // Save the attention check response\n        try {\n          await performSave();\n          console.log('Attention check response saved');\n        } catch (error) {\n          console.error('Error saving attention check:', error);\n        }\n\n        // Save the pre-attention data if it exists\n        if (preAttentionData) {\n          console.log('💾 Saving pre-attention data:', preAttentionData.questionData.questionId);\n          try {\n            await performSave(preAttentionData.questionData, preAttentionData.answer, preAttentionData.startTime, undefined, true // Skip success message\n            );\n            console.log('Pre-attention data saved successfully');\n          } catch (error) {\n            console.error('Error saving pre-attention data:', error);\n          }\n        }\n\n        // Reset attention check state and clear pre-attention data\n        setIsAttentionCheck(false);\n        setAttentionCheck(null);\n\n        // TRIGGER NAVIGATION with animation\n        setNavigationDirection('next');\n        setIsNavigating(true);\n        setTimeout(() => {\n          // Clear the answer field to prevent wrong answer from showing\n          setAnswer('');\n          setPreAttentionData(null);\n\n          // Force re-render by updating the question ID tracker\n          setLastQuestionId(null);\n        }, 300);\n        return;\n      }\n    }\n\n    // Regular question flow\n    // In handleNext function, add this before the regular question flow:\n\n    // Regular question flow\n    try {\n      // Check for quality issues before saving\n      if (!isAttentionCheck) {\n        const qualityAnalysis = analyzeResponseQuality(answer);\n\n        // If this individual response is very low quality, show warning\n        if (qualityAnalysis.isLowQuality && qualityAnalysis.score < 15) {\n          console.log('Individual response quality too low:', qualityAnalysis.score);\n          setCurrentQualityIssue({\n            type: 'individual',\n            noneRate: qualityAnalysis.isNoneResponse ? 100 : 0,\n            gibberishRate: qualityAnalysis.isGibberish ? 100 : 0,\n            speedRate: 0\n          });\n          setQualityWarnings(['This response appears to be very low quality', ...qualityAnalysis.issues]);\n          setShowQualityModal(true);\n          return; // Don't proceed with save\n        }\n      }\n      const saveSuccessful = await handleSave();\n      if (saveSuccessful && isValid) {\n        // ... rest of the existing code\n      }\n    } catch (error) {\n      console.error('Next navigation failed:', error);\n    }\n    try {\n      const saveSuccessful = await handleSave();\n      if (saveSuccessful && isValid) {\n        // If we have pre-attention data and we're saving the same question, clear it\n        if (preAttentionData && currentQuestionData && preAttentionData.questionData.questionId === currentQuestionData.questionId) {\n          console.log('Clearing pre-attention data after saving the same question');\n          setPreAttentionData(null);\n        }\n        const milestone = checkForMilestones();\n        setNavigationDirection('next');\n        setIsNavigating(true);\n        setTimeout(() => {\n          navigateToNext();\n          if (milestone && !isAttentionCheck) {\n            setShowCelebration({\n              type: milestone.type,\n              data: milestone\n            });\n          }\n        }, 300);\n      }\n    } catch (error) {\n      console.error('Next navigation failed:', error);\n    }\n  };\n  const handlePrevious = () => {\n    setNavigationDirection('previous');\n    setIsNavigating(true);\n    setTimeout(() => {\n      navigateToPrevious();\n    }, 300);\n  };\n  const handleSkip = () => {\n    if (isAttentionCheck) return; // Don't allow skipping attention checks\n\n    setAnswer('');\n    setErrors({});\n    setNavigationDirection('next');\n    setIsNavigating(true);\n    setTimeout(() => {\n      navigateToNext();\n    }, 300);\n  };\n  const handleQualityModalClose = () => {\n    console.log('Quality modal closed - user will improve response');\n    setShowQualityModal(false);\n    setAnswer('');\n    setErrors({});\n    setTimeout(() => {\n      if (textareaRef.current) {\n        textareaRef.current.focus();\n      }\n    }, 100);\n  };\n  const closeCelebration = () => {\n    setShowCelebration(null);\n  };\n  if (!currentQuestionData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-100 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Loading question...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 7\n    }, this);\n  }\n  if (state.surveyExpired) {\n    return null;\n  }\n  const isFirstQuestion = state.currentPosition.categoryIndex === 0 && state.currentPosition.subcategoryIndex === 0 && state.currentPosition.topicIndex === 0 && state.currentPosition.questionIndex === 0;\n  const isFormValid = answer.trim().length >= 4;\n  const displayQuestion = isAttentionCheck ? attentionCheck.question : currentQuestionData.question;\n  if (attentionCheckFailed) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen\",\n    style: {\n      background: `linear-gradient(135deg, var(--bg-primary) 0%, var(--color-cream) 50%, var(--bg-secondary) 100%)`\n    },\n    children: [/*#__PURE__*/_jsxDEV(SurveyTimer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 7\n    }, this), !isAttentionCheck && /*#__PURE__*/_jsxDEV(QualityWarningModal, {\n      isOpen: showQualityModal,\n      onClose: handleQualityModalClose,\n      qualityIssues: qualityWarnings,\n      issueType: currentQualityIssue.type,\n      noneResponseRate: currentQualityIssue.noneRate,\n      gibberishResponseRate: currentQualityIssue.gibberishRate,\n      fastResponseRate: currentQualityIssue.speedRate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 9\n    }, this), showCelebration && /*#__PURE__*/_jsxDEV(CelebrationModal, {\n      celebration: showCelebration,\n      onClose: closeCelebration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto px-4 py-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `transform transition-all duration-500 ease-in-out ${isNavigating ? navigationDirection === 'next' ? '-translate-x-full opacity-0' : 'translate-x-full opacity-0' : 'translate-x-0 opacity-100'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"backdrop-blur-sm rounded-2xl shadow-lg overflow-hidden\",\n            style: {\n              backgroundColor: 'var(--bg-card)',\n              border: '1px solid var(--border-light)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-6\",\n              style: {\n                background: 'var(--bg-card-header)',\n                color: 'var(--text-on-dark)'\n              },\n              children: [isAttentionCheck && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3 text-sm font-medium\",\n                style: {\n                  color: 'var(--text-on-dark)'\n                },\n                children: \"\\uD83D\\uDD0D Attention Check\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 710,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-lg md:text-xl font-medium leading-relaxed\",\n                children: displayQuestion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 714,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-center mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-base font-medium\",\n                    style: {\n                      color: 'var(--text-primary)'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Your Answer *\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 726,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"block text-xs font-normal mt-1\",\n                      style: {\n                        color: 'var(--text-secondary)'\n                      },\n                      children: \"You can specify \\\"none\\\" if no answer exists\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 727,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 722,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleClear,\n                    className: \"text-sm font-medium hover:underline transition-colors\",\n                    style: {\n                      color: 'var(--accent-warning)'\n                    },\n                    children: \"Clear Form\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 734,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 721,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"relative\",\n                  children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                    ref: textareaRef,\n                    value: answer,\n                    onChange: handleAnswerChange,\n                    placeholder: \"Share your knowledge about cultural practices in your region, or specify 'none' if no answer exists...\",\n                    className: `w-full px-4 py-3 border-2 rounded-xl resize-none min-h-[120px] transition-all duration-200 ${errors.answer ? 'focus:border-red-400' : ''}`,\n                    style: {\n                      color: 'var(--text-primary)',\n                      borderColor: errors.answer ? 'var(--accent-error)' : 'var(--border-medium)',\n                      backgroundColor: 'rgba(244, 228, 202, 0.3)'\n                    },\n                    maxLength: 5000,\n                    disabled: isSaving\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 744,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `absolute bottom-3 right-3 px-2 py-1 rounded-lg text-xs border`,\n                    style: {\n                      backgroundColor: answer.length >= 4 ? 'var(--color-cream)' : '#fef3c7',\n                      color: answer.length >= 4 ? 'var(--text-secondary)' : 'var(--accent-warning)',\n                      borderColor: answer.length >= 4 ? 'var(--border-light)' : '#fbbf24'\n                    },\n                    children: [answer.length, \"/5000 \", answer.length < 4 && `(${4 - answer.length} more needed)`]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 761,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 743,\n                  columnNumber: 19\n                }, this), errors.answer && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm mt-2 font-medium\",\n                  style: {\n                    color: 'var(--accent-error)'\n                  },\n                  children: errors.answer\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 774,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 720,\n                columnNumber: 17\n              }, this), !isAttentionCheck && qualityWarnings.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4 p-3 border rounded-xl\",\n                style: {\n                  background: 'var(--btn-warning-bg)',\n                  borderColor: '#fbbf24'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-start\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: 'var(--accent-warning)'\n                    },\n                    className: \"mr-2\",\n                    children: \"\\u26A0\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 789,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm\",\n                    style: {\n                      color: '#92400e'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"font-medium mb-1\",\n                      children: \"Response Quality Notice:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 791,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                      className: \"text-xs space-y-1\",\n                      children: qualityWarnings.map((warning, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: [\"\\u2022 \", warning]\n                      }, index, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 794,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 792,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"mt-2 font-medium\",\n                      children: \"Please provide detailed responses or specify \\\"none\\\" if not applicable.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 797,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 790,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 788,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 781,\n                columnNumber: 19\n              }, this), showSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4 p-3 border rounded-xl animate-bounce-in\",\n                style: {\n                  background: 'var(--accent-success)',\n                  borderColor: 'var(--border-dark)',\n                  color: 'var(--text-on-dark)'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"mr-2\",\n                    children: \"\\u2728\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 815,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium text-sm\",\n                    children: \"Response saved successfully!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 816,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 814,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 806,\n                columnNumber: 19\n              }, this), !isFormValid && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4 p-3 border rounded-xl\",\n                style: {\n                  background: 'var(--btn-warning-bg)',\n                  borderColor: '#fbbf24'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-start\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: 'var(--accent-warning)'\n                    },\n                    className: \"mr-2\",\n                    children: \"\\u26A0\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 830,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm\",\n                    style: {\n                      color: '#92400e'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"font-medium mb-1\",\n                      children: \"Please complete the following:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 832,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                      className: \"text-xs space-y-1\",\n                      children: /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: \"\\u2022 Add at least 4 characters to your answer or specify \\\"none\\\"\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 834,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 833,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 831,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 829,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 822,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center pt-4 border-t\",\n                style: {\n                  borderColor: 'var(--border-light)'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handlePrevious,\n                  disabled: isFirstQuestion || isNavigating || isAttentionCheck,\n                  className: \"flex items-center px-4 py-2 font-medium rounded-xl transition-all duration-200 disabled:cursor-not-allowed text-sm disabled:opacity-50\",\n                  style: {\n                    background: 'var(--btn-warning-bg)',\n                    color: '#92400e'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"mr-2\",\n                    children: \"\\u2190\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 854,\n                    columnNumber: 21\n                  }, this), \"Previous\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 845,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex space-x-3\",\n                  children: [!isAttentionCheck && /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleSkip,\n                    disabled: isNavigating,\n                    className: \"px-4 py-2 font-medium rounded-xl transition-all duration-200 text-sm\",\n                    style: {\n                      background: 'var(--btn-warning-bg)',\n                      color: '#92400e'\n                    },\n                    children: \"Skip\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 860,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleSave,\n                    disabled: isSaving || !isFormValid || isNavigating,\n                    className: \"px-4 py-2 font-medium rounded-xl transition-all duration-200 disabled:cursor-not-allowed text-sm disabled:opacity-50\",\n                    style: {\n                      background: 'var(--btn-secondary-bg)',\n                      color: 'var(--text-on-dark)'\n                    },\n                    children: isSaving ? 'Saving...' : 'Save'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 873,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleNext,\n                    disabled: isSaving || !isFormValid || isNavigating,\n                    className: \"flex items-center px-5 py-2 font-medium rounded-xl transition-all duration-200 disabled:cursor-not-allowed text-sm disabled:opacity-50\",\n                    style: {\n                      background: 'var(--btn-primary-bg)',\n                      color: 'var(--text-on-dark)'\n                    },\n                    children: isNavigating ? 'Moving...' : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [\"Save & Continue\", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"ml-2\",\n                        children: \"\\u2192\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 897,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 885,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 858,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 841,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 719,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 656,\n    columnNumber: 5\n  }, this);\n}\n\n// Celebration Modal Component\n_s(QuestionForm, \"yIvEhhRTZ4ZSfMSegvtMqOtD0D0=\", false, function () {\n  return [useForm];\n});\n_c = QuestionForm;\nfunction CelebrationModal({\n  celebration,\n  onClose\n}) {\n  const celebrations = {\n    topic: {\n      icon: '🎯',\n      title: 'Section Completed!',\n      message: 'Great progress! Keep going!'\n    },\n    subcategory: {\n      icon: '🏆',\n      title: 'Section Mastered!',\n      message: 'Excellent work! Moving to next section!'\n    },\n    category: {\n      icon: '👑',\n      title: 'Major Section Complete!',\n      message: 'Outstanding! You\\'re making great progress!'\n    }\n  };\n  const config = celebrations[celebration.type];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black/30 backdrop-blur-sm flex items-center justify-center z-50 animate-fade-in p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rounded-2xl p-6 max-w-lg mx-auto text-center shadow-2xl animate-bounce-in\",\n      style: {\n        backgroundColor: 'var(--bg-card)',\n        border: '1px solid var(--border-light)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-5xl mb-3\",\n        children: config.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 946,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-3\",\n        style: {\n          color: 'var(--text-primary)'\n        },\n        children: config.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 947,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg mb-4\",\n        style: {\n          color: 'var(--text-secondary)'\n        },\n        children: config.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"px-6 py-2 font-medium rounded-xl transition-all duration-200\",\n        style: {\n          background: 'var(--btn-primary-bg)',\n          color: 'var(--text-on-dark)'\n        },\n        children: \"Continue Survey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 959,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 939,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 938,\n    columnNumber: 5\n  }, this);\n}\n_c2 = CelebrationModal;\nvar _c, _c2;\n$RefreshReg$(_c, \"QuestionForm\");\n$RefreshReg$(_c2, \"CelebrationModal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useForm","validateAnswer","shouldShowAttentionCheck","generateAttentionCheck","analyzeResponseQuality","analyzeUserPattern","validateAttentionCheck","ProgressBar","QualityWarningModal","SurveyTimer","api","jsxDEV","_jsxDEV","Fragment","_Fragment","QuestionForm","_s","state","saveResponse","navigateToNext","navigateToPrevious","getCurrentQuestionData","getTotalQuestionsInCurrentTopic","getCompletedQuestionsInCurrentTopic","resetSession","dispatch","navigateToPosition","answer","setAnswer","errors","setErrors","isSaving","setIsSaving","startTime","setStartTime","Date","now","showSuccess","setShowSuccess","lastQuestionId","setLastQuestionId","isNavigating","setIsNavigating","navigationDirection","setNavigationDirection","isAttentionCheck","setIsAttentionCheck","attentionCheck","setAttentionCheck","lastAttentionCheckAt","setLastAttentionCheckAt","attentionChecksPassed","setAttentionChecksPassed","attentionChecksFailed","setAttentionChecksFailed","attentionCheckFailed","setAttentionCheckFailed","preAttentionData","setPreAttentionData","showQualityModal","setShowQualityModal","qualityWarnings","setQualityWarnings","lastQualityAlertAt","setLastQualityAlertAt","hasShownQualityAlert","setHasShownQualityAlert","currentQualityIssue","setCurrentQualityIssue","type","noneRate","gibberishRate","speedRate","showCelebration","setShowCelebration","textareaRef","currentQuestionData","getActualQuestionResponseCount","Array","from","responses","keys","filter","questionId","startsWith","length","actualResponses","values","response","console","log","patternAnalysis","suspiciousPattern","issueType","noneResponseRate","gibberishResponseRate","fastResponseRate","warnings","actualQuestionResponses","totalResponses","size","shouldShow","currentQuestionId","isCurrentlyAttentionCheck","hasPreAttentionData","attentionCheckKey","shownAttentionChecks","JSON","parse","localStorage","getItem","includes","trim","questionData","check","category","topic","userInfo","undefined","push","setItem","stringify","existingResponse","get","substring","current","style","height","scrollHeight","validateForm","newErrors","answerValidation","isValid","message","Object","handleAnswerChange","e","newValue","target","value","prev","qualityAnalysis","isLowQuality","issues","handleClear","focus","checkForMilestones","categoryIndex","subcategoryIndex","topicIndex","questionIndex","currentPosition","currentCategory","questionsData","currentSubcategory","subcategories","currentTopic","topics","questions","name","subcategoryName","subcategory","topicName","categoryName","performSave","questionDataToUse","answerToUse","startTimeToUse","skipSuccessMessage","answerText","timeStart","sessionId","error","questionText","question","timeSpent","Math","floor","timestamp","toISOString","qualityScore","score","attentionCheckType","expectedAnswer","setTimeout","handleSave","alert","handleNext","expectedAnswers","isAttentionCheckValid","userAnswer","completeUser","payload","isNoneResponse","isGibberish","saveSuccessful","milestone","data","handlePrevious","handleSkip","handleQualityModalClose","closeCelebration","className","children","fileName","_jsxFileName","lineNumber","columnNumber","surveyExpired","isFirstQuestion","isFormValid","displayQuestion","background","isOpen","onClose","qualityIssues","CelebrationModal","celebration","backgroundColor","border","color","onClick","ref","onChange","placeholder","borderColor","maxLength","disabled","map","warning","index","_c","celebrations","icon","title","config","_c2","$RefreshReg$"],"sources":["C:/Users/sangm/OneDrive - Brock University/CommonsenseForm/client/src/components/QuestionForm.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { useForm } from '../context/FormContext.tsx';\r\nimport { validateAnswer, shouldShowAttentionCheck, generateAttentionCheck, analyzeResponseQuality, analyzeUserPattern, validateAttentionCheck } from '../utils/helpers.ts';\r\nimport ProgressBar from './ProgressBar.tsx';\r\nimport QualityWarningModal from './QualityWarningModel.tsx';\r\nimport SurveyTimer from './SurveyTimer.tsx';\r\nimport TimeWarningModal from './TimeWarningModal.tsx';\r\nimport * as api from '../services/api.ts';\r\n\r\nexport default function QuestionForm() {\r\n  const {\r\n    state,\r\n    saveResponse,\r\n    navigateToNext,\r\n    navigateToPrevious,\r\n    getCurrentQuestionData,\r\n    getTotalQuestionsInCurrentTopic,\r\n    getCompletedQuestionsInCurrentTopic,\r\n    resetSession,\r\n    dispatch,\r\n    navigateToPosition\r\n  } = useForm();\r\n\r\n  // Basic form state\r\n  const [answer, setAnswer] = useState('');\r\n  const [errors, setErrors] = useState<{ answer?: string }>({});\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [startTime, setStartTime] = useState(Date.now());\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const [lastQuestionId, setLastQuestionId] = useState<string | null>(null);\r\n  const [isNavigating, setIsNavigating] = useState(false);\r\n  const [navigationDirection, setNavigationDirection] = useState<'next' | 'previous' | null>(null);\r\n\r\n  // Attention check state\r\n  const [isAttentionCheck, setIsAttentionCheck] = useState(false);\r\n  const [attentionCheck, setAttentionCheck] = useState<any>(null);\r\n  const [lastAttentionCheckAt, setLastAttentionCheckAt] = useState<number>(-1);\r\n  const [attentionChecksPassed, setAttentionChecksPassed] = useState(0);\r\n  const [attentionChecksFailed, setAttentionChecksFailed] = useState(0);\r\n  const [attentionCheckFailed, setAttentionCheckFailed] = useState(false);\r\n\r\n  // NEW: Store the question data and answer before attention check (without saving to responses)\r\n  const [preAttentionData, setPreAttentionData] = useState<{\r\n    questionData: any;\r\n    answer: string;\r\n    startTime: number;\r\n  } | null>(null);\r\n\r\n  // Quality tracking state\r\n  const [showQualityModal, setShowQualityModal] = useState(false);\r\n  const [qualityWarnings, setQualityWarnings] = useState<string[]>([]);\r\n  const [lastQualityAlertAt, setLastQualityAlertAt] = useState<number>(-1);\r\n  const [hasShownQualityAlert, setHasShownQualityAlert] = useState(false);\r\n  const [currentQualityIssue, setCurrentQualityIssue] = useState<{\r\n    type: string | null;\r\n    noneRate: number;\r\n    gibberishRate: number;\r\n    speedRate: number;\r\n  }>({ type: null, noneRate: 0, gibberishRate: 0, speedRate: 0 });\r\n\r\n  // Celebration state\r\n  const [showCelebration, setShowCelebration] = useState<{type: string, data: any} | null>(null);\r\n\r\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\r\n  const currentQuestionData = getCurrentQuestionData();\r\n\r\n  // At the top of QuestionForm component, add this helper\r\nconst getActualQuestionResponseCount = useCallback(() => {\r\n  return Array.from(state.responses.keys())\r\n    .filter(questionId => !questionId.startsWith('ATTENTION_CHECK_'))\r\n    .length;\r\n}, [state.responses]);\r\n\r\n\r\n// Quality check monitoring - runs after each response is saved\r\nuseEffect(() => {\r\n  // Only check quality for actual question responses, not attention checks\r\n  const actualResponses = Array.from(state.responses.values())\r\n    .filter(response => !response.questionId.startsWith('ATTENTION_CHECK_'));\r\n    \r\n  if (actualResponses.length < 5 || isAttentionCheck) {\r\n    return; // Need at least 5 responses to analyze patterns\r\n  }\r\n\r\n  // Avoid showing multiple alerts in quick succession\r\n  if (hasShownQualityAlert && Date.now() - lastQualityAlertAt < 10000) {\r\n    return; // Wait at least 10 seconds between alerts\r\n  }\r\n\r\n  console.log('Running quality analysis on', actualResponses.length, 'actual responses');\r\n  \r\n  // Analyze the user's response pattern\r\n  const patternAnalysis = analyzeUserPattern(actualResponses);\r\n  \r\n  console.log('Pattern analysis results:', patternAnalysis);\r\n  \r\n  if (patternAnalysis.suspiciousPattern) {\r\n    console.log('🚨 SUSPICIOUS PATTERN DETECTED - showing quality modal');\r\n    \r\n    setCurrentQualityIssue({\r\n      type: patternAnalysis.issueType,\r\n      noneRate: patternAnalysis.noneResponseRate,\r\n      gibberishRate: patternAnalysis.gibberishResponseRate,\r\n      speedRate: patternAnalysis.fastResponseRate\r\n    });\r\n    \r\n    setQualityWarnings(patternAnalysis.warnings);\r\n    setShowQualityModal(true);\r\n    setLastQualityAlertAt(Date.now());\r\n    setHasShownQualityAlert(true);\r\n  }\r\n}, [\r\n  // Trigger when actual responses change\r\n  Array.from(state.responses.values())\r\n    .filter(response => !response.questionId.startsWith('ATTENTION_CHECK_'))\r\n    .length,\r\n  isAttentionCheck,\r\n  hasShownQualityAlert,\r\n  lastQualityAlertAt\r\n]);\r\n\r\n  // Check if this should be an attention check - FIXED LOGIC\r\nuseEffect(() => {\r\n  // Get count of actual question responses (excluding attention checks)\r\n  const actualQuestionResponses = Array.from(state.responses.keys())\r\n    .filter(questionId => !questionId.startsWith('ATTENTION_CHECK_'))\r\n    .length;\r\n  \r\n  console.log('Attention check logic:', {\r\n    totalResponses: state.responses.size,\r\n    actualQuestionResponses,\r\n    lastAttentionCheckAt,\r\n    shouldShow: shouldShowAttentionCheck(actualQuestionResponses),\r\n    currentQuestionId: currentQuestionData?.questionId,\r\n    isCurrentlyAttentionCheck: isAttentionCheck,\r\n    hasPreAttentionData: !!preAttentionData\r\n  });\r\n  \r\n  // Don't show if we haven't moved to a new actual question response count\r\n  if (lastAttentionCheckAt === actualQuestionResponses) {\r\n    console.log('Already shown attention check for this actual question response count');\r\n    return;\r\n  }\r\n  \r\n  // Don't show if we're already showing an attention check\r\n  if (isAttentionCheck) {\r\n    console.log('Already showing attention check, skipping');\r\n    return;\r\n  }\r\n  \r\n  // Don't trigger if we already have pre-attention data stored\r\n  if (preAttentionData) {\r\n    console.log('Already have pre-attention data, skipping attention check trigger');\r\n    return;\r\n  }\r\n  \r\n  if (shouldShowAttentionCheck(actualQuestionResponses) && currentQuestionData) {\r\n    // Check if we've already shown an attention check for this actual response count\r\n    const attentionCheckKey = `${actualQuestionResponses}`;\r\n    const shownAttentionChecks = JSON.parse(localStorage.getItem('shownAttentionChecks') || '[]');\r\n    \r\n    if (shownAttentionChecks.includes(attentionCheckKey)) {\r\n      console.log('Attention check already shown for this actual response count');\r\n      return;\r\n    }\r\n    \r\n    console.log('🚨 TRIGGERING ATTENTION CHECK at actual response count:', actualQuestionResponses);\r\n    \r\n    // Store the current question data and answer WITHOUT saving to responses\r\n    if (answer.trim().length >= 4) {\r\n      console.log('📝 Storing current question data before attention check (not saving yet):', currentQuestionData.questionId);\r\n      setPreAttentionData({\r\n        questionData: currentQuestionData,\r\n        answer: answer.trim(),\r\n        startTime: startTime\r\n      });\r\n    }\r\n    \r\n    const check = generateAttentionCheck(\r\n      currentQuestionData.category,\r\n      currentQuestionData.topic,\r\n      state.userInfo || undefined\r\n    );\r\n    \r\n    setAttentionCheck(check);\r\n    setIsAttentionCheck(true);\r\n    setLastAttentionCheckAt(actualQuestionResponses);\r\n    \r\n    // Mark this attention check as shown\r\n    shownAttentionChecks.push(attentionCheckKey);\r\n    localStorage.setItem('shownAttentionChecks', JSON.stringify(shownAttentionChecks));\r\n    \r\n    // Clear answer for attention check and reset start time\r\n    setAnswer('');\r\n    setStartTime(Date.now());\r\n    \r\n  } else {\r\n    // Reset attention check state when we shouldn't show one\r\n    if (isAttentionCheck) {\r\n      console.log('Resetting attention check state');\r\n      setIsAttentionCheck(false);\r\n      setAttentionCheck(null);\r\n    }\r\n  }\r\n}, [\r\n  getActualQuestionResponseCount(), // This will properly trigger when actual questions are answered\r\n  lastAttentionCheckAt, \r\n  currentQuestionData?.questionId, \r\n  isAttentionCheck, \r\n  preAttentionData\r\n]);\r\n\r\n  // Reset form when question changes - handles both regular navigation and post-attention-check\r\n// Reset form when question changes - handles both regular navigation and post-attention-check\r\nuseEffect(() => {\r\n  if (currentQuestionData && currentQuestionData.questionId !== lastQuestionId) {\r\n    console.log('Question changed, loading data for:', currentQuestionData.questionId);\r\n    \r\n    setErrors({});\r\n    setShowSuccess(false);\r\n    setStartTime(Date.now());\r\n    setLastQuestionId(currentQuestionData.questionId);\r\n    setIsNavigating(false);\r\n    setNavigationDirection(null);\r\n    setQualityWarnings([]);\r\n    \r\n    if (isAttentionCheck) {\r\n      // We're showing an attention check, keep answer cleared\r\n      setAnswer('');\r\n    } else {\r\n      // Check if this matches our pre-attention data\r\n      if (preAttentionData && preAttentionData.questionData.questionId === currentQuestionData.questionId) {\r\n        console.log('🔄 Restoring pre-attention data for:', currentQuestionData.questionId);\r\n        setAnswer(preAttentionData.answer);\r\n        setStartTime(preAttentionData.startTime);\r\n        // Clear preAttentionData since we're now back to the original question\r\n        setPreAttentionData(null);\r\n      } else {\r\n        // Normal question loading - check for existing response\r\n        const existingResponse = state.responses.get(currentQuestionData.questionId);\r\n        if (existingResponse) {\r\n          console.log('Found existing response:', existingResponse.answer.substring(0, 50) + '...');\r\n          setAnswer(existingResponse.answer);\r\n        } else {\r\n          console.log('No existing response, clearing form');\r\n          setAnswer('');\r\n        }\r\n      }\r\n    }\r\n  }\r\n}, [currentQuestionData?.questionId, lastQuestionId, state.responses, isAttentionCheck, preAttentionData]);\r\n\r\n  // Auto-resize textarea\r\n  useEffect(() => {\r\n    if (textareaRef.current) {\r\n      textareaRef.current.style.height = 'auto';\r\n      textareaRef.current.style.height = textareaRef.current.scrollHeight + 'px';\r\n    }\r\n  }, [answer]);\r\n\r\n  const validateForm = () => {\r\n    const newErrors: { answer?: string } = {};\r\n    \r\n    const answerValidation = validateAnswer(answer);\r\n    if (!answerValidation.isValid) {\r\n      newErrors.answer = answerValidation.message;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleAnswerChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const newValue = e.target.value;\r\n    setAnswer(newValue);\r\n    \r\n    if (errors.answer) {\r\n      setErrors(prev => ({ ...prev, answer: undefined }));\r\n    }\r\n\r\n    // Real-time quality feedback for current response only (skip for attention checks)\r\n    if (newValue.length > 5 && !isAttentionCheck) {\r\n      const qualityAnalysis = analyzeResponseQuality(newValue);\r\n      if (qualityAnalysis.isLowQuality) {\r\n        setQualityWarnings(qualityAnalysis.issues);\r\n      } else {\r\n        setQualityWarnings([]);\r\n      }\r\n    } else {\r\n      setQualityWarnings([]);\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setAnswer('');\r\n    setErrors({});\r\n    setShowSuccess(false);\r\n    setQualityWarnings([]);\r\n    if (textareaRef.current) {\r\n      textareaRef.current.focus();\r\n    }\r\n  };\r\n\r\n  const checkForMilestones = () => {\r\n    const { categoryIndex, subcategoryIndex, topicIndex, questionIndex } = state.currentPosition;\r\n    const currentCategory = state.questionsData[categoryIndex];\r\n    const currentSubcategory = currentCategory?.subcategories[subcategoryIndex];\r\n    const currentTopic = currentSubcategory?.topics[topicIndex];\r\n    \r\n    if (!currentTopic) return null;\r\n\r\n    if (questionIndex === currentTopic.questions.length - 1) {\r\n      if (topicIndex === currentSubcategory.topics.length - 1) {\r\n        if (subcategoryIndex === currentCategory.subcategories.length - 1) {\r\n          return {\r\n            type: 'category',\r\n            name: currentCategory.category,\r\n            subcategoryName: currentSubcategory.subcategory,\r\n            topicName: currentTopic.topic\r\n          };\r\n        }\r\n        return {\r\n          type: 'subcategory',\r\n          name: currentSubcategory.subcategory,\r\n          topicName: currentTopic.topic,\r\n          categoryName: currentCategory.category\r\n        };\r\n      }\r\n      return {\r\n        type: 'topic',\r\n        name: currentTopic.topic,\r\n        subcategoryName: currentSubcategory.subcategory,\r\n        categoryName: currentCategory.category\r\n      };\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // UPDATED performSave to handle both regular and pre-attention data\r\n  // UPDATED performSave to handle both regular and pre-attention data\r\n// Replace the existing performSave function with this one\r\nconst performSave = async (questionDataToUse?: any, answerToUse?: string, startTimeToUse?: number, qualityAnalysis?: any, skipSuccessMessage?: boolean) => {\r\n  const questionData = questionDataToUse || currentQuestionData;\r\n  const answerText = answerToUse || answer;\r\n  const timeStart = startTimeToUse || startTime;\r\n  \r\n  if (!questionData || !state.sessionId) {\r\n    console.error('Missing required data for save');\r\n    return false;\r\n  }\r\n\r\n  // For attention checks, create a special question ID\r\n  const questionId = isAttentionCheck \r\n    ? `ATTENTION_CHECK_${state.responses.size}_${questionData.questionId}`\r\n    : questionData.questionId;\r\n\r\n  const questionText = isAttentionCheck \r\n    ? attentionCheck.question \r\n    : questionData.question;\r\n\r\n  if (!qualityAnalysis) {\r\n    qualityAnalysis = analyzeResponseQuality(answerText);\r\n  }\r\n\r\n  setIsSaving(true);\r\n  \r\n  try {\r\n    const timeSpent = Math.floor((Date.now() - timeStart) / 1000);\r\n    \r\n    const response = {\r\n      sessionId: state.sessionId,\r\n      questionId: questionId,\r\n      categoryIndex: state.currentPosition.categoryIndex,\r\n      subcategoryIndex: state.currentPosition.subcategoryIndex,\r\n      topicIndex: state.currentPosition.topicIndex,\r\n      questionIndex: state.currentPosition.questionIndex,\r\n      category: questionData.category,\r\n      subcategory: questionData.subcategory,\r\n      topic: questionData.topic,\r\n      question: questionText,\r\n      answer: answerText.trim(),\r\n      timeSpent,\r\n      timestamp: new Date().toISOString(),\r\n      qualityScore: qualityAnalysis.score,\r\n      isAttentionCheck: isAttentionCheck,\r\n      attentionCheckType: isAttentionCheck ? attentionCheck.type : undefined,\r\n      expectedAnswer: isAttentionCheck ? attentionCheck.expectedAnswer : undefined\r\n    };\r\n\r\n    console.log('Saving response:', {\r\n      questionId,\r\n      isAttentionCheck,\r\n      answer: answerText.substring(0, 50) + '...',\r\n      totalResponses: state.responses.size\r\n    });\r\n\r\n    await saveResponse(response);\r\n    \r\n    // Only show success message if not skipped and not an attention check\r\n    if (!skipSuccessMessage && !isAttentionCheck) {\r\n      setShowSuccess(true);\r\n      setTimeout(() => setShowSuccess(false), 2000);\r\n    }\r\n    return true;\r\n    \r\n  } catch (error) {\r\n    console.error('SAVE ERROR:', error);\r\n    throw error;\r\n  } finally {\r\n    setIsSaving(false);\r\n  }\r\n};\r\n\r\n  const handleSave = async () => {\r\n    if (!validateForm() || !currentQuestionData || !state.sessionId) {\r\n      console.log('Validation failed:', errors);\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const qualityAnalysis = analyzeResponseQuality(answer);\r\n      return await performSave(undefined, undefined, undefined, qualityAnalysis);\r\n    } catch (error) {\r\n      console.error('Save failed:', error);\r\n      alert('Failed to save response. Please try again.');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // FIXED handleNext function - replace the existing one\r\nconst handleNext = async () => {\r\n  const isValid = validateForm();\r\n  if (!isValid) {\r\n    console.log('Form validation failed, cannot proceed');\r\n    return;\r\n  }\r\n\r\n  // Handle attention check validation\r\n  if (isAttentionCheck && attentionCheck) {\r\n    const expectedAnswers = attentionCheck.expectedAnswers || [attentionCheck.expectedAnswer];\r\n    const isAttentionCheckValid = validateAttentionCheck(answer, expectedAnswers);\r\n    \r\n    console.log('ATTENTION CHECK VALIDATION:', {\r\n      userAnswer: answer,\r\n      expectedAnswers: expectedAnswers,\r\n      isValid: isAttentionCheckValid,\r\n      attentionCheckType: attentionCheck.type\r\n    });\r\n    \r\n    if (!isAttentionCheckValid) {\r\n      console.log('❌ ATTENTION CHECK FAILED - Redirecting to completion');\r\n      \r\n      try {\r\n        await performSave();\r\n        console.log('Failed attention check response saved');\r\n      } catch (error) {\r\n        console.error('Error saving failed attention check:', error);\r\n      }\r\n      \r\n      if (state.sessionId) {\r\n        try {\r\n          await api.completeUser(state.sessionId, 'attention_check_failed');\r\n          console.log('Survey marked as completed due to attention check failure');\r\n        } catch (error) {\r\n          console.error('Error marking survey completed:', error);\r\n        }\r\n      }\r\n      \r\n      dispatch({ type: 'SET_ATTENTION_CHECK_FAILED', payload: true });\r\n      return;\r\n    } else {\r\n      console.log('✅ ATTENTION CHECK PASSED');\r\n      \r\n      // Save the attention check response\r\n      try {\r\n        await performSave();\r\n        console.log('Attention check response saved');\r\n      } catch (error) {\r\n        console.error('Error saving attention check:', error);\r\n      }\r\n      \r\n      // Save the pre-attention data if it exists\r\n      if (preAttentionData) {\r\n        console.log('💾 Saving pre-attention data:', preAttentionData.questionData.questionId);\r\n        try {\r\n          await performSave(\r\n            preAttentionData.questionData,\r\n            preAttentionData.answer,\r\n            preAttentionData.startTime,\r\n            undefined,\r\n            true // Skip success message\r\n          );\r\n          console.log('Pre-attention data saved successfully');\r\n        } catch (error) {\r\n          console.error('Error saving pre-attention data:', error);\r\n        }\r\n      }\r\n      \r\n      // Reset attention check state and clear pre-attention data\r\n      setIsAttentionCheck(false);\r\n      setAttentionCheck(null);\r\n      \r\n      // TRIGGER NAVIGATION with animation\r\n      setNavigationDirection('next');\r\n      setIsNavigating(true);\r\n      \r\n      setTimeout(() => {\r\n        // Clear the answer field to prevent wrong answer from showing\r\n        setAnswer('');\r\n        setPreAttentionData(null);\r\n        \r\n        // Force re-render by updating the question ID tracker\r\n        setLastQuestionId(null);\r\n      }, 300);\r\n      \r\n      return;\r\n    }\r\n  }\r\n\r\n  // Regular question flow\r\n  // In handleNext function, add this before the regular question flow:\r\n\r\n// Regular question flow\r\ntry {\r\n  // Check for quality issues before saving\r\n  if (!isAttentionCheck) {\r\n    const qualityAnalysis = analyzeResponseQuality(answer);\r\n    \r\n    // If this individual response is very low quality, show warning\r\n    if (qualityAnalysis.isLowQuality && qualityAnalysis.score < 15) {\r\n      console.log('Individual response quality too low:', qualityAnalysis.score);\r\n      setCurrentQualityIssue({\r\n        type: 'individual',\r\n        noneRate: qualityAnalysis.isNoneResponse ? 100 : 0,\r\n        gibberishRate: qualityAnalysis.isGibberish ? 100 : 0,\r\n        speedRate: 0\r\n      });\r\n      setQualityWarnings([\r\n        'This response appears to be very low quality',\r\n        ...qualityAnalysis.issues\r\n      ]);\r\n      setShowQualityModal(true);\r\n      return; // Don't proceed with save\r\n    }\r\n  }\r\n  \r\n  const saveSuccessful = await handleSave();\r\n  \r\n  if (saveSuccessful && isValid) {\r\n    // ... rest of the existing code\r\n  }\r\n} catch (error) {\r\n  console.error('Next navigation failed:', error);\r\n}\r\n  try {\r\n    const saveSuccessful = await handleSave();\r\n    \r\n    if (saveSuccessful && isValid) {\r\n      // If we have pre-attention data and we're saving the same question, clear it\r\n      if (\r\n        preAttentionData &&\r\n        currentQuestionData &&\r\n        preAttentionData.questionData.questionId === currentQuestionData.questionId\r\n      ) {\r\n        console.log('Clearing pre-attention data after saving the same question');\r\n        setPreAttentionData(null);\r\n      }\r\n      \r\n      const milestone = checkForMilestones();\r\n      \r\n      setNavigationDirection('next');\r\n      setIsNavigating(true);\r\n      \r\n      setTimeout(() => {\r\n        navigateToNext();\r\n        \r\n        if (milestone && !isAttentionCheck) {\r\n          setShowCelebration({type: milestone.type, data: milestone});\r\n        }\r\n      }, 300);\r\n    }\r\n  } catch (error) {\r\n    console.error('Next navigation failed:', error);\r\n  }\r\n};\r\n\r\n  const handlePrevious = () => {\r\n    setNavigationDirection('previous');\r\n    setIsNavigating(true);\r\n    \r\n    setTimeout(() => {\r\n      navigateToPrevious();\r\n    }, 300);\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    if (isAttentionCheck) return; // Don't allow skipping attention checks\r\n    \r\n    setAnswer('');\r\n    setErrors({});\r\n    \r\n    setNavigationDirection('next');\r\n    setIsNavigating(true);\r\n    \r\n    setTimeout(() => {\r\n      navigateToNext();\r\n    }, 300);\r\n  };\r\n\r\n  const handleQualityModalClose = () => {\r\n    console.log('Quality modal closed - user will improve response');\r\n    setShowQualityModal(false);\r\n    \r\n    setAnswer('');\r\n    setErrors({});\r\n    \r\n    setTimeout(() => {\r\n      if (textareaRef.current) {\r\n        textareaRef.current.focus();\r\n      }\r\n    }, 100);\r\n  };\r\n\r\n  const closeCelebration = () => {\r\n    setShowCelebration(null);\r\n  };\r\n\r\n  if (!currentQuestionData) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-100 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Loading question...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (state.surveyExpired) {\r\n    return null;\r\n  }\r\n\r\n  const isFirstQuestion = state.currentPosition.categoryIndex === 0 && \r\n                         state.currentPosition.subcategoryIndex === 0 && \r\n                         state.currentPosition.topicIndex === 0 && \r\n                         state.currentPosition.questionIndex === 0;\r\n\r\n  const isFormValid = answer.trim().length >= 4;\r\n  const displayQuestion = isAttentionCheck ? attentionCheck.question : currentQuestionData.question;\r\n\r\n  if (attentionCheckFailed) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div \r\n      className=\"min-h-screen\"\r\n      style={{ \r\n        background: `linear-gradient(135deg, var(--bg-primary) 0%, var(--color-cream) 50%, var(--bg-secondary) 100%)` \r\n      }}\r\n    >\r\n      <SurveyTimer />\r\n      <ProgressBar />\r\n\r\n      {!isAttentionCheck && (\r\n        <QualityWarningModal\r\n          isOpen={showQualityModal}\r\n          onClose={handleQualityModalClose}\r\n          qualityIssues={qualityWarnings}\r\n          issueType={currentQualityIssue.type}\r\n          noneResponseRate={currentQualityIssue.noneRate}\r\n          gibberishResponseRate={currentQualityIssue.gibberishRate}\r\n          fastResponseRate={currentQualityIssue.speedRate}\r\n        />\r\n      )}\r\n      \r\n      {showCelebration && (\r\n        <CelebrationModal \r\n          celebration={showCelebration} \r\n          onClose={closeCelebration}\r\n        />\r\n      )}\r\n      \r\n      <div className=\"max-w-4xl mx-auto px-4 py-6\">\r\n        <div className=\"relative overflow-hidden\">\r\n          <div className={`transform transition-all duration-500 ease-in-out ${\r\n            isNavigating \r\n              ? navigationDirection === 'next' \r\n                ? '-translate-x-full opacity-0'\r\n                : 'translate-x-full opacity-0'\r\n              : 'translate-x-0 opacity-100'\r\n          }`}>\r\n\r\n            <div \r\n              className=\"backdrop-blur-sm rounded-2xl shadow-lg overflow-hidden\"\r\n              style={{ \r\n                backgroundColor: 'var(--bg-card)',\r\n                border: '1px solid var(--border-light)'\r\n              }}\r\n            >\r\n              \r\n              <div \r\n                className=\"p-6\"\r\n                style={{ \r\n                  background: 'var(--bg-card-header)',\r\n                  color: 'var(--text-on-dark)'\r\n                }}\r\n              >\r\n                {isAttentionCheck && (\r\n                  <div className=\"mb-3 text-sm font-medium\" style={{ color: 'var(--text-on-dark)' }}>\r\n                    🔍 Attention Check\r\n                  </div>\r\n                )}\r\n                <h2 className=\"text-lg md:text-xl font-medium leading-relaxed\">\r\n                  {displayQuestion}\r\n                </h2>\r\n              </div>\r\n\r\n              <div className=\"p-6\">\r\n                <div className=\"mb-6\">\r\n                  <div className=\"flex justify-between items-center mb-3\">\r\n                    <label \r\n                      className=\"block text-base font-medium\"\r\n                      style={{ color: 'var(--text-primary)' }}\r\n                    >\r\n                      <span>Your Answer *</span>\r\n                      <span \r\n                        className=\"block text-xs font-normal mt-1\"\r\n                        style={{ color: 'var(--text-secondary)' }}\r\n                      >\r\n                        You can specify \"none\" if no answer exists\r\n                      </span>\r\n                    </label>\r\n                    <button\r\n                      onClick={handleClear}\r\n                      className=\"text-sm font-medium hover:underline transition-colors\"\r\n                      style={{ color: 'var(--accent-warning)' }}\r\n                    >\r\n                      Clear Form\r\n                    </button>\r\n                  </div>\r\n                  \r\n                  <div className=\"relative\">\r\n                    <textarea\r\n                      ref={textareaRef}\r\n                      value={answer}\r\n                      onChange={handleAnswerChange}\r\n                      placeholder=\"Share your knowledge about cultural practices in your region, or specify 'none' if no answer exists...\"\r\n                      className={`w-full px-4 py-3 border-2 rounded-xl resize-none min-h-[120px] transition-all duration-200 ${\r\n                        errors.answer ? 'focus:border-red-400' : ''\r\n                      }`}\r\n                      style={{\r\n                        color: 'var(--text-primary)',\r\n                        borderColor: errors.answer ? 'var(--accent-error)' : 'var(--border-medium)',\r\n                        backgroundColor: 'rgba(244, 228, 202, 0.3)'\r\n                      }}\r\n                      maxLength={5000}\r\n                      disabled={isSaving}\r\n                    />\r\n                    \r\n                    <div \r\n                      className={`absolute bottom-3 right-3 px-2 py-1 rounded-lg text-xs border`}\r\n                      style={{\r\n                        backgroundColor: answer.length >= 4 ? 'var(--color-cream)' : '#fef3c7',\r\n                        color: answer.length >= 4 ? 'var(--text-secondary)' : 'var(--accent-warning)',\r\n                        borderColor: answer.length >= 4 ? 'var(--border-light)' : '#fbbf24'\r\n                      }}\r\n                    >\r\n                      {answer.length}/5000 {answer.length < 4 && `(${4 - answer.length} more needed)`}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {errors.answer && (\r\n                    <p className=\"text-sm mt-2 font-medium\" style={{ color: 'var(--accent-error)' }}>\r\n                      {errors.answer}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n\r\n                {!isAttentionCheck && qualityWarnings.length > 0 && (\r\n                  <div \r\n                    className=\"mb-4 p-3 border rounded-xl\"\r\n                    style={{ \r\n                      background: 'var(--btn-warning-bg)',\r\n                      borderColor: '#fbbf24'\r\n                    }}\r\n                  >\r\n                    <div className=\"flex items-start\">\r\n                      <span style={{ color: 'var(--accent-warning)' }} className=\"mr-2\">⚠️</span>\r\n                      <div className=\"text-sm\" style={{ color: '#92400e' }}>\r\n                        <p className=\"font-medium mb-1\">Response Quality Notice:</p>\r\n                        <ul className=\"text-xs space-y-1\">\r\n                          {qualityWarnings.map((warning, index) => (\r\n                            <li key={index}>• {warning}</li>\r\n                          ))}\r\n                        </ul>\r\n                        <p className=\"mt-2 font-medium\">\r\n                          Please provide detailed responses or specify \"none\" if not applicable.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {showSuccess && (\r\n                  <div \r\n                    className=\"mb-4 p-3 border rounded-xl animate-bounce-in\"\r\n                    style={{ \r\n                      background: 'var(--accent-success)',\r\n                      borderColor: 'var(--border-dark)',\r\n                      color: 'var(--text-on-dark)'\r\n                    }}\r\n                  >\r\n                    <div className=\"flex items-center\">\r\n                      <span className=\"mr-2\">✨</span>\r\n                      <span className=\"font-medium text-sm\">Response saved successfully!</span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {!isFormValid && (\r\n                  <div \r\n                    className=\"mb-4 p-3 border rounded-xl\"\r\n                    style={{ \r\n                      background: 'var(--btn-warning-bg)',\r\n                      borderColor: '#fbbf24'\r\n                    }}\r\n                  >\r\n                    <div className=\"flex items-start\">\r\n                      <span style={{ color: 'var(--accent-warning)' }} className=\"mr-2\">⚠️</span>\r\n                      <div className=\"text-sm\" style={{ color: '#92400e' }}>\r\n                        <p className=\"font-medium mb-1\">Please complete the following:</p>\r\n                        <ul className=\"text-xs space-y-1\">\r\n                          <li>• Add at least 4 characters to your answer or specify \"none\"</li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                <div \r\n                  className=\"flex justify-between items-center pt-4 border-t\"\r\n                  style={{ borderColor: 'var(--border-light)' }}\r\n                >\r\n                  <button\r\n                    onClick={handlePrevious}\r\n                    disabled={isFirstQuestion || isNavigating || isAttentionCheck}\r\n                    className=\"flex items-center px-4 py-2 font-medium rounded-xl transition-all duration-200 disabled:cursor-not-allowed text-sm disabled:opacity-50\"\r\n                    style={{ \r\n                      background: 'var(--btn-warning-bg)',\r\n                      color: '#92400e'\r\n                    }}\r\n                  >\r\n                    <span className=\"mr-2\">←</span>\r\n                    Previous\r\n                  </button>\r\n\r\n                  <div className=\"flex space-x-3\">\r\n                    {!isAttentionCheck && (\r\n                      <button\r\n                        onClick={handleSkip}\r\n                        disabled={isNavigating}\r\n                        className=\"px-4 py-2 font-medium rounded-xl transition-all duration-200 text-sm\"\r\n                        style={{ \r\n                          background: 'var(--btn-warning-bg)',\r\n                          color: '#92400e'\r\n                        }}\r\n                      >\r\n                        Skip\r\n                      </button>\r\n                    )}\r\n\r\n                    <button\r\n                      onClick={handleSave}\r\n                      disabled={isSaving || !isFormValid || isNavigating}\r\n                      className=\"px-4 py-2 font-medium rounded-xl transition-all duration-200 disabled:cursor-not-allowed text-sm disabled:opacity-50\"\r\n                      style={{ \r\n                        background: 'var(--btn-secondary-bg)',\r\n                        color: 'var(--text-on-dark)'\r\n                      }}\r\n                    >\r\n                      {isSaving ? 'Saving...' : 'Save'}\r\n                    </button>\r\n\r\n                    <button\r\n                      onClick={handleNext}\r\n                      disabled={isSaving || !isFormValid || isNavigating}\r\n                      className=\"flex items-center px-5 py-2 font-medium rounded-xl transition-all duration-200 disabled:cursor-not-allowed text-sm disabled:opacity-50\"\r\n                      style={{ \r\n                        background: 'var(--btn-primary-bg)',\r\n                        color: 'var(--text-on-dark)'\r\n                      }}\r\n                    >\r\n                      {isNavigating ? 'Moving...' : (\r\n                        <>\r\n                          Save & Continue\r\n                          <span className=\"ml-2\">→</span>\r\n                        </>\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Celebration Modal Component\r\nfunction CelebrationModal({ celebration, onClose }: { \r\n  celebration: {type: string, data: any}, \r\n  onClose: () => void \r\n}) {\r\n  const celebrations = {\r\n    topic: {\r\n      icon: '🎯',\r\n      title: 'Section Completed!',\r\n      message: 'Great progress! Keep going!'\r\n    },\r\n    subcategory: {\r\n      icon: '🏆',\r\n      title: 'Section Mastered!',\r\n      message: 'Excellent work! Moving to next section!'\r\n    },\r\n    category: {\r\n      icon: '👑',\r\n      title: 'Major Section Complete!',\r\n      message: 'Outstanding! You\\'re making great progress!'\r\n    }\r\n  };\r\n\r\n  const config = celebrations[celebration.type as keyof typeof celebrations];\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black/30 backdrop-blur-sm flex items-center justify-center z-50 animate-fade-in p-4\">\r\n      <div \r\n        className=\"rounded-2xl p-6 max-w-lg mx-auto text-center shadow-2xl animate-bounce-in\"\r\n        style={{ \r\n          backgroundColor: 'var(--bg-card)',\r\n          border: '1px solid var(--border-light)'\r\n        }}\r\n      >\r\n        <div className=\"text-5xl mb-3\">{config.icon}</div>\r\n        <h2 \r\n          className=\"text-2xl font-bold mb-3\"\r\n          style={{ color: 'var(--text-primary)' }}\r\n        >\r\n          {config.title}\r\n        </h2>\r\n        <p \r\n          className=\"text-lg mb-4\"\r\n          style={{ color: 'var(--text-secondary)' }}\r\n        >\r\n          {config.message}\r\n        </p>\r\n        <button\r\n          onClick={onClose}\r\n          className=\"px-6 py-2 font-medium rounded-xl transition-all duration-200\"\r\n          style={{ \r\n            background: 'var(--btn-primary-bg)',\r\n            color: 'var(--text-on-dark)'\r\n          }}\r\n        >\r\n          Continue Survey\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}