{"ast":null,"code":"// Create a separate type for form errors\nexport const REGIONS={North:['Delhi','Punjab','Haryana','Himachal Pradesh','Jammu and Kashmir','Ladakh','Uttarakhand','Uttar Pradesh','Rajasthan','Chandigarh'],South:['Andhra Pradesh','Karnataka','Kerala','Tamil Nadu','Telangana','Puducherry','Lakshadweep','Andaman and Nicobar Islands'],East:['West Bengal','Odisha','Jharkhand','Bihar','Sikkim','Assam','Arunachal Pradesh','Manipur','Meghalaya','Mizoram','Nagaland','Tripura'],West:['Maharashtra','Gujarat','Rajasthan','Goa','Madhya Pradesh','Chhattisgarh','Dadra and Nagar Haveli and Daman and Diu'],Central:['Madhya Pradesh','Chhattisgarh']};","map":{"version":3,"names":["REGIONS","North","South","East","West","Central"],"sources":["C:/Users/sangm/OneDrive - Brock University/CommonsenseForm/client/src/types/index.ts"],"sourcesContent":["export interface Question {\r\n  id: string;\r\n  text: string;\r\n}\r\n\r\nexport interface Topic {\r\n  topic: string;\r\n  questions: string[];\r\n}\r\n\r\nexport interface Subcategory {\r\n  subcategory: string;\r\n  topics: Topic[];\r\n}\r\n\r\nexport interface Category {\r\n  category: string;\r\n  subcategories: Subcategory[];\r\n}\r\n\r\nexport interface UserInfo {\r\n  region: 'North' | 'South' | 'East' | 'West' | 'Central';\r\n  age: number;\r\n  yearsInRegion: number;\r\n}\r\n\r\n// Create a separate type for form errors\r\nexport interface UserInfoErrors {\r\n  region?: string;\r\n  age?: string;\r\n  yearsInRegion?: string;\r\n}\r\n\r\nexport interface QuestionResponse {\r\n  questionId: string;\r\n  categoryIndex: number;\r\n  subcategoryIndex: number;\r\n  topicIndex: number;\r\n  questionIndex: number;\r\n  category: string;\r\n  subcategory: string;\r\n  topic: string;\r\n  question: string;\r\n  answer: string;\r\n  timeSpent: number;\r\n  timestamp: string;\r\n  qualityScore?: number;\r\n}\r\n\r\nexport interface Progress {\r\n  currentCategory: number;\r\n  currentSubcategory: number;\r\n  currentTopic: number;\r\n  currentQuestion: number;\r\n  completedQuestions: number;\r\n  totalQuestions: number;\r\n  completedTopics: string[];\r\n  attentionChecksPassed: number;\r\n  attentionChecksFailed: number;\r\n}\r\n\r\nexport interface FormState {\r\n  sessionId: string | null;\r\n  userInfo: UserInfo | null;\r\n  currentPosition: {\r\n    categoryIndex: number;\r\n    subcategoryIndex: number;\r\n    topicIndex: number;\r\n    questionIndex: number;\r\n  };\r\n  responses: Map<string, QuestionResponse>;\r\n  progress: Progress;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  questionsData: Category[];\r\n  startTime: number;\r\n  lastSaveTime: number;\r\n  isCompleted: boolean;\r\n  // Timer fields\r\n  surveyStartTime: number;\r\n  surveyTimeLimit: number;\r\n  surveyTimeRemaining: number;\r\n  showTimeWarning: boolean;\r\n  showTimeCritical: boolean;\r\n  surveyExpired: boolean;\r\n}\r\n\r\nexport interface AttentionCheck {\r\n  question: string;\r\n  options: string[];\r\n  correctAnswer: number;\r\n  expectedAnswer?: string; // Add this new field\r\n  currentTopic: string;\r\n  currentCategory: string;\r\n  type?: string;\r\n}\r\n\r\nexport const REGIONS = {\r\n  North: [\r\n    'Delhi', 'Punjab', 'Haryana', 'Himachal Pradesh', 'Jammu and Kashmir', \r\n    'Ladakh', 'Uttarakhand', 'Uttar Pradesh', 'Rajasthan', 'Chandigarh'\r\n  ],\r\n  South: [\r\n    'Andhra Pradesh', 'Karnataka', 'Kerala', 'Tamil Nadu', 'Telangana',\r\n    'Puducherry', 'Lakshadweep', 'Andaman and Nicobar Islands'\r\n  ],\r\n  East: [\r\n    'West Bengal', 'Odisha', 'Jharkhand', 'Bihar', 'Sikkim',\r\n    'Assam', 'Arunachal Pradesh', 'Manipur', 'Meghalaya', 'Mizoram', 'Nagaland', 'Tripura'\r\n  ],\r\n  West: [\r\n    'Maharashtra', 'Gujarat', 'Rajasthan', 'Goa', 'Madhya Pradesh',\r\n    'Chhattisgarh', 'Dadra and Nagar Haveli and Daman and Diu'\r\n  ],\r\n  Central: [\r\n    'Madhya Pradesh', 'Chhattisgarh'\r\n  ]\r\n} as const;"],"mappings":"AA0BA;AAuEA,MAAO,MAAM,CAAAA,OAAO,CAAG,CACrBC,KAAK,CAAE,CACL,OAAO,CAAE,QAAQ,CAAE,SAAS,CAAE,kBAAkB,CAAE,mBAAmB,CACrE,QAAQ,CAAE,aAAa,CAAE,eAAe,CAAE,WAAW,CAAE,YAAY,CACpE,CACDC,KAAK,CAAE,CACL,gBAAgB,CAAE,WAAW,CAAE,QAAQ,CAAE,YAAY,CAAE,WAAW,CAClE,YAAY,CAAE,aAAa,CAAE,6BAA6B,CAC3D,CACDC,IAAI,CAAE,CACJ,aAAa,CAAE,QAAQ,CAAE,WAAW,CAAE,OAAO,CAAE,QAAQ,CACvD,OAAO,CAAE,mBAAmB,CAAE,SAAS,CAAE,WAAW,CAAE,SAAS,CAAE,UAAU,CAAE,SAAS,CACvF,CACDC,IAAI,CAAE,CACJ,aAAa,CAAE,SAAS,CAAE,WAAW,CAAE,KAAK,CAAE,gBAAgB,CAC9D,cAAc,CAAE,0CAA0C,CAC3D,CACDC,OAAO,CAAE,CACP,gBAAgB,CAAE,cAAc,CAEpC,CAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}