{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sangm\\\\OneDrive - Brock University\\\\CommonsenseForm\\\\client\\\\src\\\\components\\\\QuestionForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useForm } from '../context/FormContext.tsx';\nimport { validateAnswer, shouldShowAttentionCheck, generateAttentionCheck, analyzeResponseQuality, analyzeUserPattern, validateAttentionCheck } from '../utils/helpers.ts';\nimport ProgressBar from './ProgressBar.tsx';\nimport QualityWarningModal from './QualityWarningModel.tsx';\nimport SurveyTimer from './SurveyTimer.tsx';\nimport * as api from '../services/api.ts';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function QuestionForm() {\n  _s();\n  const {\n    state,\n    saveResponse,\n    navigateToNext,\n    navigateToPrevious,\n    getCurrentQuestionData,\n    getTotalQuestionsInCurrentTopic,\n    getCompletedQuestionsInCurrentTopic,\n    resetSession,\n    dispatch,\n    navigateToPosition\n  } = useForm();\n\n  // Basic form state\n  const [answer, setAnswer] = useState('');\n  const [errors, setErrors] = useState({});\n  const [isSaving, setIsSaving] = useState(false);\n  const [startTime, setStartTime] = useState(Date.now());\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [lastQuestionId, setLastQuestionId] = useState(null);\n  const [isNavigating, setIsNavigating] = useState(false);\n  const [navigationDirection, setNavigationDirection] = useState(null);\n\n  // Attention check state\n  const [isAttentionCheck, setIsAttentionCheck] = useState(false);\n  const [attentionCheck, setAttentionCheck] = useState(null);\n  const [lastAttentionCheckAt, setLastAttentionCheckAt] = useState(-1);\n  const [attentionChecksPassed, setAttentionChecksPassed] = useState(0);\n  const [attentionChecksFailed, setAttentionChecksFailed] = useState(0);\n  const [attentionCheckFailed, setAttentionCheckFailed] = useState(false);\n\n  // NEW: State to handle the question that was interrupted by attention check\n  const [pendingQuestion, setPendingQuestion] = useState(null);\n  const [pendingAnswer, setPendingAnswer] = useState('');\n\n  // Quality tracking state\n  const [showQualityModal, setShowQualityModal] = useState(false);\n  const [qualityWarnings, setQualityWarnings] = useState([]);\n  const [lastQualityAlertAt, setLastQualityAlertAt] = useState(-1);\n  const [hasShownQualityAlert, setHasShownQualityAlert] = useState(false);\n  const [currentQualityIssue, setCurrentQualityIssue] = useState({\n    type: null,\n    noneRate: 0,\n    gibberishRate: 0,\n    speedRate: 0\n  });\n\n  // Celebration state\n  const [showCelebration, setShowCelebration] = useState(null);\n  const textareaRef = useRef(null);\n  const currentQuestionData = getCurrentQuestionData();\n\n  // Check if this should be an attention check - UPDATED LOGIC\n  useEffect(() => {\n    const totalResponses = state.responses.size;\n    console.log('Attention check logic:', {\n      totalResponses,\n      lastAttentionCheckAt,\n      shouldShow: shouldShowAttentionCheck(totalResponses),\n      currentQuestionId: currentQuestionData === null || currentQuestionData === void 0 ? void 0 : currentQuestionData.questionId,\n      isCurrentlyAttentionCheck: isAttentionCheck,\n      pendingQuestion: pendingQuestion === null || pendingQuestion === void 0 ? void 0 : pendingQuestion.questionId\n    });\n\n    // Don't show if we haven't moved to a new response count\n    if (lastAttentionCheckAt === totalResponses) {\n      console.log('Already shown attention check for this response count');\n      return;\n    }\n\n    // Don't show if we're already showing an attention check\n    if (isAttentionCheck) {\n      console.log('Already showing attention check, skipping');\n      return;\n    }\n\n    // Don't trigger if we already have a pending question\n    if (pendingQuestion) {\n      console.log('Already have pending question, skipping attention check trigger');\n      return;\n    }\n    if (shouldShowAttentionCheck(totalResponses) && currentQuestionData) {\n      // Check if we've already shown an attention check for this response count\n      const attentionCheckKey = `${totalResponses}`;\n      const shownAttentionChecks = JSON.parse(localStorage.getItem('shownAttentionChecks') || '[]');\n      if (shownAttentionChecks.includes(attentionCheckKey)) {\n        console.log('Attention check already shown for this response count');\n        return;\n      }\n      console.log('🚨 TRIGGERING ATTENTION CHECK at response count:', totalResponses);\n\n      // NEW: Store the current question as pending instead of replacing it\n      console.log('📝 Storing current question as pending:', currentQuestionData.questionId);\n      setPendingQuestion({\n        questionData: currentQuestionData,\n        answer: answer,\n        position: {\n          ...state.currentPosition\n        }\n      });\n      setPendingAnswer(answer);\n      const check = generateAttentionCheck(currentQuestionData.category, currentQuestionData.topic, state.userInfo || undefined);\n      setAttentionCheck(check);\n      setIsAttentionCheck(true);\n      setLastAttentionCheckAt(totalResponses);\n\n      // Mark this attention check as shown\n      shownAttentionChecks.push(attentionCheckKey);\n      localStorage.setItem('shownAttentionChecks', JSON.stringify(shownAttentionChecks));\n\n      // Clear answer for attention check\n      setAnswer('');\n    } else {\n      // Reset attention check state when we shouldn't show one\n      if (isAttentionCheck) {\n        console.log('Resetting attention check state');\n        setIsAttentionCheck(false);\n        setAttentionCheck(null);\n      }\n    }\n  }, [state.responses.size, lastAttentionCheckAt, currentQuestionData === null || currentQuestionData === void 0 ? void 0 : currentQuestionData.questionId, isAttentionCheck, pendingQuestion]);\n\n  // Clean up attention check tracking when session changes\n  useEffect(() => {\n    if (state.sessionId) {\n      localStorage.removeItem('shownAttentionChecks');\n    }\n  }, [state.sessionId]);\n\n  // Cleanup when component unmounts\n  useEffect(() => {\n    return () => {\n      localStorage.removeItem('shownAttentionChecks');\n    };\n  }, []);\n\n  // Reset form when question changes - UPDATED to handle pending questions\n  useEffect(() => {\n    if (currentQuestionData && currentQuestionData.questionId !== lastQuestionId) {\n      console.log('Question changed, loading data for:', currentQuestionData.questionId);\n      setErrors({});\n      setShowSuccess(false);\n      setStartTime(Date.now());\n      setLastQuestionId(currentQuestionData.questionId);\n      setIsNavigating(false);\n      setNavigationDirection(null);\n      setQualityWarnings([]);\n      if (isAttentionCheck) {\n        // We're showing an attention check, keep answer cleared\n        setAnswer('');\n      } else {\n        // Check if this is the pending question we need to restore\n        if (pendingQuestion && pendingQuestion.questionData.questionId === currentQuestionData.questionId) {\n          console.log('🔄 Restoring pending question:', currentQuestionData.questionId);\n          setAnswer(pendingQuestion.answer);\n          // Clear pending question since we're back to it\n          setPendingQuestion(null);\n          setPendingAnswer('');\n        } else {\n          // Normal question loading - check for existing response\n          const existingResponse = state.responses.get(currentQuestionData.questionId);\n          if (existingResponse) {\n            console.log('Found existing response:', existingResponse.answer.substring(0, 50) + '...');\n            setAnswer(existingResponse.answer);\n          } else {\n            console.log('No existing response, clearing form');\n            setAnswer('');\n          }\n        }\n      }\n    }\n  }, [currentQuestionData === null || currentQuestionData === void 0 ? void 0 : currentQuestionData.questionId, lastQuestionId, state.responses, isAttentionCheck, pendingQuestion]);\n\n  // Quality check logic (skip for attention checks)\n  useEffect(() => {\n    const totalResponses = state.responses.size;\n    if (totalResponses < 5 || showQualityModal || isAttentionCheck) return;\n    const allResponses = Array.from(state.responses.values());\n    const analysisData = allResponses.map(r => ({\n      answer: r.answer,\n      timeSpent: r.timeSpent\n    }));\n    const patternAnalysis = analyzeUserPattern(analysisData);\n    if (patternAnalysis.suspiciousPattern && !hasShownQualityAlert) {\n      console.log('SHOWING QUALITY ALERT: First detection at', totalResponses);\n      setShowQualityModal(true);\n      setLastQualityAlertAt(totalResponses);\n      setHasShownQualityAlert(true);\n      setQualityWarnings(patternAnalysis.warnings);\n      setCurrentQualityIssue({\n        type: patternAnalysis.issueType,\n        noneRate: patternAnalysis.noneResponseRate,\n        gibberishRate: patternAnalysis.gibberishResponseRate,\n        speedRate: patternAnalysis.fastResponseRate\n      });\n    } else if (patternAnalysis.suspiciousPattern && hasShownQualityAlert && lastQualityAlertAt > 0 && totalResponses - lastQualityAlertAt >= 5) {\n      console.log('SHOWING QUALITY ALERT: Persistent issue after 5 responses');\n      setShowQualityModal(true);\n      setLastQualityAlertAt(totalResponses);\n      setQualityWarnings(patternAnalysis.warnings);\n      setCurrentQualityIssue({\n        type: patternAnalysis.issueType,\n        noneRate: patternAnalysis.noneResponseRate,\n        gibberishRate: patternAnalysis.gibberishResponseRate,\n        speedRate: patternAnalysis.fastResponseRate\n      });\n    }\n  }, [state.responses.size, showQualityModal, hasShownQualityAlert, lastQualityAlertAt, isAttentionCheck]);\n\n  // Auto-resize textarea\n  useEffect(() => {\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n      textareaRef.current.style.height = textareaRef.current.scrollHeight + 'px';\n    }\n  }, [answer]);\n  const validateForm = () => {\n    const newErrors = {};\n    const answerValidation = validateAnswer(answer);\n    if (!answerValidation.isValid) {\n      newErrors.answer = answerValidation.message;\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleAnswerChange = e => {\n    const newValue = e.target.value;\n    setAnswer(newValue);\n    if (errors.answer) {\n      setErrors(prev => ({\n        ...prev,\n        answer: undefined\n      }));\n    }\n\n    // Real-time quality feedback for current response only (skip for attention checks)\n    if (newValue.length > 5 && !isAttentionCheck) {\n      const qualityAnalysis = analyzeResponseQuality(newValue);\n      if (qualityAnalysis.isLowQuality) {\n        setQualityWarnings(qualityAnalysis.issues);\n      } else {\n        setQualityWarnings([]);\n      }\n    } else {\n      setQualityWarnings([]);\n    }\n  };\n  const handleClear = () => {\n    setAnswer('');\n    setErrors({});\n    setShowSuccess(false);\n    setQualityWarnings([]);\n    if (textareaRef.current) {\n      textareaRef.current.focus();\n    }\n  };\n  const checkForMilestones = () => {\n    const {\n      categoryIndex,\n      subcategoryIndex,\n      topicIndex,\n      questionIndex\n    } = state.currentPosition;\n    const currentCategory = state.questionsData[categoryIndex];\n    const currentSubcategory = currentCategory === null || currentCategory === void 0 ? void 0 : currentCategory.subcategories[subcategoryIndex];\n    const currentTopic = currentSubcategory === null || currentSubcategory === void 0 ? void 0 : currentSubcategory.topics[topicIndex];\n    if (!currentTopic) return null;\n    if (questionIndex === currentTopic.questions.length - 1) {\n      if (topicIndex === currentSubcategory.topics.length - 1) {\n        if (subcategoryIndex === currentCategory.subcategories.length - 1) {\n          return {\n            type: 'category',\n            name: currentCategory.category,\n            subcategoryName: currentSubcategory.subcategory,\n            topicName: currentTopic.topic\n          };\n        }\n        return {\n          type: 'subcategory',\n          name: currentSubcategory.subcategory,\n          topicName: currentTopic.topic,\n          categoryName: currentCategory.category\n        };\n      }\n      return {\n        type: 'topic',\n        name: currentTopic.topic,\n        subcategoryName: currentSubcategory.subcategory,\n        categoryName: currentCategory.category\n      };\n    }\n    return null;\n  };\n\n  // Save response function\n  const performSave = async qualityAnalysis => {\n    if (!currentQuestionData || !state.sessionId) {\n      console.error('Missing required data for save');\n      return false;\n    }\n\n    // For attention checks, we'll create a special question ID to identify them\n    const questionId = isAttentionCheck ? `ATTENTION_CHECK_${state.responses.size}_${currentQuestionData.questionId}` : currentQuestionData.questionId;\n    const questionText = isAttentionCheck ? attentionCheck.question : currentQuestionData.question;\n    if (!qualityAnalysis) {\n      qualityAnalysis = analyzeResponseQuality(answer);\n    }\n    setIsSaving(true);\n    try {\n      const timeSpent = Math.floor((Date.now() - startTime) / 1000);\n      const response = {\n        sessionId: state.sessionId,\n        questionId: questionId,\n        categoryIndex: state.currentPosition.categoryIndex,\n        subcategoryIndex: state.currentPosition.subcategoryIndex,\n        topicIndex: state.currentPosition.topicIndex,\n        questionIndex: state.currentPosition.questionIndex,\n        category: currentQuestionData.category,\n        subcategory: currentQuestionData.subcategory,\n        topic: currentQuestionData.topic,\n        question: questionText,\n        answer: answer.trim(),\n        timeSpent,\n        timestamp: new Date().toISOString(),\n        qualityScore: qualityAnalysis.score,\n        // Add metadata for attention checks\n        isAttentionCheck: isAttentionCheck,\n        attentionCheckType: isAttentionCheck ? attentionCheck.type : undefined,\n        expectedAnswer: isAttentionCheck ? attentionCheck.expectedAnswer : undefined\n      };\n      console.log('Saving response:', {\n        questionId,\n        isAttentionCheck,\n        answer: answer.substring(0, 50) + '...',\n        totalResponses: state.responses.size\n      });\n      await saveResponse(response);\n      setShowSuccess(true);\n      setTimeout(() => setShowSuccess(false), 2000);\n      return true;\n    } catch (error) {\n      console.error('SAVE ERROR:', error);\n      throw error;\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  const handleSave = async () => {\n    if (!validateForm() || !currentQuestionData || !state.sessionId) {\n      console.log('Validation failed:', errors);\n      return false;\n    }\n    try {\n      const qualityAnalysis = analyzeResponseQuality(answer);\n      return await performSave(qualityAnalysis);\n    } catch (error) {\n      console.error('Save failed:', error);\n      alert('Failed to save response. Please try again.');\n      return false;\n    }\n  };\n\n  // UPDATED handleNext to properly handle attention check completion\n  const handleNext = async () => {\n    const isValid = validateForm();\n    if (!isValid) {\n      console.log('Form validation failed, cannot proceed');\n      return;\n    }\n\n    // Check attention check validation FIRST\n    if (isAttentionCheck && attentionCheck) {\n      const expectedAnswers = attentionCheck.expectedAnswers || [attentionCheck.expectedAnswer];\n      const isAttentionCheckValid = validateAttentionCheck(answer, expectedAnswers);\n      console.log('ATTENTION CHECK VALIDATION:', {\n        userAnswer: answer,\n        expectedAnswers: expectedAnswers,\n        isValid: isAttentionCheckValid,\n        attentionCheckType: attentionCheck.type\n      });\n      if (!isAttentionCheckValid) {\n        console.log('❌ ATTENTION CHECK FAILED - Redirecting to completion');\n\n        // Save the failed response for record keeping\n        try {\n          await performSave();\n          console.log('Failed attention check response saved');\n        } catch (error) {\n          console.error('Error saving failed attention check:', error);\n        }\n\n        // Mark survey as completed due to attention check failure\n        if (state.sessionId) {\n          try {\n            await api.completeUser(state.sessionId, 'attention_check_failed');\n            console.log('Survey marked as completed due to attention check failure');\n          } catch (error) {\n            console.error('Error marking survey completed:', error);\n          }\n        }\n\n        // Set the attention check failed state\n        dispatch({\n          type: 'SET_ATTENTION_CHECK_FAILED',\n          payload: true\n        });\n        return; // Stop here\n      } else {\n        console.log('✅ ATTENTION CHECK PASSED');\n\n        // Save the attention check response\n        try {\n          await performSave();\n          console.log('Attention check response saved');\n        } catch (error) {\n          console.error('Error saving attention check:', error);\n        }\n\n        // Reset attention check state and go back to the pending question\n        setIsAttentionCheck(false);\n        setAttentionCheck(null);\n\n        // Navigate back to the pending question if it exists\n        if (pendingQuestion) {\n          console.log('🔄 Returning to pending question:', pendingQuestion.questionData.questionId);\n\n          // Navigate back to the pending question position\n          setNavigationDirection('next');\n          setIsNavigating(true);\n          setTimeout(async () => {\n            await navigateToPosition(pendingQuestion.position.categoryIndex, pendingQuestion.position.subcategoryIndex, pendingQuestion.position.topicIndex, pendingQuestion.position.questionIndex);\n            setIsNavigating(false);\n          }, 300);\n          return;\n        }\n      }\n    }\n\n    // Regular flow continues...\n    try {\n      const saveSuccessful = await handleSave();\n      if (saveSuccessful && isValid) {\n        const milestone = checkForMilestones();\n        setNavigationDirection('next');\n        setIsNavigating(true);\n        setTimeout(() => {\n          navigateToNext();\n          if (milestone && !isAttentionCheck) {\n            setShowCelebration({\n              type: milestone.type,\n              data: milestone\n            });\n          }\n        }, 300);\n      }\n    } catch (error) {\n      console.error('Next navigation failed:', error);\n    }\n  };\n  const handlePrevious = () => {\n    setNavigationDirection('previous');\n    setIsNavigating(true);\n    setTimeout(() => {\n      navigateToPrevious();\n    }, 300);\n  };\n  const handleSkip = () => {\n    if (isAttentionCheck) return; // Don't allow skipping attention checks\n\n    setAnswer('');\n    setErrors({});\n    setNavigationDirection('next');\n    setIsNavigating(true);\n    setTimeout(() => {\n      navigateToNext();\n    }, 300);\n  };\n  const handleQualityModalClose = () => {\n    console.log('Quality modal closed - user will improve response');\n    setShowQualityModal(false);\n    setAnswer('');\n    setErrors({});\n    setTimeout(() => {\n      if (textareaRef.current) {\n        textareaRef.current.focus();\n      }\n    }, 100);\n  };\n  const closeCelebration = () => {\n    setShowCelebration(null);\n  };\n  if (!currentQuestionData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-100 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Loading question...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If survey has expired, don't render the question form\n  if (state.surveyExpired) {\n    return null; // App.tsx will handle showing SurveyExpired component\n  }\n  const isFirstQuestion = state.currentPosition.categoryIndex === 0 && state.currentPosition.subcategoryIndex === 0 && state.currentPosition.topicIndex === 0 && state.currentPosition.questionIndex === 0;\n  const isFormValid = answer.trim().length >= 4;\n\n  // For attention checks, use the attention check question\n  const displayQuestion = isAttentionCheck ? attentionCheck.question : currentQuestionData.question;\n\n  // At the end of QuestionForm component, before the return statement, add:\n  if (attentionCheckFailed) {\n    return null; // Let App.tsx handle showing the failure page\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen\",\n    style: {\n      background: `linear-gradient(135deg, var(--bg-primary) 0%, var(--color-cream) 50%, var(--bg-secondary) 100%)`\n    },\n    children: [/*#__PURE__*/_jsxDEV(SurveyTimer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 7\n    }, this), !isAttentionCheck && /*#__PURE__*/_jsxDEV(QualityWarningModal, {\n      isOpen: showQualityModal,\n      onClose: handleQualityModalClose,\n      qualityIssues: qualityWarnings,\n      issueType: currentQualityIssue.type,\n      noneResponseRate: currentQualityIssue.noneRate,\n      gibberishResponseRate: currentQualityIssue.gibberishRate,\n      fastResponseRate: currentQualityIssue.speedRate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 9\n    }, this), showCelebration && /*#__PURE__*/_jsxDEV(CelebrationModal, {\n      celebration: showCelebration,\n      onClose: closeCelebration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto px-4 py-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `transform transition-all duration-500 ease-in-out ${isNavigating ? navigationDirection === 'next' ? '-translate-x-full opacity-0' : 'translate-x-full opacity-0' : 'translate-x-0 opacity-100'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"backdrop-blur-sm rounded-2xl shadow-lg overflow-hidden\",\n            style: {\n              backgroundColor: 'var(--bg-card)',\n              border: '1px solid var(--border-light)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-6\",\n              style: {\n                background: isAttentionCheck ? '#ef4444' : 'var(--bg-card-header)',\n                color: 'var(--text-on-dark)'\n              },\n              children: [isAttentionCheck && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3 text-sm font-medium text-white/90\",\n                children: \"\\uD83D\\uDD0D Attention Check\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-lg md:text-xl font-medium leading-relaxed\",\n                children: displayQuestion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 649,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-center mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-base font-medium\",\n                    style: {\n                      color: 'var(--text-primary)'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Your Answer *\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 662,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"block text-xs font-normal mt-1\",\n                      style: {\n                        color: 'var(--text-secondary)'\n                      },\n                      children: \"You can specify \\\"none\\\" if no answer exists\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 663,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 658,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleClear,\n                    className: \"text-sm font-medium hover:underline transition-colors\",\n                    style: {\n                      color: 'var(--accent-warning)'\n                    },\n                    children: \"Clear Form\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 670,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 657,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"relative\",\n                  children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                    ref: textareaRef,\n                    value: answer,\n                    onChange: handleAnswerChange,\n                    placeholder: \"Share your knowledge about cultural practices in your region, or specify 'none' if no answer exists...\",\n                    className: `w-full px-4 py-3 border-2 rounded-xl resize-none min-h-[120px] transition-all duration-200 ${errors.answer ? 'focus:border-red-400' : ''}`,\n                    style: {\n                      color: 'var(--text-primary)',\n                      borderColor: errors.answer ? 'var(--accent-error)' : 'var(--border-medium)',\n                      backgroundColor: 'rgba(244, 228, 202, 0.3)'\n                    },\n                    maxLength: 5000,\n                    disabled: isSaving\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 681,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `absolute bottom-3 right-3 px-2 py-1 rounded-lg text-xs border`,\n                    style: {\n                      backgroundColor: answer.length >= 4 ? 'var(--color-cream)' : '#fef3c7',\n                      color: answer.length >= 4 ? 'var(--text-secondary)' : 'var(--accent-warning)',\n                      borderColor: answer.length >= 4 ? 'var(--border-light)' : '#fbbf24'\n                    },\n                    children: [answer.length, \"/5000 \", answer.length < 4 && `(${4 - answer.length} more needed)`]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 698,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 680,\n                  columnNumber: 19\n                }, this), errors.answer && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm mt-2 font-medium\",\n                  style: {\n                    color: 'var(--accent-error)'\n                  },\n                  children: errors.answer\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 711,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 656,\n                columnNumber: 17\n              }, this), !isAttentionCheck && qualityWarnings.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4 p-3 border rounded-xl\",\n                style: {\n                  background: 'var(--btn-warning-bg)',\n                  borderColor: '#fbbf24'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-start\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: 'var(--accent-warning)'\n                    },\n                    className: \"mr-2\",\n                    children: \"\\u26A0\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 727,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm\",\n                    style: {\n                      color: '#92400e'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"font-medium mb-1\",\n                      children: \"Response Quality Notice:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 729,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                      className: \"text-xs space-y-1\",\n                      children: qualityWarnings.map((warning, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: [\"\\u2022 \", warning]\n                      }, index, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 732,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 730,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"mt-2 font-medium\",\n                      children: \"Please provide detailed responses or specify \\\"none\\\" if not applicable.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 735,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 728,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 726,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 719,\n                columnNumber: 19\n              }, this), showSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4 p-3 border rounded-xl animate-bounce-in\",\n                style: {\n                  background: 'var(--accent-success)',\n                  borderColor: 'var(--border-dark)',\n                  color: 'var(--text-on-dark)'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"mr-2\",\n                    children: \"\\u2728\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 754,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium text-sm\",\n                    children: \"Response saved successfully!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 755,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 753,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 745,\n                columnNumber: 19\n              }, this), !isFormValid && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4 p-3 border rounded-xl\",\n                style: {\n                  background: 'var(--btn-warning-bg)',\n                  borderColor: '#fbbf24'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-start\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: 'var(--accent-warning)'\n                    },\n                    className: \"mr-2\",\n                    children: \"\\u26A0\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 770,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm\",\n                    style: {\n                      color: '#92400e'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"font-medium mb-1\",\n                      children: \"Please complete the following:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 772,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                      className: \"text-xs space-y-1\",\n                      children: /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: \"\\u2022 Add at least 4 characters to your answer or specify \\\"none\\\"\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 774,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 773,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 771,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 769,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 762,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center pt-4 border-t\",\n                style: {\n                  borderColor: 'var(--border-light)'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handlePrevious,\n                  disabled: isFirstQuestion || isNavigating || isAttentionCheck,\n                  className: \"flex items-center px-4 py-2 font-medium rounded-xl transition-all duration-200 disabled:cursor-not-allowed text-sm disabled:opacity-50\",\n                  style: {\n                    background: 'var(--btn-warning-bg)',\n                    color: '#92400e'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"mr-2\",\n                    children: \"\\u2190\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 795,\n                    columnNumber: 21\n                  }, this), \"Previous\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 786,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex space-x-3\",\n                  children: [!isAttentionCheck && /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleSkip,\n                    disabled: isNavigating,\n                    className: \"px-4 py-2 font-medium rounded-xl transition-all duration-200 text-sm\",\n                    style: {\n                      background: 'var(--btn-warning-bg)',\n                      color: '#92400e'\n                    },\n                    children: \"Skip\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 802,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleSave,\n                    disabled: isSaving || !isFormValid || isNavigating,\n                    className: \"px-4 py-2 font-medium rounded-xl transition-all duration-200 disabled:cursor-not-allowed text-sm disabled:opacity-50\",\n                    style: {\n                      background: 'var(--btn-secondary-bg)',\n                      color: 'var(--text-on-dark)'\n                    },\n                    children: isSaving ? 'Saving...' : 'Save'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 815,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleNext,\n                    disabled: isSaving || !isFormValid || isNavigating,\n                    className: \"flex items-center px-5 py-2 font-medium rounded-xl transition-all duration-200 disabled:cursor-not-allowed text-sm disabled:opacity-50\",\n                    style: {\n                      background: 'var(--btn-primary-bg)',\n                      color: 'var(--text-on-dark)'\n                    },\n                    children: isNavigating ? 'Moving...' : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [\"Save & Continue\", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"ml-2\",\n                        children: \"\\u2192\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 839,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 827,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 799,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 782,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 584,\n    columnNumber: 5\n  }, this);\n}\n\n// Celebration Modal Component (simplified)\n_s(QuestionForm, \"WrE8/FRahhnqklufAmM98BPAp4A=\", false, function () {\n  return [useForm];\n});\n_c = QuestionForm;\nfunction CelebrationModal({\n  celebration,\n  onClose\n}) {\n  const celebrations = {\n    topic: {\n      icon: '🎯',\n      title: 'Section Completed!',\n      message: 'Great progress! Keep going!'\n    },\n    subcategory: {\n      icon: '🏆',\n      title: 'Section Mastered!',\n      message: 'Excellent work! Moving to next section!'\n    },\n    category: {\n      icon: '👑',\n      title: 'Major Section Complete!',\n      message: 'Outstanding! You\\'re making great progress!'\n    }\n  };\n  const config = celebrations[celebration.type];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black/30 backdrop-blur-sm flex items-center justify-center z-50 animate-fade-in p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rounded-2xl p-6 max-w-lg mx-auto text-center shadow-2xl animate-bounce-in\",\n      style: {\n        backgroundColor: 'var(--bg-card)',\n        border: '1px solid var(--border-light)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-5xl mb-3\",\n        children: config.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-3\",\n        style: {\n          color: 'var(--text-primary)'\n        },\n        children: config.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg mb-4\",\n        style: {\n          color: 'var(--text-secondary)'\n        },\n        children: config.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 895,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"px-6 py-2 font-medium rounded-xl transition-all duration-200\",\n        style: {\n          background: 'var(--btn-primary-bg)',\n          color: 'var(--text-on-dark)'\n        },\n        children: \"Continue Survey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 901,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 881,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 880,\n    columnNumber: 5\n  }, this);\n}\n_c2 = CelebrationModal;\nvar _c, _c2;\n$RefreshReg$(_c, \"QuestionForm\");\n$RefreshReg$(_c2, \"CelebrationModal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useForm","validateAnswer","shouldShowAttentionCheck","generateAttentionCheck","analyzeResponseQuality","analyzeUserPattern","validateAttentionCheck","ProgressBar","QualityWarningModal","SurveyTimer","api","jsxDEV","_jsxDEV","Fragment","_Fragment","QuestionForm","_s","state","saveResponse","navigateToNext","navigateToPrevious","getCurrentQuestionData","getTotalQuestionsInCurrentTopic","getCompletedQuestionsInCurrentTopic","resetSession","dispatch","navigateToPosition","answer","setAnswer","errors","setErrors","isSaving","setIsSaving","startTime","setStartTime","Date","now","showSuccess","setShowSuccess","lastQuestionId","setLastQuestionId","isNavigating","setIsNavigating","navigationDirection","setNavigationDirection","isAttentionCheck","setIsAttentionCheck","attentionCheck","setAttentionCheck","lastAttentionCheckAt","setLastAttentionCheckAt","attentionChecksPassed","setAttentionChecksPassed","attentionChecksFailed","setAttentionChecksFailed","attentionCheckFailed","setAttentionCheckFailed","pendingQuestion","setPendingQuestion","pendingAnswer","setPendingAnswer","showQualityModal","setShowQualityModal","qualityWarnings","setQualityWarnings","lastQualityAlertAt","setLastQualityAlertAt","hasShownQualityAlert","setHasShownQualityAlert","currentQualityIssue","setCurrentQualityIssue","type","noneRate","gibberishRate","speedRate","showCelebration","setShowCelebration","textareaRef","currentQuestionData","totalResponses","responses","size","console","log","shouldShow","currentQuestionId","questionId","isCurrentlyAttentionCheck","attentionCheckKey","shownAttentionChecks","JSON","parse","localStorage","getItem","includes","questionData","position","currentPosition","check","category","topic","userInfo","undefined","push","setItem","stringify","sessionId","removeItem","existingResponse","get","substring","allResponses","Array","from","values","analysisData","map","r","timeSpent","patternAnalysis","suspiciousPattern","warnings","issueType","noneResponseRate","gibberishResponseRate","fastResponseRate","current","style","height","scrollHeight","validateForm","newErrors","answerValidation","isValid","message","Object","keys","length","handleAnswerChange","e","newValue","target","value","prev","qualityAnalysis","isLowQuality","issues","handleClear","focus","checkForMilestones","categoryIndex","subcategoryIndex","topicIndex","questionIndex","currentCategory","questionsData","currentSubcategory","subcategories","currentTopic","topics","questions","name","subcategoryName","subcategory","topicName","categoryName","performSave","error","questionText","question","Math","floor","response","trim","timestamp","toISOString","qualityScore","score","attentionCheckType","expectedAnswer","setTimeout","handleSave","alert","handleNext","expectedAnswers","isAttentionCheckValid","userAnswer","completeUser","payload","saveSuccessful","milestone","data","handlePrevious","handleSkip","handleQualityModalClose","closeCelebration","className","children","fileName","_jsxFileName","lineNumber","columnNumber","surveyExpired","isFirstQuestion","isFormValid","displayQuestion","background","isOpen","onClose","qualityIssues","CelebrationModal","celebration","backgroundColor","border","color","onClick","ref","onChange","placeholder","borderColor","maxLength","disabled","warning","index","_c","celebrations","icon","title","config","_c2","$RefreshReg$"],"sources":["C:/Users/sangm/OneDrive - Brock University/CommonsenseForm/client/src/components/QuestionForm.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useForm } from '../context/FormContext.tsx';\r\nimport { validateAnswer, shouldShowAttentionCheck, generateAttentionCheck, analyzeResponseQuality, analyzeUserPattern, validateAttentionCheck } from '../utils/helpers.ts';\r\nimport ProgressBar from './ProgressBar.tsx';\r\nimport QualityWarningModal from './QualityWarningModel.tsx';\r\nimport SurveyTimer from './SurveyTimer.tsx';\r\nimport TimeWarningModal from './TimeWarningModal.tsx';\r\nimport * as api from '../services/api.ts';\r\n\r\nexport default function QuestionForm() {\r\n  const {\r\n    state,\r\n    saveResponse,\r\n    navigateToNext,\r\n    navigateToPrevious,\r\n    getCurrentQuestionData,\r\n    getTotalQuestionsInCurrentTopic,\r\n    getCompletedQuestionsInCurrentTopic,\r\n    resetSession,\r\n    dispatch,\r\n    navigateToPosition\r\n  } = useForm();\r\n\r\n  // Basic form state\r\n  const [answer, setAnswer] = useState('');\r\n  const [errors, setErrors] = useState<{ answer?: string }>({});\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [startTime, setStartTime] = useState(Date.now());\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const [lastQuestionId, setLastQuestionId] = useState<string | null>(null);\r\n  const [isNavigating, setIsNavigating] = useState(false);\r\n  const [navigationDirection, setNavigationDirection] = useState<'next' | 'previous' | null>(null);\r\n\r\n  // Attention check state\r\n  const [isAttentionCheck, setIsAttentionCheck] = useState(false);\r\n  const [attentionCheck, setAttentionCheck] = useState<any>(null);\r\n  const [lastAttentionCheckAt, setLastAttentionCheckAt] = useState<number>(-1);\r\n  const [attentionChecksPassed, setAttentionChecksPassed] = useState(0);\r\n  const [attentionChecksFailed, setAttentionChecksFailed] = useState(0);\r\n  const [attentionCheckFailed, setAttentionCheckFailed] = useState(false);\r\n\r\n  // NEW: State to handle the question that was interrupted by attention check\r\n  const [pendingQuestion, setPendingQuestion] = useState<any>(null);\r\n  const [pendingAnswer, setPendingAnswer] = useState<string>('');\r\n\r\n  // Quality tracking state\r\n  const [showQualityModal, setShowQualityModal] = useState(false);\r\n  const [qualityWarnings, setQualityWarnings] = useState<string[]>([]);\r\n  const [lastQualityAlertAt, setLastQualityAlertAt] = useState<number>(-1);\r\n  const [hasShownQualityAlert, setHasShownQualityAlert] = useState(false);\r\n  const [currentQualityIssue, setCurrentQualityIssue] = useState<{\r\n    type: string | null;\r\n    noneRate: number;\r\n    gibberishRate: number;\r\n    speedRate: number;\r\n  }>({ type: null, noneRate: 0, gibberishRate: 0, speedRate: 0 });\r\n\r\n  // Celebration state\r\n  const [showCelebration, setShowCelebration] = useState<{type: string, data: any} | null>(null);\r\n\r\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\r\n  const currentQuestionData = getCurrentQuestionData();\r\n\r\n  // Check if this should be an attention check - UPDATED LOGIC\r\n  useEffect(() => {\r\n    const totalResponses = state.responses.size;\r\n    \r\n    console.log('Attention check logic:', {\r\n      totalResponses,\r\n      lastAttentionCheckAt,\r\n      shouldShow: shouldShowAttentionCheck(totalResponses),\r\n      currentQuestionId: currentQuestionData?.questionId,\r\n      isCurrentlyAttentionCheck: isAttentionCheck,\r\n      pendingQuestion: pendingQuestion?.questionId\r\n    });\r\n    \r\n    // Don't show if we haven't moved to a new response count\r\n    if (lastAttentionCheckAt === totalResponses) {\r\n      console.log('Already shown attention check for this response count');\r\n      return;\r\n    }\r\n    \r\n    // Don't show if we're already showing an attention check\r\n    if (isAttentionCheck) {\r\n      console.log('Already showing attention check, skipping');\r\n      return;\r\n    }\r\n    \r\n    // Don't trigger if we already have a pending question\r\n    if (pendingQuestion) {\r\n      console.log('Already have pending question, skipping attention check trigger');\r\n      return;\r\n    }\r\n    \r\n    if (shouldShowAttentionCheck(totalResponses) && currentQuestionData) {\r\n      // Check if we've already shown an attention check for this response count\r\n      const attentionCheckKey = `${totalResponses}`;\r\n      const shownAttentionChecks = JSON.parse(localStorage.getItem('shownAttentionChecks') || '[]');\r\n      \r\n      if (shownAttentionChecks.includes(attentionCheckKey)) {\r\n        console.log('Attention check already shown for this response count');\r\n        return;\r\n      }\r\n      \r\n      console.log('🚨 TRIGGERING ATTENTION CHECK at response count:', totalResponses);\r\n      \r\n      // NEW: Store the current question as pending instead of replacing it\r\n      console.log('📝 Storing current question as pending:', currentQuestionData.questionId);\r\n      setPendingQuestion({\r\n        questionData: currentQuestionData,\r\n        answer: answer,\r\n        position: { ...state.currentPosition }\r\n      });\r\n      setPendingAnswer(answer);\r\n      \r\n      const check = generateAttentionCheck(\r\n        currentQuestionData.category,\r\n        currentQuestionData.topic,\r\n        state.userInfo || undefined\r\n      );\r\n      \r\n      setAttentionCheck(check);\r\n      setIsAttentionCheck(true);\r\n      setLastAttentionCheckAt(totalResponses);\r\n      \r\n      // Mark this attention check as shown\r\n      shownAttentionChecks.push(attentionCheckKey);\r\n      localStorage.setItem('shownAttentionChecks', JSON.stringify(shownAttentionChecks));\r\n      \r\n      // Clear answer for attention check\r\n      setAnswer('');\r\n      \r\n    } else {\r\n      // Reset attention check state when we shouldn't show one\r\n      if (isAttentionCheck) {\r\n        console.log('Resetting attention check state');\r\n        setIsAttentionCheck(false);\r\n        setAttentionCheck(null);\r\n      }\r\n    }\r\n  }, [state.responses.size, lastAttentionCheckAt, currentQuestionData?.questionId, isAttentionCheck, pendingQuestion]);\r\n\r\n  // Clean up attention check tracking when session changes\r\n  useEffect(() => {\r\n    if (state.sessionId) {\r\n      localStorage.removeItem('shownAttentionChecks');\r\n    }\r\n  }, [state.sessionId]);\r\n\r\n  // Cleanup when component unmounts\r\n  useEffect(() => {\r\n    return () => {\r\n      localStorage.removeItem('shownAttentionChecks');\r\n    };\r\n  }, []);\r\n\r\n  // Reset form when question changes - UPDATED to handle pending questions\r\n  useEffect(() => {\r\n    if (currentQuestionData && currentQuestionData.questionId !== lastQuestionId) {\r\n      console.log('Question changed, loading data for:', currentQuestionData.questionId);\r\n      \r\n      setErrors({});\r\n      setShowSuccess(false);\r\n      setStartTime(Date.now());\r\n      setLastQuestionId(currentQuestionData.questionId);\r\n      setIsNavigating(false);\r\n      setNavigationDirection(null);\r\n      setQualityWarnings([]);\r\n      \r\n      if (isAttentionCheck) {\r\n        // We're showing an attention check, keep answer cleared\r\n        setAnswer('');\r\n      } else {\r\n        // Check if this is the pending question we need to restore\r\n        if (pendingQuestion && pendingQuestion.questionData.questionId === currentQuestionData.questionId) {\r\n          console.log('🔄 Restoring pending question:', currentQuestionData.questionId);\r\n          setAnswer(pendingQuestion.answer);\r\n          // Clear pending question since we're back to it\r\n          setPendingQuestion(null);\r\n          setPendingAnswer('');\r\n        } else {\r\n          // Normal question loading - check for existing response\r\n          const existingResponse = state.responses.get(currentQuestionData.questionId);\r\n          if (existingResponse) {\r\n            console.log('Found existing response:', existingResponse.answer.substring(0, 50) + '...');\r\n            setAnswer(existingResponse.answer);\r\n          } else {\r\n            console.log('No existing response, clearing form');\r\n            setAnswer('');\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [currentQuestionData?.questionId, lastQuestionId, state.responses, isAttentionCheck, pendingQuestion]);\r\n\r\n  // Quality check logic (skip for attention checks)\r\n  useEffect(() => {\r\n    const totalResponses = state.responses.size;\r\n    \r\n    if (totalResponses < 5 || showQualityModal || isAttentionCheck) return;\r\n\r\n    const allResponses = Array.from(state.responses.values());\r\n    const analysisData = allResponses.map(r => ({ answer: r.answer, timeSpent: r.timeSpent }));\r\n    const patternAnalysis = analyzeUserPattern(analysisData);\r\n    \r\n    if (patternAnalysis.suspiciousPattern && !hasShownQualityAlert) {\r\n      console.log('SHOWING QUALITY ALERT: First detection at', totalResponses);\r\n      setShowQualityModal(true);\r\n      setLastQualityAlertAt(totalResponses);\r\n      setHasShownQualityAlert(true);\r\n      setQualityWarnings(patternAnalysis.warnings);\r\n      setCurrentQualityIssue({\r\n        type: patternAnalysis.issueType,\r\n        noneRate: patternAnalysis.noneResponseRate,\r\n        gibberishRate: patternAnalysis.gibberishResponseRate,\r\n        speedRate: patternAnalysis.fastResponseRate\r\n      });\r\n    }\r\n    else if (patternAnalysis.suspiciousPattern && \r\n             hasShownQualityAlert && \r\n             lastQualityAlertAt > 0 && \r\n             (totalResponses - lastQualityAlertAt) >= 5) {\r\n      console.log('SHOWING QUALITY ALERT: Persistent issue after 5 responses');\r\n      setShowQualityModal(true);\r\n      setLastQualityAlertAt(totalResponses);\r\n      setQualityWarnings(patternAnalysis.warnings);\r\n      setCurrentQualityIssue({\r\n        type: patternAnalysis.issueType,\r\n        noneRate: patternAnalysis.noneResponseRate,\r\n        gibberishRate: patternAnalysis.gibberishResponseRate,\r\n        speedRate: patternAnalysis.fastResponseRate\r\n      });\r\n    }\r\n  }, [state.responses.size, showQualityModal, hasShownQualityAlert, lastQualityAlertAt, isAttentionCheck]);\r\n\r\n  // Auto-resize textarea\r\n  useEffect(() => {\r\n    if (textareaRef.current) {\r\n      textareaRef.current.style.height = 'auto';\r\n      textareaRef.current.style.height = textareaRef.current.scrollHeight + 'px';\r\n    }\r\n  }, [answer]);\r\n\r\n  const validateForm = () => {\r\n    const newErrors: { answer?: string } = {};\r\n    \r\n    const answerValidation = validateAnswer(answer);\r\n    if (!answerValidation.isValid) {\r\n      newErrors.answer = answerValidation.message;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleAnswerChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const newValue = e.target.value;\r\n    setAnswer(newValue);\r\n    \r\n    if (errors.answer) {\r\n      setErrors(prev => ({ ...prev, answer: undefined }));\r\n    }\r\n\r\n    // Real-time quality feedback for current response only (skip for attention checks)\r\n    if (newValue.length > 5 && !isAttentionCheck) {\r\n      const qualityAnalysis = analyzeResponseQuality(newValue);\r\n      if (qualityAnalysis.isLowQuality) {\r\n        setQualityWarnings(qualityAnalysis.issues);\r\n      } else {\r\n        setQualityWarnings([]);\r\n      }\r\n    } else {\r\n      setQualityWarnings([]);\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setAnswer('');\r\n    setErrors({});\r\n    setShowSuccess(false);\r\n    setQualityWarnings([]);\r\n    if (textareaRef.current) {\r\n      textareaRef.current.focus();\r\n    }\r\n  };\r\n\r\n  const checkForMilestones = () => {\r\n    const { categoryIndex, subcategoryIndex, topicIndex, questionIndex } = state.currentPosition;\r\n    const currentCategory = state.questionsData[categoryIndex];\r\n    const currentSubcategory = currentCategory?.subcategories[subcategoryIndex];\r\n    const currentTopic = currentSubcategory?.topics[topicIndex];\r\n    \r\n    if (!currentTopic) return null;\r\n\r\n    if (questionIndex === currentTopic.questions.length - 1) {\r\n      if (topicIndex === currentSubcategory.topics.length - 1) {\r\n        if (subcategoryIndex === currentCategory.subcategories.length - 1) {\r\n          return {\r\n            type: 'category',\r\n            name: currentCategory.category,\r\n            subcategoryName: currentSubcategory.subcategory,\r\n            topicName: currentTopic.topic\r\n          };\r\n        }\r\n        return {\r\n          type: 'subcategory',\r\n          name: currentSubcategory.subcategory,\r\n          topicName: currentTopic.topic,\r\n          categoryName: currentCategory.category\r\n        };\r\n      }\r\n      return {\r\n        type: 'topic',\r\n        name: currentTopic.topic,\r\n        subcategoryName: currentSubcategory.subcategory,\r\n        categoryName: currentCategory.category\r\n      };\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Save response function\r\n  const performSave = async (qualityAnalysis?: any) => {\r\n    if (!currentQuestionData || !state.sessionId) {\r\n      console.error('Missing required data for save');\r\n      return false;\r\n    }\r\n\r\n    // For attention checks, we'll create a special question ID to identify them\r\n    const questionId = isAttentionCheck \r\n      ? `ATTENTION_CHECK_${state.responses.size}_${currentQuestionData.questionId}`\r\n      : currentQuestionData.questionId;\r\n\r\n    const questionText = isAttentionCheck \r\n      ? attentionCheck.question \r\n      : currentQuestionData.question;\r\n\r\n    if (!qualityAnalysis) {\r\n      qualityAnalysis = analyzeResponseQuality(answer);\r\n    }\r\n\r\n    setIsSaving(true);\r\n    \r\n    try {\r\n      const timeSpent = Math.floor((Date.now() - startTime) / 1000);\r\n      \r\n      const response = {\r\n        sessionId: state.sessionId,\r\n        questionId: questionId,\r\n        categoryIndex: state.currentPosition.categoryIndex,\r\n        subcategoryIndex: state.currentPosition.subcategoryIndex,\r\n        topicIndex: state.currentPosition.topicIndex,\r\n        questionIndex: state.currentPosition.questionIndex,\r\n        category: currentQuestionData.category,\r\n        subcategory: currentQuestionData.subcategory,\r\n        topic: currentQuestionData.topic,\r\n        question: questionText,\r\n        answer: answer.trim(),\r\n        timeSpent,\r\n        timestamp: new Date().toISOString(),\r\n        qualityScore: qualityAnalysis.score,\r\n        // Add metadata for attention checks\r\n        isAttentionCheck: isAttentionCheck,\r\n        attentionCheckType: isAttentionCheck ? attentionCheck.type : undefined,\r\n        expectedAnswer: isAttentionCheck ? attentionCheck.expectedAnswer : undefined\r\n      };\r\n\r\n      console.log('Saving response:', {\r\n        questionId,\r\n        isAttentionCheck,\r\n        answer: answer.substring(0, 50) + '...',\r\n        totalResponses: state.responses.size\r\n      });\r\n\r\n      await saveResponse(response);\r\n      \r\n      setShowSuccess(true);\r\n      setTimeout(() => setShowSuccess(false), 2000);\r\n      return true;\r\n      \r\n    } catch (error) {\r\n      console.error('SAVE ERROR:', error);\r\n      throw error;\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!validateForm() || !currentQuestionData || !state.sessionId) {\r\n      console.log('Validation failed:', errors);\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const qualityAnalysis = analyzeResponseQuality(answer);\r\n      return await performSave(qualityAnalysis);\r\n    } catch (error) {\r\n      console.error('Save failed:', error);\r\n      alert('Failed to save response. Please try again.');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // UPDATED handleNext to properly handle attention check completion\r\n  const handleNext = async () => {\r\n    const isValid = validateForm();\r\n    if (!isValid) {\r\n      console.log('Form validation failed, cannot proceed');\r\n      return;\r\n    }\r\n\r\n    // Check attention check validation FIRST\r\n    if (isAttentionCheck && attentionCheck) {\r\n      const expectedAnswers = attentionCheck.expectedAnswers || [attentionCheck.expectedAnswer];\r\n      const isAttentionCheckValid = validateAttentionCheck(answer, expectedAnswers);\r\n      \r\n      console.log('ATTENTION CHECK VALIDATION:', {\r\n        userAnswer: answer,\r\n        expectedAnswers: expectedAnswers,\r\n        isValid: isAttentionCheckValid,\r\n        attentionCheckType: attentionCheck.type\r\n      });\r\n      \r\n      if (!isAttentionCheckValid) {\r\n        console.log('❌ ATTENTION CHECK FAILED - Redirecting to completion');\r\n        \r\n        // Save the failed response for record keeping\r\n        try {\r\n          await performSave();\r\n          console.log('Failed attention check response saved');\r\n        } catch (error) {\r\n          console.error('Error saving failed attention check:', error);\r\n        }\r\n        \r\n        // Mark survey as completed due to attention check failure\r\n        if (state.sessionId) {\r\n          try {\r\n            await api.completeUser(state.sessionId, 'attention_check_failed');\r\n            console.log('Survey marked as completed due to attention check failure');\r\n          } catch (error) {\r\n            console.error('Error marking survey completed:', error);\r\n          }\r\n        }\r\n        \r\n        // Set the attention check failed state\r\n        dispatch({ type: 'SET_ATTENTION_CHECK_FAILED', payload: true });\r\n        \r\n        return; // Stop here\r\n      } else {\r\n        console.log('✅ ATTENTION CHECK PASSED');\r\n        \r\n        // Save the attention check response\r\n        try {\r\n          await performSave();\r\n          console.log('Attention check response saved');\r\n        } catch (error) {\r\n          console.error('Error saving attention check:', error);\r\n        }\r\n        \r\n        // Reset attention check state and go back to the pending question\r\n        setIsAttentionCheck(false);\r\n        setAttentionCheck(null);\r\n        \r\n        // Navigate back to the pending question if it exists\r\n        if (pendingQuestion) {\r\n          console.log('🔄 Returning to pending question:', pendingQuestion.questionData.questionId);\r\n          \r\n          // Navigate back to the pending question position\r\n          setNavigationDirection('next');\r\n          setIsNavigating(true);\r\n          \r\n          setTimeout(async () => {\r\n            await navigateToPosition(\r\n              pendingQuestion.position.categoryIndex,\r\n              pendingQuestion.position.subcategoryIndex, \r\n              pendingQuestion.position.topicIndex,\r\n              pendingQuestion.position.questionIndex\r\n            );\r\n            setIsNavigating(false);\r\n          }, 300);\r\n          \r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Regular flow continues...\r\n    try {\r\n      const saveSuccessful = await handleSave();\r\n      \r\n      if (saveSuccessful && isValid) {\r\n        const milestone = checkForMilestones();\r\n        \r\n        setNavigationDirection('next');\r\n        setIsNavigating(true);\r\n        \r\n        setTimeout(() => {\r\n          navigateToNext();\r\n          \r\n          if (milestone && !isAttentionCheck) {\r\n            setShowCelebration({type: milestone.type, data: milestone});\r\n          }\r\n        }, 300);\r\n      }\r\n    } catch (error) {\r\n      console.error('Next navigation failed:', error);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    setNavigationDirection('previous');\r\n    setIsNavigating(true);\r\n    \r\n    setTimeout(() => {\r\n      navigateToPrevious();\r\n    }, 300);\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    if (isAttentionCheck) return; // Don't allow skipping attention checks\r\n    \r\n    setAnswer('');\r\n    setErrors({});\r\n    \r\n    setNavigationDirection('next');\r\n    setIsNavigating(true);\r\n    \r\n    setTimeout(() => {\r\n      navigateToNext();\r\n    }, 300);\r\n  };\r\n\r\n  const handleQualityModalClose = () => {\r\n    console.log('Quality modal closed - user will improve response');\r\n    setShowQualityModal(false);\r\n    \r\n    setAnswer('');\r\n    setErrors({});\r\n    \r\n    setTimeout(() => {\r\n      if (textareaRef.current) {\r\n        textareaRef.current.focus();\r\n      }\r\n    }, 100);\r\n  };\r\n\r\n  const closeCelebration = () => {\r\n    setShowCelebration(null);\r\n  };\r\n\r\n  if (!currentQuestionData) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-100 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Loading question...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // If survey has expired, don't render the question form\r\n  if (state.surveyExpired) {\r\n    return null; // App.tsx will handle showing SurveyExpired component\r\n  }\r\n\r\n  const isFirstQuestion = state.currentPosition.categoryIndex === 0 && \r\n                         state.currentPosition.subcategoryIndex === 0 && \r\n                         state.currentPosition.topicIndex === 0 && \r\n                         state.currentPosition.questionIndex === 0;\r\n\r\n  const isFormValid = answer.trim().length >= 4;\r\n\r\n  // For attention checks, use the attention check question\r\n  const displayQuestion = isAttentionCheck ? attentionCheck.question : currentQuestionData.question;\r\n\r\n  // At the end of QuestionForm component, before the return statement, add:\r\n  if (attentionCheckFailed) {\r\n    return null; // Let App.tsx handle showing the failure page\r\n  }\r\n\r\n  return (\r\n    <div \r\n      className=\"min-h-screen\"\r\n      style={{ \r\n        background: `linear-gradient(135deg, var(--bg-primary) 0%, var(--color-cream) 50%, var(--bg-secondary) 100%)` \r\n      }}\r\n    >\r\n      {/* Timer Components */}\r\n      <SurveyTimer />\r\n      \r\n      <ProgressBar />\r\n\r\n      {/* Quality Warning Modal (not shown for attention checks) */}\r\n      {!isAttentionCheck && (\r\n        <QualityWarningModal\r\n          isOpen={showQualityModal}\r\n          onClose={handleQualityModalClose}\r\n          qualityIssues={qualityWarnings}\r\n          issueType={currentQualityIssue.type}\r\n          noneResponseRate={currentQualityIssue.noneRate}\r\n          gibberishResponseRate={currentQualityIssue.gibberishRate}\r\n          fastResponseRate={currentQualityIssue.speedRate}\r\n        />\r\n      )}\r\n      \r\n      {/* Celebration Modal */}\r\n      {showCelebration && (\r\n        <CelebrationModal \r\n          celebration={showCelebration} \r\n          onClose={closeCelebration}\r\n        />\r\n      )}\r\n      \r\n      <div className=\"max-w-4xl mx-auto px-4 py-6\">\r\n        {/* Question Card Container */}\r\n        <div className=\"relative overflow-hidden\">\r\n          <div className={`transform transition-all duration-500 ease-in-out ${\r\n            isNavigating \r\n              ? navigationDirection === 'next' \r\n                ? '-translate-x-full opacity-0'\r\n                : 'translate-x-full opacity-0'\r\n              : 'translate-x-0 opacity-100'\r\n          }`}>\r\n\r\n            {/* Main Question Card - SIMPLIFIED */}\r\n            <div \r\n              className=\"backdrop-blur-sm rounded-2xl shadow-lg overflow-hidden\"\r\n              style={{ \r\n                backgroundColor: 'var(--bg-card)',\r\n                border: '1px solid var(--border-light)'\r\n              }}\r\n            >\r\n              \r\n              {/* Question Header - Show attention check indicator */}\r\n              <div \r\n                className=\"p-6\"\r\n                style={{ \r\n                  background: isAttentionCheck ? '#ef4444' : 'var(--bg-card-header)',\r\n                  color: 'var(--text-on-dark)'\r\n                }}\r\n              >\r\n                {isAttentionCheck && (\r\n                  <div className=\"mb-3 text-sm font-medium text-white/90\">\r\n                    🔍 Attention Check\r\n                  </div>\r\n                )}\r\n                <h2 className=\"text-lg md:text-xl font-medium leading-relaxed\">\r\n                  {displayQuestion}\r\n                </h2>\r\n              </div>\r\n\r\n              {/* Answer Section */}\r\n              <div className=\"p-6\">\r\n                <div className=\"mb-6\">\r\n                  <div className=\"flex justify-between items-center mb-3\">\r\n                    <label \r\n                      className=\"block text-base font-medium\"\r\n                      style={{ color: 'var(--text-primary)' }}\r\n                    >\r\n                      <span>Your Answer *</span>\r\n                      <span \r\n                        className=\"block text-xs font-normal mt-1\"\r\n                        style={{ color: 'var(--text-secondary)' }}\r\n                      >\r\n                        You can specify \"none\" if no answer exists\r\n                      </span>\r\n                    </label>\r\n                    <button\r\n                      onClick={handleClear}\r\n                      className=\"text-sm font-medium hover:underline transition-colors\"\r\n                      style={{ color: 'var(--accent-warning)' }}\r\n                    >\r\n                      Clear Form\r\n                    </button>\r\n                  </div>\r\n                  \r\n                  {/* Regular Question Textarea - same for both regular and attention checks */}\r\n                  <div className=\"relative\">\r\n                    <textarea\r\n                      ref={textareaRef}\r\n                      value={answer}\r\n                      onChange={handleAnswerChange}\r\n                      placeholder=\"Share your knowledge about cultural practices in your region, or specify 'none' if no answer exists...\"\r\n                      className={`w-full px-4 py-3 border-2 rounded-xl resize-none min-h-[120px] transition-all duration-200 ${\r\n                        errors.answer ? 'focus:border-red-400' : ''\r\n                      }`}\r\n                      style={{\r\n                        color: 'var(--text-primary)',\r\n                        borderColor: errors.answer ? 'var(--accent-error)' : 'var(--border-medium)',\r\n                        backgroundColor: 'rgba(244, 228, 202, 0.3)'\r\n                      }}\r\n                      maxLength={5000}\r\n                      disabled={isSaving}\r\n                    />\r\n                    \r\n                    <div \r\n                      className={`absolute bottom-3 right-3 px-2 py-1 rounded-lg text-xs border`}\r\n                      style={{\r\n                        backgroundColor: answer.length >= 4 ? 'var(--color-cream)' : '#fef3c7',\r\n                        color: answer.length >= 4 ? 'var(--text-secondary)' : 'var(--accent-warning)',\r\n                        borderColor: answer.length >= 4 ? 'var(--border-light)' : '#fbbf24'\r\n                      }}\r\n                    >\r\n                      {answer.length}/5000 {answer.length < 4 && `(${4 - answer.length} more needed)`}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {errors.answer && (\r\n                    <p className=\"text-sm mt-2 font-medium\" style={{ color: 'var(--accent-error)' }}>\r\n                      {errors.answer}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Real-time Quality Warnings (for regular questions only) */}\r\n                {!isAttentionCheck && qualityWarnings.length > 0 && (\r\n                  <div \r\n                    className=\"mb-4 p-3 border rounded-xl\"\r\n                    style={{ \r\n                      background: 'var(--btn-warning-bg)',\r\n                      borderColor: '#fbbf24'\r\n                    }}\r\n                  >\r\n                    <div className=\"flex items-start\">\r\n                      <span style={{ color: 'var(--accent-warning)' }} className=\"mr-2\">⚠️</span>\r\n                      <div className=\"text-sm\" style={{ color: '#92400e' }}>\r\n                        <p className=\"font-medium mb-1\">Response Quality Notice:</p>\r\n                        <ul className=\"text-xs space-y-1\">\r\n                          {qualityWarnings.map((warning, index) => (\r\n                            <li key={index}>• {warning}</li>\r\n                          ))}\r\n                        </ul>\r\n                        <p className=\"mt-2 font-medium\">\r\n                          Please provide detailed responses or specify \"none\" if not applicable.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Success Message */}\r\n                {showSuccess && (\r\n                  <div \r\n                    className=\"mb-4 p-3 border rounded-xl animate-bounce-in\"\r\n                    style={{ \r\n                      background: 'var(--accent-success)',\r\n                      borderColor: 'var(--border-dark)',\r\n                      color: 'var(--text-on-dark)'\r\n                    }}\r\n                  >\r\n                    <div className=\"flex items-center\">\r\n                      <span className=\"mr-2\">✨</span>\r\n                      <span className=\"font-medium text-sm\">Response saved successfully!</span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Validation Warning */}\r\n                {!isFormValid && (\r\n                  <div \r\n                    className=\"mb-4 p-3 border rounded-xl\"\r\n                    style={{ \r\n                      background: 'var(--btn-warning-bg)',\r\n                      borderColor: '#fbbf24'\r\n                    }}\r\n                  >\r\n                    <div className=\"flex items-start\">\r\n                      <span style={{ color: 'var(--accent-warning)' }} className=\"mr-2\">⚠️</span>\r\n                      <div className=\"text-sm\" style={{ color: '#92400e' }}>\r\n                        <p className=\"font-medium mb-1\">Please complete the following:</p>\r\n                        <ul className=\"text-xs space-y-1\">\r\n                          <li>• Add at least 4 characters to your answer or specify \"none\"</li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Navigation Buttons */}\r\n                <div \r\n                  className=\"flex justify-between items-center pt-4 border-t\"\r\n                  style={{ borderColor: 'var(--border-light)' }}\r\n                >\r\n                  <button\r\n                    onClick={handlePrevious}\r\n                    disabled={isFirstQuestion || isNavigating || isAttentionCheck}\r\n                    className=\"flex items-center px-4 py-2 font-medium rounded-xl transition-all duration-200 disabled:cursor-not-allowed text-sm disabled:opacity-50\"\r\n                    style={{ \r\n                      background: 'var(--btn-warning-bg)',\r\n                      color: '#92400e'\r\n                    }}\r\n                  >\r\n                    <span className=\"mr-2\">←</span>\r\n                    Previous\r\n                  </button>\r\n\r\n                  <div className=\"flex space-x-3\">\r\n                    {/* Hide skip for attention checks */}\r\n                    {!isAttentionCheck && (\r\n                      <button\r\n                        onClick={handleSkip}\r\n                        disabled={isNavigating}\r\n                        className=\"px-4 py-2 font-medium rounded-xl transition-all duration-200 text-sm\"\r\n                        style={{ \r\n                          background: 'var(--btn-warning-bg)',\r\n                          color: '#92400e'\r\n                        }}\r\n                      >\r\n                        Skip\r\n                      </button>\r\n                    )}\r\n\r\n                    <button\r\n                      onClick={handleSave}\r\n                      disabled={isSaving || !isFormValid || isNavigating}\r\n                      className=\"px-4 py-2 font-medium rounded-xl transition-all duration-200 disabled:cursor-not-allowed text-sm disabled:opacity-50\"\r\n                      style={{ \r\n                        background: 'var(--btn-secondary-bg)',\r\n                        color: 'var(--text-on-dark)'\r\n                      }}\r\n                    >\r\n                      {isSaving ? 'Saving...' : 'Save'}\r\n                    </button>\r\n\r\n                    <button\r\n                      onClick={handleNext}\r\n                      disabled={isSaving || !isFormValid || isNavigating}\r\n                      className=\"flex items-center px-5 py-2 font-medium rounded-xl transition-all duration-200 disabled:cursor-not-allowed text-sm disabled:opacity-50\"\r\n                      style={{ \r\n                        background: 'var(--btn-primary-bg)',\r\n                        color: 'var(--text-on-dark)'\r\n                      }}\r\n                    >\r\n                      {isNavigating ? 'Moving...' : (\r\n                        <>\r\n                          Save & Continue\r\n                          <span className=\"ml-2\">→</span>\r\n                        </>\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Celebration Modal Component (simplified)\r\nfunction CelebrationModal({ celebration, onClose }: { \r\n  celebration: {type: string, data: any}, \r\n  onClose: () => void \r\n}) {\r\n  const celebrations = {\r\n    topic: {\r\n      icon: '🎯',\r\n      title: 'Section Completed!',\r\n      message: 'Great progress! Keep going!'\r\n    },\r\n    subcategory: {\r\n      icon: '🏆',\r\n      title: 'Section Mastered!',\r\n      message: 'Excellent work! Moving to next section!'\r\n    },\r\n    category: {\r\n      icon: '👑',\r\n      title: 'Major Section Complete!',\r\n      message: 'Outstanding! You\\'re making great progress!'\r\n    }\r\n  };\r\n\r\n  const config = celebrations[celebration.type as keyof typeof celebrations];\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black/30 backdrop-blur-sm flex items-center justify-center z-50 animate-fade-in p-4\">\r\n      <div \r\n        className=\"rounded-2xl p-6 max-w-lg mx-auto text-center shadow-2xl animate-bounce-in\"\r\n        style={{ \r\n          backgroundColor: 'var(--bg-card)',\r\n          border: '1px solid var(--border-light)'\r\n        }}\r\n      >\r\n        <div className=\"text-5xl mb-3\">{config.icon}</div>\r\n        <h2 \r\n          className=\"text-2xl font-bold mb-3\"\r\n          style={{ color: 'var(--text-primary)' }}\r\n        >\r\n          {config.title}\r\n        </h2>\r\n        <p \r\n          className=\"text-lg mb-4\"\r\n          style={{ color: 'var(--text-secondary)' }}\r\n        >\r\n          {config.message}\r\n        </p>\r\n        <button\r\n          onClick={onClose}\r\n          className=\"px-6 py-2 font-medium rounded-xl transition-all duration-200\"\r\n          style={{ \r\n            background: 'var(--btn-primary-bg)',\r\n            color: 'var(--text-on-dark)'\r\n          }}\r\n        >\r\n          Continue Survey\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}