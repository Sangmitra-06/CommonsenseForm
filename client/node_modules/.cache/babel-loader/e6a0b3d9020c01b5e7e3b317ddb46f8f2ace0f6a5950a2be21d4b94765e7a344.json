{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:5000';const api=axios.create({baseURL:API_BASE_URL,timeout:30000,headers:{'Content-Type':'application/json'}});// Request interceptor for logging\napi.interceptors.request.use(config=>{var _config$method;console.log(\"Making \".concat((_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase(),\" request to \").concat(config.url));console.log('Request data:',config.data);return config;},error=>{console.error('Request error:',error);return Promise.reject(error);});// Response interceptor for error handling\napi.interceptors.response.use(response=>{console.log('Response received:',response.status,response.data);return response;},error=>{var _error$response,_error$response2,_error$response3,_error$response4,_error$response5,_error$response6,_error$response7,_error$response7$data;console.error('Response error:',((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);console.error('Error status:',(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status);console.error('Error config:',error.config);if(((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.status)===429){throw new Error('Too many requests. Please wait a moment and try again.');}if(((_error$response4=error.response)===null||_error$response4===void 0?void 0:_error$response4.status)>=500){throw new Error('Server error. Please try again later.');}if(((_error$response5=error.response)===null||_error$response5===void 0?void 0:_error$response5.status)===404){throw new Error('Session not found. Please start over.');}if(((_error$response6=error.response)===null||_error$response6===void 0?void 0:_error$response6.status)===400){var _error$response$data,_error$response$data2,_error$response$data3,_error$response$data4;const errorMessage=((_error$response$data=error.response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||((_error$response$data2=error.response.data)===null||_error$response$data2===void 0?void 0:(_error$response$data3=_error$response$data2.errors)===null||_error$response$data3===void 0?void 0:(_error$response$data4=_error$response$data3[0])===null||_error$response$data4===void 0?void 0:_error$response$data4.msg)||'Bad request';throw new Error(errorMessage);}throw new Error(((_error$response7=error.response)===null||_error$response7===void 0?void 0:(_error$response7$data=_error$response7.data)===null||_error$response7$data===void 0?void 0:_error$response7$data.error)||'An unexpected error occurred');});export const createUser=async userInfo=>{try{console.log('Creating user with info:',userInfo);const response=await api.post('/api/users',userInfo);return response.data;}catch(error){console.error('Failed to create user:',error);throw error;}};export const getUser=async sessionId=>{const response=await api.get(\"/api/users/\".concat(sessionId));return response.data;};export const updateUserProgress=async(sessionId,progress)=>{const response=await api.put(\"/api/users/\".concat(sessionId,\"/progress\"),progress);return response.data;};export const completeUser=async sessionId=>{const response=await api.put(\"/api/users/\".concat(sessionId,\"/complete\"));return response.data;};export const saveResponse=async response=>{const apiResponse=await api.post('/api/responses',response);return apiResponse.data;};export const saveResponsesBatch=async(sessionId,responses)=>{const apiResponse=await api.post('/api/responses/batch',{sessionId,responses});return apiResponse.data;};export const getUserResponses=async sessionId=>{const response=await api.get(\"/api/responses/\".concat(sessionId));return response.data;};export const checkHealth=async()=>{const response=await api.get('/api/health');return response.data;};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","_config$method","console","log","concat","method","toUpperCase","url","data","error","Promise","reject","response","status","_error$response","_error$response2","_error$response3","_error$response4","_error$response5","_error$response6","_error$response7","_error$response7$data","message","Error","_error$response$data","_error$response$data2","_error$response$data3","_error$response$data4","errorMessage","errors","msg","createUser","userInfo","post","getUser","sessionId","get","updateUserProgress","progress","put","completeUser","saveResponse","apiResponse","saveResponsesBatch","responses","getUserResponses","checkHealth"],"sources":["C:/Users/sangm/OneDrive - Brock University/CommonsenseForm/client/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { UserInfo, QuestionResponse } from '../types/index.ts';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor for logging\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log(`Making ${config.method?.toUpperCase()} request to ${config.url}`);\r\n    console.log('Request data:', config.data);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('Request error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log('Response received:', response.status, response.data);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('Response error:', error.response?.data || error.message);\r\n    console.error('Error status:', error.response?.status);\r\n    console.error('Error config:', error.config);\r\n    \r\n    if (error.response?.status === 429) {\r\n      throw new Error('Too many requests. Please wait a moment and try again.');\r\n    }\r\n    \r\n    if (error.response?.status >= 500) {\r\n      throw new Error('Server error. Please try again later.');\r\n    }\r\n    \r\n    if (error.response?.status === 404) {\r\n      throw new Error('Session not found. Please start over.');\r\n    }\r\n    \r\n    if (error.response?.status === 400) {\r\n      const errorMessage = error.response.data?.error || error.response.data?.errors?.[0]?.msg || 'Bad request';\r\n      throw new Error(errorMessage);\r\n    }\r\n    \r\n    throw new Error(error.response?.data?.error || 'An unexpected error occurred');\r\n  }\r\n);\r\n\r\nexport const createUser = async (userInfo: UserInfo) => {\r\n  try {\r\n    console.log('Creating user with info:', userInfo);\r\n    const response = await api.post('/api/users', userInfo);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Failed to create user:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getUser = async (sessionId: string) => {\r\n  const response = await api.get(`/api/users/${sessionId}`);\r\n  return response.data;\r\n};\r\n\r\nexport const updateUserProgress = async (sessionId: string, progress: any) => {\r\n  const response = await api.put(`/api/users/${sessionId}/progress`, progress);\r\n  return response.data;\r\n};\r\n\r\nexport const completeUser = async (sessionId: string) => {\r\n  const response = await api.put(`/api/users/${sessionId}/complete`);\r\n  return response.data;\r\n};\r\n\r\nexport const saveResponse = async (response: QuestionResponse) => {\r\n  const apiResponse = await api.post('/api/responses', response);\r\n  return apiResponse.data;\r\n};\r\n\r\nexport const saveResponsesBatch = async (sessionId: string, responses: QuestionResponse[]) => {\r\n  const apiResponse = await api.post('/api/responses/batch', { sessionId, responses });\r\n  return apiResponse.data;\r\n};\r\n\r\nexport const getUserResponses = async (sessionId: string) => {\r\n  const response = await api.get(`/api/responses/${sessionId}`);\r\n  return response.data;\r\n};\r\n\r\nexport const checkHealth = async () => {\r\n  const response = await api.get('/api/health');\r\n  return response.data;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}