{"ast":null,"code":"import React,{useState,useEffect}from'react';import{FormProvider,useForm}from'./context/FormContext.tsx';import IntroductionWelcome from'./components/IntroductionWelcome.tsx';import IntroductionStructure from'./components/IntroductionStructure.tsx';import UserInfo from'./components/UserInfo.tsx';import QuestionForm from'./components/QuestionForm.tsx';import CompletionPage from'./components/CompletionPage.tsx';import SurveyExpired from'./components/SurveyExpired.tsx';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function AppContent(){const{state,createUserSession,loadUserSession}=useForm();const[currentStage,setCurrentStage]=useState('welcome');const[isInitializing,setIsInitializing]=useState(true);const[hasCheckedSession,setHasCheckedSession]=useState(false);const[hasExistingSession,setHasExistingSession]=useState(false);const[existingSessionId,setExistingSessionId]=useState(null);// NEW: Check for attention check failure\nuseEffect(()=>{if(state.attentionCheckFailed){setCurrentStage('attentionFailed');}},[state.attentionCheckFailed]);// Wait for questions data to load\nuseEffect(()=>{if(state.questionsData.length>0&&!hasCheckedSession&&!state.isLoading){const checkExistingSession=async()=>{console.log('App: Checking for existing session...');// For one-sitting surveys, always clear old sessions\nconst savedSessionId=localStorage.getItem('culturalSurveySessionId');const savedStartTime=localStorage.getItem('culturalSurveyStartTime');if(savedSessionId||savedStartTime){console.log('App: Clearing previous session (one-sitting requirement)');localStorage.removeItem('culturalSurveySessionId');localStorage.removeItem('culturalSurveyStartTime');setHasExistingSession(false);}setHasCheckedSession(true);setIsInitializing(false);};checkExistingSession();}},[state.questionsData.length,state.isLoading,hasCheckedSession]);// Add this useEffect to handle page reloads\nuseEffect(()=>{const handleBeforeUnload=e=>{// Show warning if survey is in progress\nif(state.sessionId&&!state.isCompleted&&!state.surveyExpired&&!state.attentionCheckFailed){e.preventDefault();e.returnValue='Your survey progress will be lost. Are you sure you want to leave?';return'Your survey progress will be lost. Are you sure you want to leave?';}};const handleUnload=()=>{// Clear session data on page unload\nif(state.sessionId&&!state.isCompleted){localStorage.removeItem('culturalSurveySessionId');localStorage.removeItem('culturalSurveyStartTime');}};window.addEventListener('beforeunload',handleBeforeUnload);window.addEventListener('unload',handleUnload);return()=>{window.removeEventListener('beforeunload',handleBeforeUnload);window.removeEventListener('unload',handleUnload);};},[state.sessionId,state.isCompleted,state.surveyExpired,state.attentionCheckFailed]);// Update stage based on form state\nuseEffect(()=>{if(!hasCheckedSession)return;if(state.attentionCheckFailed){setCurrentStage('attentionFailed');}else if(state.surveyExpired){setCurrentStage('expired');}else if(state.isCompleted){setCurrentStage('completed');}else if(state.sessionId&&state.userInfo){setCurrentStage('questions');}},[state.attentionCheckFailed,state.surveyExpired,state.isCompleted,state.sessionId,state.userInfo,hasCheckedSession]);const handleWelcomeContinue=()=>{setCurrentStage('structure');};const handleStartNewSurvey=()=>{if(hasExistingSession){localStorage.removeItem('culturalSurveySessionId');localStorage.removeItem('culturalSurveyStartTime');setHasExistingSession(false);setExistingSessionId(null);}setCurrentStage('userInfo');};const handleResumeSurvey=async()=>{if(existingSessionId){try{console.log('Resuming survey with session:',existingSessionId);await loadUserSession(existingSessionId);setCurrentStage('questions');}catch(error){console.error('Failed to resume session:',error);localStorage.removeItem('culturalSurveySessionId');localStorage.removeItem('culturalSurveyStartTime');setHasExistingSession(false);setExistingSessionId(null);alert('Unable to resume previous session. Starting fresh.');setCurrentStage('userInfo');}}};const handleUserInfoSubmit=async userInfo=>{try{await createUserSession(userInfo);setCurrentStage('questions');}catch(error){console.error('Failed to create user session:',error);}};if(isInitializing||state.questionsData.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-100 flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:state.questionsData.length===0?'Loading survey questions...':'Checking for existing survey...'}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500 mt-2\",children:[\"Questions loaded: \",state.questionsData.length,\" categories\"]})]})});}if(state.error){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-red-50 flex items-center justify-center p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-md mx-auto bg-white rounded-lg shadow-lg p-6 text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-red-600 text-4xl mb-4\",children:\"\\u26A0\\uFE0F\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold text-red-800 mb-2\",children:\"Error\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-red-600 mb-4\",children:state.error}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>window.location.reload(),className:\"bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\",children:\"Reload Page\"})]})});}if(state.attentionCheckFailed){return/*#__PURE__*/_jsx(CompletionPage,{isAttentionCheckFailure:true});}switch(currentStage){case'welcome':return/*#__PURE__*/_jsx(IntroductionWelcome,{onContinue:handleWelcomeContinue});case'structure':return/*#__PURE__*/_jsx(IntroductionStructure,{onStartNew:handleStartNewSurvey,onResume:handleResumeSurvey,hasExistingSession:hasExistingSession});case'userInfo':return/*#__PURE__*/_jsx(UserInfo,{onSubmit:handleUserInfoSubmit,isLoading:state.isLoading});case'questions':return/*#__PURE__*/_jsx(QuestionForm,{});case'completed':return/*#__PURE__*/_jsx(CompletionPage,{});case'attentionFailed':return/*#__PURE__*/_jsx(CompletionPage,{isAttentionCheckFailure:true});case'expired':return/*#__PURE__*/_jsx(SurveyExpired,{});default:return/*#__PURE__*/_jsx(IntroductionWelcome,{onContinue:handleWelcomeContinue});}}function App(){return/*#__PURE__*/_jsx(FormProvider,{children:/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(AppContent,{})})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","FormProvider","useForm","IntroductionWelcome","IntroductionStructure","UserInfo","QuestionForm","CompletionPage","SurveyExpired","jsx","_jsx","jsxs","_jsxs","AppContent","state","createUserSession","loadUserSession","currentStage","setCurrentStage","isInitializing","setIsInitializing","hasCheckedSession","setHasCheckedSession","hasExistingSession","setHasExistingSession","existingSessionId","setExistingSessionId","attentionCheckFailed","questionsData","length","isLoading","checkExistingSession","console","log","savedSessionId","localStorage","getItem","savedStartTime","removeItem","handleBeforeUnload","e","sessionId","isCompleted","surveyExpired","preventDefault","returnValue","handleUnload","window","addEventListener","removeEventListener","userInfo","handleWelcomeContinue","handleStartNewSurvey","handleResumeSurvey","error","alert","handleUserInfoSubmit","className","children","onClick","location","reload","isAttentionCheckFailure","onContinue","onStartNew","onResume","onSubmit","App"],"sources":["C:/Users/sangm/OneDrive - Brock University/CommonsenseForm/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FormProvider, useForm } from './context/FormContext.tsx';\r\nimport IntroductionWelcome from './components/IntroductionWelcome.tsx';\r\nimport IntroductionStructure from './components/IntroductionStructure.tsx';\r\nimport UserInfo from './components/UserInfo.tsx';\r\nimport QuestionForm from './components/QuestionForm.tsx';\r\nimport CompletionPage from './components/CompletionPage.tsx';\r\nimport SurveyExpired from './components/SurveyExpired.tsx';\r\nimport './App.css';\r\n\r\ntype AppStage = 'welcome' | 'structure' | 'userInfo' | 'questions' | 'completed' | 'expired' | 'attentionFailed';\r\n\r\nfunction AppContent() {\r\n  const { state, createUserSession, loadUserSession } = useForm();\r\n  const [currentStage, setCurrentStage] = useState<AppStage>('welcome');\r\n  const [isInitializing, setIsInitializing] = useState(true);\r\n  const [hasCheckedSession, setHasCheckedSession] = useState(false);\r\n  const [hasExistingSession, setHasExistingSession] = useState(false);\r\n  const [existingSessionId, setExistingSessionId] = useState<string | null>(null);\r\n\r\n  // NEW: Check for attention check failure\r\n  useEffect(() => {\r\n    if (state.attentionCheckFailed) {\r\n      setCurrentStage('attentionFailed');\r\n    }\r\n  }, [state.attentionCheckFailed]);\r\n\r\n  // Wait for questions data to load\r\n  useEffect(() => {\r\n    if (state.questionsData.length > 0 && !hasCheckedSession && !state.isLoading) {\r\n      const checkExistingSession = async () => {\r\n        console.log('App: Checking for existing session...');\r\n        \r\n        // For one-sitting surveys, always clear old sessions\r\n        const savedSessionId = localStorage.getItem('culturalSurveySessionId');\r\n        const savedStartTime = localStorage.getItem('culturalSurveyStartTime');\r\n        \r\n        if (savedSessionId || savedStartTime) {\r\n          console.log('App: Clearing previous session (one-sitting requirement)');\r\n          localStorage.removeItem('culturalSurveySessionId');\r\n          localStorage.removeItem('culturalSurveyStartTime');\r\n          setHasExistingSession(false);\r\n        }\r\n        \r\n        setHasCheckedSession(true);\r\n        setIsInitializing(false);\r\n      };\r\n\r\n      checkExistingSession();\r\n    }\r\n  }, [state.questionsData.length, state.isLoading, hasCheckedSession]);\r\n\r\n  // Add this useEffect to handle page reloads\r\n  useEffect(() => {\r\n    const handleBeforeUnload = (e: BeforeUnloadEvent) => {\r\n      // Show warning if survey is in progress\r\n      if (state.sessionId && !state.isCompleted && !state.surveyExpired && !state.attentionCheckFailed) {\r\n        e.preventDefault();\r\n        e.returnValue = 'Your survey progress will be lost. Are you sure you want to leave?';\r\n        return 'Your survey progress will be lost. Are you sure you want to leave?';\r\n      }\r\n    };\r\n\r\n    const handleUnload = () => {\r\n      // Clear session data on page unload\r\n      if (state.sessionId && !state.isCompleted) {\r\n        localStorage.removeItem('culturalSurveySessionId');\r\n        localStorage.removeItem('culturalSurveyStartTime');\r\n      }\r\n    };\r\n\r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n    window.addEventListener('unload', handleUnload);\r\n\r\n    return () => {\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n      window.removeEventListener('unload', handleUnload);\r\n    };\r\n  }, [state.sessionId, state.isCompleted, state.surveyExpired, state.attentionCheckFailed]);\r\n\r\n  // Update stage based on form state\r\n  useEffect(() => {\r\n    if (!hasCheckedSession) return;\r\n    \r\n    if (state.attentionCheckFailed) {\r\n      setCurrentStage('attentionFailed');\r\n    } else if (state.surveyExpired) {\r\n      setCurrentStage('expired');\r\n    } else if (state.isCompleted) {\r\n      setCurrentStage('completed');\r\n    } else if (state.sessionId && state.userInfo) {\r\n      setCurrentStage('questions');\r\n    }\r\n  }, [state.attentionCheckFailed, state.surveyExpired, state.isCompleted, state.sessionId, state.userInfo, hasCheckedSession]);\r\n\r\n  const handleWelcomeContinue = () => {\r\n    setCurrentStage('structure');\r\n  };\r\n\r\n  const handleStartNewSurvey = () => {\r\n    if (hasExistingSession) {\r\n      localStorage.removeItem('culturalSurveySessionId');\r\n      localStorage.removeItem('culturalSurveyStartTime');\r\n      setHasExistingSession(false);\r\n      setExistingSessionId(null);\r\n    }\r\n    setCurrentStage('userInfo');\r\n  };\r\n\r\n  const handleResumeSurvey = async () => {\r\n    if (existingSessionId) {\r\n      try {\r\n        console.log('Resuming survey with session:', existingSessionId);\r\n        await loadUserSession(existingSessionId);\r\n        setCurrentStage('questions');\r\n      } catch (error) {\r\n        console.error('Failed to resume session:', error);\r\n        localStorage.removeItem('culturalSurveySessionId');\r\n        localStorage.removeItem('culturalSurveyStartTime');\r\n        setHasExistingSession(false);\r\n        setExistingSessionId(null);\r\n        alert('Unable to resume previous session. Starting fresh.');\r\n        setCurrentStage('userInfo');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUserInfoSubmit = async (userInfo: any) => {\r\n    try {\r\n      await createUserSession(userInfo);\r\n      setCurrentStage('questions');\r\n    } catch (error) {\r\n      console.error('Failed to create user session:', error);\r\n    }\r\n  };\r\n\r\n  if (isInitializing || state.questionsData.length === 0) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-100 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">\r\n            {state.questionsData.length === 0 ? 'Loading survey questions...' : 'Checking for existing survey...'}\r\n          </p>\r\n          <p className=\"text-sm text-gray-500 mt-2\">\r\n            Questions loaded: {state.questionsData.length} categories\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (state.error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-red-50 flex items-center justify-center p-4\">\r\n        <div className=\"max-w-md mx-auto bg-white rounded-lg shadow-lg p-6 text-center\">\r\n          <div className=\"text-red-600 text-4xl mb-4\">⚠️</div>\r\n          <h2 className=\"text-xl font-bold text-red-800 mb-2\">Error</h2>\r\n          <p className=\"text-red-600 mb-4\">{state.error}</p>\r\n          <button\r\n            onClick={() => window.location.reload()}\r\n            className=\"bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\r\n          >\r\n            Reload Page\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (state.attentionCheckFailed) {\r\n  return <CompletionPage isAttentionCheckFailure={true} />;\r\n}\r\n\r\n  switch (currentStage) {\r\n    case 'welcome':\r\n      return <IntroductionWelcome onContinue={handleWelcomeContinue} />;\r\n    case 'structure':\r\n      return (\r\n        <IntroductionStructure \r\n          onStartNew={handleStartNewSurvey}\r\n          onResume={handleResumeSurvey}\r\n          hasExistingSession={hasExistingSession}\r\n        />\r\n      );\r\n    case 'userInfo':\r\n      return <UserInfo onSubmit={handleUserInfoSubmit} isLoading={state.isLoading} />;\r\n    case 'questions':\r\n      return <QuestionForm />;\r\n    case 'completed':\r\n      return <CompletionPage />;\r\n    case 'attentionFailed':\r\n      return <CompletionPage isAttentionCheckFailure={true} />;\r\n    case 'expired':\r\n      return <SurveyExpired />;\r\n    default:\r\n      return <IntroductionWelcome onContinue={handleWelcomeContinue} />;\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <FormProvider>\r\n      <div className=\"App\">\r\n        <AppContent />\r\n      </div>\r\n    </FormProvider>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}